<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20221.22.0324.2209                               -->
<workbook original-version='18.1' source-build='2022.1.0 (20221.22.0324.2209)' source-platform='mac' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <CascadingFilters />
    <DashboardGridOverlay />
    <Heatmap />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <repository-location id='Attendees_At_Events_MHW' path='/workbooks' revision='1.0' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='hacker_house_info_2022 (Miami_HW)' inline='true' name='federated.08p2aoo0msdhrx17tqk1o1ame7h1' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.02bi1a31acr10w1al016q01v8hq8'>
            <connection class='mysql' dbname='Miami_HW' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='mysql.02bi1a31acr10w1al016q01v8hq8' name='hacker_house_info_2022' table='[hacker_house_info_2022]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='mysql.02bi1a31acr10w1al016q01v8hq8' name='hacker_house_info_2022' table='[hacker_house_info_2022]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>house_name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[house_name]</local-name>
            <parent-name>[hacker_house_info_2022]</parent-name>
            <remote-alias>house_name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hacker_house_info_2022_4A535DC18E564128B3F4F1BE3F300020]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hacker_job</remote-name>
            <remote-type>130</remote-type>
            <local-name>[hacker_job]</local-name>
            <parent-name>[hacker_house_info_2022]</parent-name>
            <remote-alias>hacker_job</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hacker_house_info_2022_4A535DC18E564128B3F4F1BE3F300020]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>combo_count</remote-name>
            <remote-type>3</remote-type>
            <local-name>[combo_count]</local-name>
            <parent-name>[hacker_house_info_2022]</parent-name>
            <remote-alias>combo_count</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hacker_house_info_2022_4A535DC18E564128B3F4F1BE3F300020]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='hacker_house_info_2022' datatype='table' name='[__tableau_internal_object_id__].[hacker_house_info_2022_4A535DC18E564128B3F4F1BE3F300020]' role='measure' type='quantitative' />
      <column caption='Combo Count' datatype='integer' name='[combo_count]' role='measure' type='quantitative' />
      <column caption='Hacker Job' datatype='string' name='[hacker_job]' role='dimension' type='nominal' />
      <column caption='House Name' datatype='string' name='[house_name]' role='dimension' type='nominal' />
      <column-instance column='[hacker_job]' derivation='None' name='[none:hacker_job:nk]' pivot='key' type='nominal' />
      <column-instance column='[house_name]' derivation='None' name='[none:house_name:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Exclusions (Hacker Job,House Name)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[none:hacker_job:nk]' />
          <groupfilter function='level-members' level='[none:house_name:nk]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/pc3/Documents/My Tableau Repository/Datasources/MHW_2023/hacker_house_info_2022 (Miami_HW).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='03/06/2023 04:21:43 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='hacker_house_info_2022 (Miami_HW)' increment-value='%null%' refresh-type='create' rows-inserted='105' timestamp-start='2023-03-06 04:21:43.814' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>house_name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[house_name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>house_name</remote-alias>
              <ordinal>0</ordinal>
              <family>hacker_house_info_2022</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>27</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hacker_house_info_2022_4A535DC18E564128B3F4F1BE3F300020]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hacker_job</remote-name>
              <remote-type>129</remote-type>
              <local-name>[hacker_job]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>hacker_job</remote-alias>
              <ordinal>1</ordinal>
              <family>hacker_house_info_2022</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hacker_house_info_2022_4A535DC18E564128B3F4F1BE3F300020]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>combo_count</remote-name>
              <remote-type>20</remote-type>
              <local-name>[combo_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>combo_count</remote-alias>
              <ordinal>2</ordinal>
              <family>hacker_house_info_2022</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>25</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hacker_house_info_2022_4A535DC18E564128B3F4F1BE3F300020]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='1' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:hacker_job:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;busDev&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;engineer&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;designer&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;creative&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;marketerOrCommunityBuilder&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='hacker_house_info_2022' id='hacker_house_info_2022_4A535DC18E564128B3F4F1BE3F300020'>
            <properties context=''>
              <relation connection='mysql.02bi1a31acr10w1al016q01v8hq8' name='hacker_house_info_2022' table='[hacker_house_info_2022]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='all_luma_events_2023 (Miami_HW)' inline='true' name='federated.0awixag0ke6kmr1dppvn50uvwq87' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.13uw3in0m7gixs1crhyqw1bd1l8t'>
            <connection class='mysql' dbname='Miami_HW' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='mysql.13uw3in0m7gixs1crhyqw1bd1l8t' name='all_luma_events_2023' table='[all_luma_events_2023]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='mysql.13uw3in0m7gixs1crhyqw1bd1l8t' name='all_luma_events_2023' table='[all_luma_events_2023]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Emails</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Emails]</local-name>
            <parent-name>[all_luma_events_2023]</parent-name>
            <remote-alias>Emails</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16383</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_luma_events_2023_E8C799949B4647F6A65CC12A11367FC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>21_subs_total</remote-name>
            <remote-type>3</remote-type>
            <local-name>[21_subs_total]</local-name>
            <parent-name>[all_luma_events_2023]</parent-name>
            <remote-alias>21_subs_total</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_luma_events_2023_E8C799949B4647F6A65CC12A11367FC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>21_subs_at_events</remote-name>
            <remote-type>3</remote-type>
            <local-name>[21_subs_at_events]</local-name>
            <parent-name>[all_luma_events_2023]</parent-name>
            <remote-alias>21_subs_at_events</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_luma_events_2023_E8C799949B4647F6A65CC12A11367FC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>22_subs_total</remote-name>
            <remote-type>3</remote-type>
            <local-name>[22_subs_total]</local-name>
            <parent-name>[all_luma_events_2023]</parent-name>
            <remote-alias>22_subs_total</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_luma_events_2023_E8C799949B4647F6A65CC12A11367FC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>22_subs_at_events</remote-name>
            <remote-type>3</remote-type>
            <local-name>[22_subs_at_events]</local-name>
            <parent-name>[all_luma_events_2023]</parent-name>
            <remote-alias>22_subs_at_events</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_luma_events_2023_E8C799949B4647F6A65CC12A11367FC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>23_subs_total</remote-name>
            <remote-type>3</remote-type>
            <local-name>[23_subs_total]</local-name>
            <parent-name>[all_luma_events_2023]</parent-name>
            <remote-alias>23_subs_total</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_luma_events_2023_E8C799949B4647F6A65CC12A11367FC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>23_subs_at_events</remote-name>
            <remote-type>3</remote-type>
            <local-name>[23_subs_at_events]</local-name>
            <parent-name>[all_luma_events_2023]</parent-name>
            <remote-alias>23_subs_at_events</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_luma_events_2023_E8C799949B4647F6A65CC12A11367FC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='2022 @Luma' datatype='real' default-format='p0%' name='[2021 @Luma (copy)_5815202718361600002]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([22_subs_at_events]) / SUM([22_subs_total])' />
      </column>
      <column caption='2023 @Luma' datatype='real' default-format='p0%' name='[2022 @Luma (copy)_5815202718361866243]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([23_subs_at_events]) / SUM([23_subs_total])' />
      </column>
      <column caption='21 Subs At Events' datatype='integer' name='[21_subs_at_events]' role='measure' type='quantitative' />
      <column caption='21 Subs Total' datatype='integer' name='[21_subs_total]' role='measure' type='quantitative' />
      <column caption='22 Subs At Events' datatype='integer' name='[22_subs_at_events]' role='measure' type='quantitative' />
      <column caption='22 Subs Total' datatype='integer' name='[22_subs_total]' role='measure' type='quantitative' />
      <column caption='23 Subs At Events' datatype='integer' name='[23_subs_at_events]' role='measure' type='quantitative' />
      <column caption='23 Subs Total' datatype='integer' name='[23_subs_total]' role='measure' type='quantitative' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0awixag0ke6kmr1dppvn50uvwq87].[sum:21_subs_at_events:qk]&quot;' value='21&apos; Subs @Luma Event' />
          <alias key='&quot;[federated.0awixag0ke6kmr1dppvn50uvwq87].[sum:21_subs_total:qk]&quot;' value='21&apos; Subs @MHW 2023' />
          <alias key='&quot;[federated.0awixag0ke6kmr1dppvn50uvwq87].[sum:22_subs_at_events:qk]&quot;' value='22&apos; @Luma Event 2023' />
          <alias key='&quot;[federated.0awixag0ke6kmr1dppvn50uvwq87].[sum:22_subs_total:qk]&quot;' value='22&apos; @MHW 2023' />
          <alias key='&quot;[federated.0awixag0ke6kmr1dppvn50uvwq87].[sum:23_subs_at_events:qk]&quot;' value='23&apos; @Luma Event 2023' />
          <alias key='&quot;[federated.0awixag0ke6kmr1dppvn50uvwq87].[sum:23_subs_total:qk]&quot;' value='23&apos; @MHW 2023' />
        </aliases>
      </column>
      <column caption='2021 @Luma' datatype='real' default-format='p0%' name='[Calculation_5815202718360416257]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([21_subs_at_events]) / SUM([21_subs_total])' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='all_luma_events_2023' datatype='table' name='[__tableau_internal_object_id__].[all_luma_events_2023_E8C799949B4647F6A65CC12A11367FC2]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[all_luma_events_2023_E8C799949B4647F6A65CC12A11367FC2]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:all_luma_events_2023_E8C799949B4647F6A65CC12A11367FC2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[21_subs_at_events]' derivation='Sum' name='[sum:21_subs_at_events:qk]' pivot='key' type='quantitative' />
      <column-instance column='[21_subs_total]' derivation='Sum' name='[sum:21_subs_total:qk]' pivot='key' type='quantitative' />
      <column-instance column='[22_subs_at_events]' derivation='Sum' name='[sum:22_subs_at_events:qk]' pivot='key' type='quantitative' />
      <column-instance column='[22_subs_total]' derivation='Sum' name='[sum:22_subs_total:qk]' pivot='key' type='quantitative' />
      <column-instance column='[23_subs_at_events]' derivation='Sum' name='[sum:23_subs_at_events:qk]' pivot='key' type='quantitative' />
      <column-instance column='[23_subs_total]' derivation='Sum' name='[sum:23_subs_total:qk]' pivot='key' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/pc3/Documents/My Tableau Repository/Datasources/MHW_2023/all_luma_events_2023 (Miami_HW).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='03/06/2023 04:21:00 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='all_luma_events_2023 (Miami_HW)' increment-value='%null%' refresh-type='create' rows-inserted='3501' timestamp-start='2023-03-06 04:21:00.579' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Emails</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Emails]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Emails</remote-alias>
              <ordinal>0</ordinal>
              <family>all_luma_events_2023</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>942</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_luma_events_2023_E8C799949B4647F6A65CC12A11367FC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>21_subs_total</remote-name>
              <remote-type>20</remote-type>
              <local-name>[21_subs_total]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>21_subs_total</remote-alias>
              <ordinal>1</ordinal>
              <family>all_luma_events_2023</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_luma_events_2023_E8C799949B4647F6A65CC12A11367FC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>21_subs_at_events</remote-name>
              <remote-type>20</remote-type>
              <local-name>[21_subs_at_events]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>21_subs_at_events</remote-alias>
              <ordinal>2</ordinal>
              <family>all_luma_events_2023</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_luma_events_2023_E8C799949B4647F6A65CC12A11367FC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>22_subs_total</remote-name>
              <remote-type>20</remote-type>
              <local-name>[22_subs_total]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>22_subs_total</remote-alias>
              <ordinal>3</ordinal>
              <family>all_luma_events_2023</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_luma_events_2023_E8C799949B4647F6A65CC12A11367FC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>22_subs_at_events</remote-name>
              <remote-type>20</remote-type>
              <local-name>[22_subs_at_events]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>22_subs_at_events</remote-alias>
              <ordinal>4</ordinal>
              <family>all_luma_events_2023</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_luma_events_2023_E8C799949B4647F6A65CC12A11367FC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>23_subs_total</remote-name>
              <remote-type>20</remote-type>
              <local-name>[23_subs_total]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>23_subs_total</remote-alias>
              <ordinal>5</ordinal>
              <family>all_luma_events_2023</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_luma_events_2023_E8C799949B4647F6A65CC12A11367FC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>23_subs_at_events</remote-name>
              <remote-type>20</remote-type>
              <local-name>[23_subs_at_events]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>23_subs_at_events</remote-alias>
              <ordinal>6</ordinal>
              <family>all_luma_events_2023</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[all_luma_events_2023_E8C799949B4647F6A65CC12A11367FC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0awixag0ke6kmr1dppvn50uvwq87].[sum:21_subs_total:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0awixag0ke6kmr1dppvn50uvwq87].[sum:22_subs_total:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0awixag0ke6kmr1dppvn50uvwq87].[sum:23_subs_total:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0awixag0ke6kmr1dppvn50uvwq87].[sum:21_subs_at_events:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0awixag0ke6kmr1dppvn50uvwq87].[sum:22_subs_at_events:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0awixag0ke6kmr1dppvn50uvwq87].[sum:23_subs_at_events:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0awixag0ke6kmr1dppvn50uvwq87].[__tableau_internal_object_id__].[cnt:all_luma_events_2023_E8C799949B4647F6A65CC12A11367FC2:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='all_luma_events_2023' id='all_luma_events_2023_E8C799949B4647F6A65CC12A11367FC2'>
            <properties context=''>
              <relation connection='mysql.13uw3in0m7gixs1crhyqw1bd1l8t' name='all_luma_events_2023' table='[all_luma_events_2023]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='hacker_location_2022 (Miami_HW)' inline='true' name='federated.0p6qq6d05piqtx19z6lqv1ne1lzu' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.1qzz5xq1phx2h4172xk7013thwb1'>
            <connection class='mysql' dbname='Miami_HW' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='mysql.1qzz5xq1phx2h4172xk7013thwb1' name='hacker_location_2022' table='[hacker_location_2022]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='mysql.1qzz5xq1phx2h4172xk7013thwb1' name='hacker_location_2022' table='[hacker_location_2022]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>hacker_job</remote-name>
            <remote-type>130</remote-type>
            <local-name>[hacker_job]</local-name>
            <parent-name>[hacker_location_2022]</parent-name>
            <remote-alias>hacker_job</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hacker_location_2022_9835F50D493346B7997092377836FEFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hacker_location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[hacker_location]</local-name>
            <parent-name>[hacker_location_2022]</parent-name>
            <remote-alias>hacker_location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hacker_location_2022_9835F50D493346B7997092377836FEFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[hacker_location_2022]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hacker_location_2022_9835F50D493346B7997092377836FEFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[hacker_location_2022]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hacker_location_2022_9835F50D493346B7997092377836FEFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[hacker_location_2022]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>50</width>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hacker_location_2022_9835F50D493346B7997092377836FEFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>combo_count</remote-name>
            <remote-type>3</remote-type>
            <local-name>[combo_count]</local-name>
            <parent-name>[hacker_location_2022]</parent-name>
            <remote-alias>combo_count</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hacker_location_2022_9835F50D493346B7997092377836FEFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Calculation1' datatype='integer' name='[Calculation_1741696853404516354]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNT(IF [City]=[City] then [combo_count] END)' />
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <semantic-values semantic-role='[Geographical].[Latitude]'>
          <semantic-value key='&quot;Alexandria&quot;' value='38.820450000000001' />
          <semantic-value key='&quot;Ames&quot;' value='42.030799999999999' />
          <semantic-value key='&quot;Andover&quot;' value='42.658299999999997' />
          <semantic-value key='&quot;Annandale&quot;' value='38.830399999999997' />
          <semantic-value key='&quot;Arlington&quot;' value='32.735700000000001' />
          <semantic-value key='&quot;Athens&quot;' value='33.951900000000002' />
          <semantic-value key='&quot;Atlanta&quot;' value='33.748800000000003' />
          <semantic-value key='&quot;Austin&quot;' value='30.267199999999999' />
          <semantic-value key='&quot;Avon&quot;' value='39.762799999999999' />
          <semantic-value key='&quot;Baltimore&quot;' value='39.290399999999998' />
          <semantic-value key='&quot;Bay City&quot;' value='43.594499999999996' />
          <semantic-value key='&quot;Beachwood&quot;' value='41.464500000000001' />
          <semantic-value key='&quot;Bellingham&quot;' value='48.751899999999999' />
          <semantic-value key='&quot;Berkeley&quot;' value='37.871499999999997' />
          <semantic-value key='&quot;Bethany&quot;' value='35.518700000000003' />
          <semantic-value key='&quot;Bethlehem&quot;' value='40.625900000000001' />
          <semantic-value key='&quot;Blacksburg&quot;' value='37.229599999999998' />
          <semantic-value key='&quot;Boston&quot;' value='42.360100000000003' />
          <semantic-value key='&quot;Boulder&quot;' value='40.015000000000001' />
          <semantic-value key='&quot;Bowie&quot;' value='39.006799999999998' />
          <semantic-value key='&quot;Brooklyn&quot;' value='40.678199999999997' />
          <semantic-value key='&quot;Burlington&quot;' value='44.475900000000003' />
          <semantic-value key='&quot;Cambridge&quot;' value='42.373600000000003' />
          <semantic-value key='&quot;Canton&quot;' value='40.798900000000003' />
          <semantic-value key='&quot;Charlotte&quot;' value='35.2271' />
          <semantic-value key='&quot;Charlottesville&quot;' value='38.029299999999999' />
          <semantic-value key='&quot;Cincinnati&quot;' value='39.103099999999998' />
          <semantic-value key='&quot;Columbia&quot;' value='34.000700000000002' />
          <semantic-value key='&quot;Columbus&quot;' value='39.961199999999998' />
          <semantic-value key='&quot;Covington&quot;' value='33.596800000000002' />
          <semantic-value key='&quot;Dallas&quot;' value='32.776699999999998' />
          <semantic-value key='&quot;Dayton&quot;' value='39.758899999999997' />
          <semantic-value key='&quot;Decatur&quot;' value='33.774799999999999' />
          <semantic-value key='&quot;Denton&quot;' value='33.214799999999997' />
          <semantic-value key='&quot;Denver&quot;' value='39.739199999999997' />
          <semantic-value key='&quot;Detroit&quot;' value='42.331400000000002' />
          <semantic-value key='&quot;Durham&quot;' value='35.994' />
          <semantic-value key='&quot;East Brunswick&quot;' value='40.431699999999999' />
          <semantic-value key='&quot;Epping&quot;' value='43.0535' />
          <semantic-value key='&quot;Evanston&quot;' value='42.045099999999998' />
          <semantic-value key='&quot;Fairfax&quot;' value='38.846200000000003' />
          <semantic-value key='&quot;Fairfield&quot;' value='41.140799999999999' />
          <semantic-value key='&quot;Fremont&quot;' value='37.548499999999997' />
          <semantic-value key='&quot;Gainesville&quot;' value='29.651599999999998' />
          <semantic-value key='&quot;Glen Rock&quot;' value='40.962899999999998' />
          <semantic-value key='&quot;Golden Valley&quot;' value='44.991700000000002' />
          <semantic-value key='&quot;Hagerstown&quot;' value='39.641800000000003' />
          <semantic-value key='&quot;Helena&quot;' value='46.589100000000002' />
          <semantic-value key='&quot;Hernando&quot;' value='34.823985999999998' />
          <semantic-value key='&quot;Hollywood&quot;' value='26.011199999999999' />
          <semantic-value key='&quot;Homestead&quot;' value='25.468699999999998' />
          <semantic-value key='&quot;Houston&quot;' value='29.760400000000001' />
          <semantic-value key='&quot;Irvine&quot;' value='33.684600000000003' />
          <semantic-value key='&quot;Ithaca&quot;' value='42.444000000000003' />
          <semantic-value key='&quot;Jacksonville&quot;' value='30.3322' />
          <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
          <semantic-value key='&quot;Las Vegas&quot;' value='36.171599999999998' />
          <semantic-value key='&quot;Lewisville&quot;' value='33.046300000000002' />
          <semantic-value key='&quot;Louisville&quot;' value='38.252699999999997' />
          <semantic-value key='&quot;Manassas&quot;' value='38.750900000000001' />
          <semantic-value key='&quot;Manhattan&quot;' value='40.776676000000002' />
          <semantic-value key='&quot;Manhattan Beach&quot;' value='33.884700000000002' />
          <semantic-value key='&quot;Marietta&quot;' value='33.952599999999997' />
          <semantic-value key='&quot;Markham&quot;' value='41.593600000000002' />
          <semantic-value key='&quot;Miami&quot;' value='25.761700000000001' />
          <semantic-value key='&quot;Mountain View&quot;' value='37.386099999999999' />
          <semantic-value key='&quot;Naples&quot;' value='26.141999999999999' />
          <semantic-value key='&quot;Nashville&quot;' value='36.162700000000001' />
          <semantic-value key='&quot;Oakland&quot;' value='37.804400000000001' />
          <semantic-value key='&quot;Oakland Park&quot;' value='26.1723' />
          <semantic-value key='&quot;Orlando&quot;' value='28.538399999999999' />
          <semantic-value key='&quot;Orono&quot;' value='44.883099999999999' />
          <semantic-value key='&quot;Palo Alto&quot;' value='37.441899999999997' />
          <semantic-value key='&quot;Pasadena&quot;' value='34.147799999999997' />
          <semantic-value key='&quot;Philadelphia&quot;' value='39.952599999999997' />
          <semantic-value key='&quot;Phoenix&quot;' value='33.448399999999999' />
          <semantic-value key='&quot;Plantation&quot;' value='26.127600000000001' />
          <semantic-value key='&quot;Pleasant Hill&quot;' value='37.948' />
          <semantic-value key='&quot;Portland&quot;' value='45.5152' />
          <semantic-value key='&quot;Princeton&quot;' value='40.357300000000002' />
          <semantic-value key='&quot;Raleigh&quot;' value='35.779600000000002' />
          <semantic-value key='&quot;Reno&quot;' value='39.529899999999998' />
          <semantic-value key='&quot;Rochester&quot;' value='43.156599999999997' />
          <semantic-value key='&quot;Rogers&quot;' value='36.333500000000001' />
          <semantic-value key='&quot;Saco&quot;' value='43.500900000000001' />
          <semantic-value key='&quot;Sacramento&quot;' value='38.581600000000002' />
          <semantic-value key='&quot;Saint Petersburg&quot;' value='27.767600000000002' />
          <semantic-value key='&quot;San Diego&quot;' value='32.715699999999998' />
          <semantic-value key='&quot;San Francisco&quot;' value='37.774900000000002' />
          <semantic-value key='&quot;San Jose&quot;' value='37.338700000000003' />
          <semantic-value key='&quot;San Mateo&quot;' value='37.563000000000002' />
          <semantic-value key='&quot;Santa Clara&quot;' value='37.354100000000003' />
          <semantic-value key='&quot;Savannah&quot;' value='32.0809' />
          <semantic-value key='&quot;Sharon&quot;' value='41.2331' />
          <semantic-value key='&quot;Sherwood&quot;' value='34.832099999999997' />
          <semantic-value key='&quot;Springfield&quot;' value='39.781700000000001' />
          <semantic-value key='&quot;Stanford&quot;' value='37.427500000000002' />
          <semantic-value key='&quot;Sunnyvale&quot;' value='37.3688' />
          <semantic-value key='&quot;Tampa&quot;' value='27.950600000000001' />
          <semantic-value key='&quot;Union City&quot;' value='37.593400000000003' />
          <semantic-value key='&quot;Utica&quot;' value='43.100900000000003' />
          <semantic-value key='&quot;Virginia&quot;' value='37.431600000000003' />
          <semantic-value key='&quot;Walpole&quot;' value='42.1417' />
          <semantic-value key='&quot;Waltham&quot;' value='42.1417' />
          <semantic-value key='&quot;Waterloo&quot;' value='43.464300000000001' />
          <semantic-value key='&quot;Westerville&quot;' value='40.1267' />
          <semantic-value key='&quot;Westminster&quot;' value='33.7592' />
          <semantic-value key='&quot;Weston&quot;' value='26.1004' />
          <semantic-value key='&quot;Winter Park&quot;' value='28.600000000000001' />
        </semantic-values>
        <semantic-values semantic-role='[City].[Name]'>
          <semantic-value key='&quot;Amaranth&quot;' value='&quot;Amaranth&quot;' />
          <semantic-value key='&quot;Amsterdam&quot;' value='&quot;Amsterdam&quot;' />
          <semantic-value key='&quot;Bangkok&quot;' value='&quot;Bangkok&quot;' />
          <semantic-value key='&quot;Barcelona&quot;' value='&quot;Barcelona&quot;' />
          <semantic-value key='&quot;Barueri&quot;' value='&quot;Barueri&quot;' />
          <semantic-value key='&quot;Battersea&quot;' value='&quot;London&quot;' />
          <semantic-value key='&quot;Belle Mead&quot;' value='&quot;Nashville&quot;' />
          <semantic-value key='&quot;Bengaluru&quot;' value='&quot;Bengaluru&quot;' />
          <semantic-value key='&quot;Berlin&quot;' value='&quot;Berlin&quot;' />
          <semantic-value key='&quot;Bikaner&quot;' value='&quot;Bikaner&quot;' />
          <semantic-value key='&quot;Bogota&quot;' value='&quot;Bogotá&quot;' />
          <semantic-value key='&quot;Bournemouth&quot;' value='&quot;Bournemouth&quot;' />
          <semantic-value key='&quot;Bridgetown&quot;' value='&quot;Bridgetown&quot;' />
          <semantic-value key='&quot;Brisbane&quot;' value='&quot;Brisbane&quot;' />
          <semantic-value key='&quot;Brussels&quot;' value='&quot;Brussels&quot;' />
          <semantic-value key='&quot;Buenos Aires&quot;' value='&quot;Buenos Aires&quot;' />
          <semantic-value key='&quot;Canoas&quot;' value='&quot;Canoas&quot;' />
          <semantic-value key='&quot;Chandigarh&quot;' value='&quot;Chandigarh&quot;' />
          <semantic-value key='&quot;Chennai&quot;' value='&quot;Chennai&quot;' />
          <semantic-value key='&quot;Cuernavaca&quot;' value='&quot;Cuernavaca&quot;' />
          <semantic-value key='&quot;Davis&quot;' value='&quot;Davis&quot;' />
          <semantic-value key='&quot;Dehradun&quot;' value='&quot;Dehra Dun&quot;' />
          <semantic-value key='&quot;Dublin&quot;' value='&quot;Dublin&quot;' />
          <semantic-value key='&quot;Ghaziabad&quot;' value='&quot;Ghaziabad&quot;' />
          <semantic-value key='&quot;Gumla&quot;' value='&quot;Gumla&quot;' />
          <semantic-value key='&quot;Gwalior&quot;' value='&quot;Gwalior&quot;' />
          <semantic-value key='&quot;Helsinki&quot;' value='&quot;Helsinki&quot;' />
          <semantic-value key='&quot;Hoboken&quot;' value='&quot;Hoboken&quot;' />
          <semantic-value key='&quot;Indore&quot;' value='&quot;Indore&quot;' />
          <semantic-value key='&quot;Kingston&quot;' value='&quot;Kingston&quot;' />
          <semantic-value key='&quot;Lakewood Ranch&quot;' value='&quot;Bradenton&quot;' />
          <semantic-value key='&quot;Lima&quot;' value='&quot;Lima&quot;' />
          <semantic-value key='&quot;Lisbon&quot;' value='&quot;Lisbon&quot;' />
          <semantic-value key='&quot;London&quot;' value='&quot;London&quot;' />
          <semantic-value key='&quot;Long Island&quot;' value='&quot;Long Island&quot;' />
          <semantic-value key='&quot;Macerata&quot;' value='&quot;Macerata&quot;' />
          <semantic-value key='&quot;Melbourne&quot;' value='&quot;Melbourne&quot;' />
          <semantic-value key='&quot;Mexico City&quot;' value='&quot;Mexico City&quot;' />
          <semantic-value key='&quot;Munich&quot;' value='&quot;Munich&quot;' />
          <semantic-value key='&quot;Nashik&quot;' value='&quot;New Delhi&quot;' />
          <semantic-value key='&quot;New Delhi&quot;' value='&quot;New Delhi&quot;' />
          <semantic-value key='&quot;Oranjestad&quot;' value='&quot;Oranjestad&quot;' />
          <semantic-value key='&quot;Paris&quot;' value='&quot;Paris&quot;' />
          <semantic-value key='&quot;Pinecrest&quot;' value='&quot;Pinecrest&quot;' />
          <semantic-value key='&quot;Pune&quot;' value='&quot;Pune&quot;' />
          <semantic-value key='&quot;Quito&quot;' value='&quot;Quito&quot;' />
          <semantic-value key='&quot;Redmond City&quot;' value='&quot;Redmond&quot;' />
          <semantic-value key='&quot;Rehoboth&quot;' value='&quot;Rehoboth&quot;' />
          <semantic-value key='&quot;Reykjavík&quot;' value='&quot;Reykjavik&quot;' />
          <semantic-value key='&quot;Rio de Janeiro&quot;' value='&quot;Rio De Janeiro&quot;' />
          <semantic-value key='&quot;San Juan&quot;' value='&quot;San Juan de Dios&quot;' />
          <semantic-value key='&quot;Santiago&quot;' value='&quot;Santiago&quot;' />
          <semantic-value key='&quot;Seoul&quot;' value='&quot;Seoul&quot;' />
          <semantic-value key='&quot;Shahabad&quot;' value='&quot;Shahabad&quot;' />
          <semantic-value key='&quot;Sunny Isles&quot;' value='&quot;Sunny Isles Beach&quot;' />
          <semantic-value key='&quot;Tegucigalpa&quot;' value='&quot;Tegucigalpa&quot;' />
          <semantic-value key='&quot;Tehran&quot;' value='&quot;Tehran&quot;' />
          <semantic-value key='&quot;Tel Aviv-Yafo&quot;' value='&quot;Tel Aviv-Yafo&quot;' />
          <semantic-value key='&quot;Thane&quot;' value='&quot;Thane&quot;' />
          <semantic-value key='&quot;Torrent&quot;' value='&quot;Torrent&quot;' />
          <semantic-value key='&quot;Ulaanbaatar&quot;' value='&quot;Ulan Bator&quot;' />
          <semantic-value key='&quot;Vancouver&quot;' value='&quot;Vancouver&quot;' />
          <semantic-value key='&quot;Vantaa&quot;' value='&quot;Vantaa&quot;' />
          <semantic-value key='&quot;Warsaw&quot;' value='&quot;Warsaw&quot;' />
          <semantic-value key='&quot;Wellington&quot;' value='&quot;Wellington&quot;' />
        </semantic-values>
        <semantic-values semantic-role='[Geographical].[Longitude]'>
          <semantic-value key='&quot;Alexandria&quot;' value='-77.050551999999996' />
          <semantic-value key='&quot;Ames&quot;' value='-93.631' />
          <semantic-value key='&quot;Andover&quot;' value='-71.136799999999994' />
          <semantic-value key='&quot;Annandale&quot;' value='-77.196399999999997' />
          <semantic-value key='&quot;Arlington&quot;' value='-97.108099999999993' />
          <semantic-value key='&quot;Athens&quot;' value='-83.357600000000005' />
          <semantic-value key='&quot;Atlanta&quot;' value='-84.387699999999995' />
          <semantic-value key='&quot;Austin&quot;' value='-97.743099999999998' />
          <semantic-value key='&quot;Avon&quot;' value='-86.399699999999996' />
          <semantic-value key='&quot;Baltimore&quot;' value='-76.612200000000001' />
          <semantic-value key='&quot;Bay City&quot;' value='-83.888900000000007' />
          <semantic-value key='&quot;Beachwood&quot;' value='-81.508700000000005' />
          <semantic-value key='&quot;Bellingham&quot;' value='-122.4787' />
          <semantic-value key='&quot;Berkeley&quot;' value='-122.273' />
          <semantic-value key='&quot;Bethany&quot;' value='-97.632300000000001' />
          <semantic-value key='&quot;Bethlehem&quot;' value='-75.370500000000007' />
          <semantic-value key='&quot;Blacksburg&quot;' value='-80.413899999999998' />
          <semantic-value key='&quot;Boston&quot;' value='-71.058899999999994' />
          <semantic-value key='&quot;Boulder&quot;' value='-105.2705' />
          <semantic-value key='&quot;Bowie&quot;' value='-76.7791' />
          <semantic-value key='&quot;Brooklyn&quot;' value='-73.944199999999995' />
          <semantic-value key='&quot;Burlington&quot;' value='-73.212100000000007' />
          <semantic-value key='&quot;Cambridge&quot;' value='-71.109700000000004' />
          <semantic-value key='&quot;Canton&quot;' value='-81.378399999999999' />
          <semantic-value key='&quot;Charlotte&quot;' value='-80.843100000000007' />
          <semantic-value key='&quot;Charlottesville&quot;' value='-78.476699999999994' />
          <semantic-value key='&quot;Cincinnati&quot;' value='-84.512' />
          <semantic-value key='&quot;Columbia&quot;' value='-81.034800000000004' />
          <semantic-value key='&quot;Columbus&quot;' value='-82.998800000000003' />
          <semantic-value key='&quot;Covington&quot;' value='-83.860200000000006' />
          <semantic-value key='&quot;Dallas&quot;' value='-96.796999999999997' />
          <semantic-value key='&quot;Dayton&quot;' value='-84.191599999999994' />
          <semantic-value key='&quot;Decatur&quot;' value='-84.296300000000002' />
          <semantic-value key='&quot;Denton&quot;' value='-97.133099999999999' />
          <semantic-value key='&quot;Denver&quot;' value='-104.9903' />
          <semantic-value key='&quot;Detroit&quot;' value='-83.0458' />
          <semantic-value key='&quot;Durham&quot;' value='-78.898600000000002' />
          <semantic-value key='&quot;East Brunswick&quot;' value='-74.405000000000001' />
          <semantic-value key='&quot;Epping&quot;' value='-71.073499999999996' />
          <semantic-value key='&quot;Evanston&quot;' value='-87.687700000000007' />
          <semantic-value key='&quot;Fairfax&quot;' value='-77.306399999999996' />
          <semantic-value key='&quot;Fairfield&quot;' value='-73.261300000000006' />
          <semantic-value key='&quot;Fremont&quot;' value='-121.98860000000001' />
          <semantic-value key='&quot;Gainesville&quot;' value='-82.324799999999996' />
          <semantic-value key='&quot;Glen Rock&quot;' value='-74.132900000000006' />
          <semantic-value key='&quot;Golden Valley&quot;' value='-93.359999999999999' />
          <semantic-value key='&quot;Hagerstown&quot;' value='-77.719999999999999' />
          <semantic-value key='&quot;Helena&quot;' value='-112.0391' />
          <semantic-value key='&quot;Hernando&quot;' value='-89.993706000000003' />
          <semantic-value key='&quot;Hollywood&quot;' value='-80.149500000000003' />
          <semantic-value key='&quot;Homestead&quot;' value='-80.477599999999995' />
          <semantic-value key='&quot;Houston&quot;' value='-95.369799999999998' />
          <semantic-value key='&quot;Irvine&quot;' value='-117.8265' />
          <semantic-value key='&quot;Ithaca&quot;' value='-76.501900000000006' />
          <semantic-value key='&quot;Jacksonville&quot;' value='-81.655699999999996' />
          <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
          <semantic-value key='&quot;Las Vegas&quot;' value='-115.1391' />
          <semantic-value key='&quot;Lewisville&quot;' value='-96.994200000000006' />
          <semantic-value key='&quot;Louisville&quot;' value='-85.758499999999998' />
          <semantic-value key='&quot;Manassas&quot;' value='-77.475300000000004' />
          <semantic-value key='&quot;Manhattan&quot;' value='-73.971321000000003' />
          <semantic-value key='&quot;Manhattan Beach&quot;' value='-118.4109' />
          <semantic-value key='&quot;Marietta&quot;' value='-84.549899999999994' />
          <semantic-value key='&quot;Markham&quot;' value='-87.694800000000001' />
          <semantic-value key='&quot;Miami&quot;' value='-80.191800000000001' />
          <semantic-value key='&quot;Mountain View&quot;' value='-122.0839' />
          <semantic-value key='&quot;Naples&quot;' value='-81.794799999999995' />
          <semantic-value key='&quot;Nashville&quot;' value='-86.781599999999997' />
          <semantic-value key='&quot;Oakland&quot;' value='-122.27119999999999' />
          <semantic-value key='&quot;Oakland Park&quot;' value='-80.132000000000005' />
          <semantic-value key='&quot;Orlando&quot;' value='-81.378900000000002' />
          <semantic-value key='&quot;Orono&quot;' value='-68.671899999999994' />
          <semantic-value key='&quot;Palo Alto&quot;' value='-122.143' />
          <semantic-value key='&quot;Pasadena&quot;' value='-118.14449999999999' />
          <semantic-value key='&quot;Philadelphia&quot;' value='-75.165199999999999' />
          <semantic-value key='&quot;Phoenix&quot;' value='-112.074' />
          <semantic-value key='&quot;Plantation&quot;' value='-80.233099999999993' />
          <semantic-value key='&quot;Pleasant Hill&quot;' value='-122.0608' />
          <semantic-value key='&quot;Portland&quot;' value='-122.6784' />
          <semantic-value key='&quot;Princeton&quot;' value='-74.667199999999994' />
          <semantic-value key='&quot;Raleigh&quot;' value='-78.638199999999998' />
          <semantic-value key='&quot;Reno&quot;' value='-119.8143' />
          <semantic-value key='&quot;Rochester&quot;' value='-77.608800000000002' />
          <semantic-value key='&quot;Rogers&quot;' value='-94.125699999999995' />
          <semantic-value key='&quot;Saco&quot;' value='-70.442800000000005' />
          <semantic-value key='&quot;Sacramento&quot;' value='-121.4944' />
          <semantic-value key='&quot;Saint Petersburg&quot;' value='-82.640299999999996' />
          <semantic-value key='&quot;San Diego&quot;' value='-117.1611' />
          <semantic-value key='&quot;San Francisco&quot;' value='-122.4194' />
          <semantic-value key='&quot;San Jose&quot;' value='-121.8853' />
          <semantic-value key='&quot;San Mateo&quot;' value='-122.32550000000001' />
          <semantic-value key='&quot;Santa Clara&quot;' value='-121.9552' />
          <semantic-value key='&quot;Savannah&quot;' value='-81.091200000000001' />
          <semantic-value key='&quot;Sharon&quot;' value='-80.493399999999994' />
          <semantic-value key='&quot;Sherwood&quot;' value='-92.191100000000006' />
          <semantic-value key='&quot;Springfield&quot;' value='-89.650099999999995' />
          <semantic-value key='&quot;Stanford&quot;' value='-122.16970000000001' />
          <semantic-value key='&quot;Sunnyvale&quot;' value='-122.0363' />
          <semantic-value key='&quot;Tampa&quot;' value='-82.4572' />
          <semantic-value key='&quot;Union City&quot;' value='-122.04389999999999' />
          <semantic-value key='&quot;Utica&quot;' value='-75.232699999999994' />
          <semantic-value key='&quot;Virginia&quot;' value='-78.656899999999993' />
          <semantic-value key='&quot;Walpole&quot;' value='-71.249499999999998' />
          <semantic-value key='&quot;Waltham&quot;' value='-71.249499999999998' />
          <semantic-value key='&quot;Waterloo&quot;' value='-80.520399999999995' />
          <semantic-value key='&quot;Westerville&quot;' value='-82.931899999999999' />
          <semantic-value key='&quot;Westminster&quot;' value='-117.9897' />
          <semantic-value key='&quot;Weston&quot;' value='-80.399799999999999' />
          <semantic-value key='&quot;Winter Park&quot;' value='-81.339200000000005' />
        </semantic-values>
      </column>
      <column aggregation='CountD' caption='Country (copy)' datatype='string' default-role='measure' default-type='quantitative' name='[Country (copy)_1741696853644546056]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <calculation class='tableau' formula='[Country]' />
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;England&quot;' value='&quot;United Kingdom&quot;' />
          <semantic-value key='&quot;S\\\\343o Paulo&quot;' value='&quot;Antarctica&quot;' />
          <semantic-value key='&quot;Virginia&quot;' value='&quot;United States&quot;' />
        </semantic-values>
      </column>
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <semantic-values semantic-role='[State].[Name]'>
          <semantic-value key='&quot;Deleware&quot;' value='&quot;Delaware&quot;' />
          <semantic-value key='&quot;Virginia&quot;' value='&quot;Virginia&quot;' />
        </semantic-values>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='hacker_location_2022' datatype='table' name='[__tableau_internal_object_id__].[hacker_location_2022_9835F50D493346B7997092377836FEFC]' role='measure' type='quantitative' />
      <column caption='Combo Count' datatype='integer' name='[combo_count]' role='measure' type='quantitative' />
      <column caption='Hacker Job' datatype='string' name='[hacker_job]' role='dimension' type='nominal' />
      <column caption='Hacker Location' datatype='string' name='[hacker_location]' role='dimension' type='nominal' />
      <column-instance column='[City]' derivation='Attribute' name='[attr:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <drill-paths>
        <drill-path name='City, State, Country'>
          <field>[City]</field>
          <field>[State]</field>
          <field>[Country]</field>
        </drill-path>
      </drill-paths>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/pc3/Documents/My Tableau Repository/Datasources/MHW_2023/hacker_location_2022 (Miami_HW).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='03/06/2023 04:22:01 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='hacker_location_2022 (Miami_HW)' increment-value='%null%' refresh-type='create' rows-inserted='693' timestamp-start='2023-03-06 04:22:01.047' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>hacker_job</remote-name>
              <remote-type>129</remote-type>
              <local-name>[hacker_job]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>hacker_job</remote-alias>
              <ordinal>0</ordinal>
              <family>hacker_location_2022</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>6</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hacker_location_2022_9835F50D493346B7997092377836FEFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>hacker_location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[hacker_location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>hacker_location</remote-alias>
              <ordinal>1</ordinal>
              <family>hacker_location_2022</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>290</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hacker_location_2022_9835F50D493346B7997092377836FEFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>City</remote-name>
              <remote-type>129</remote-type>
              <local-name>[City]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>City</remote-alias>
              <ordinal>2</ordinal>
              <family>hacker_location_2022</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>262</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hacker_location_2022_9835F50D493346B7997092377836FEFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>State</remote-name>
              <remote-type>129</remote-type>
              <local-name>[State]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>State</remote-alias>
              <ordinal>3</ordinal>
              <family>hacker_location_2022</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>47</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hacker_location_2022_9835F50D493346B7997092377836FEFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Country</remote-alias>
              <ordinal>4</ordinal>
              <family>hacker_location_2022</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>50</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hacker_location_2022_9835F50D493346B7997092377836FEFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>combo_count</remote-name>
              <remote-type>20</remote-type>
              <local-name>[combo_count]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>combo_count</remote-alias>
              <ordinal>5</ordinal>
              <family>hacker_location_2022</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>21</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hacker_location_2022_9835F50D493346B7997092377836FEFC]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:State:nk]' palette='green_gold_10_0' type='palette'>
            <map to='#146c36'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#176e38'>
              <bucket>&quot;Washington D.C&quot;</bucket>
            </map>
            <map to='#1b703a'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#1f733c'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#22753e'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#267840'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#297a43'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#2c7d45'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#2f7f47'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#328249'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#35854a'>
              <bucket>&quot;S\\\\343o Paulo&quot;</bucket>
            </map>
            <map to='#37874b'>
              <bucket>&quot;Quebec&quot;</bucket>
            </map>
            <map to='#3a8a4d'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#3c8c4e'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#3f8f4f'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#429250'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#449550'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#479851'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#499a52'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#4d9d53'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#529f54'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#56a154'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#5ba355'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#60a656'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#66a856'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#6cab56'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#72ad56'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#78b056'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#7eb257'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#84b457'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#8ab658'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#90b858'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#96ba58'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#9dbc59'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#a3be5a'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#aabf5a'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#b0c15b'>
              <bucket>&quot;Deleware&quot;</bucket>
            </map>
            <map to='#b7c35c'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#bec45d'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#c4c65d'>
              <bucket>&quot;British Columbia&quot;</bucket>
            </map>
            <map to='#cbc75e'>
              <bucket>&quot;Aswan&quot;</bucket>
            </map>
            <map to='#d2c95f'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#d9ca60'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#dfcc62'>
              <bucket>&quot;Alberta&quot;</bucket>
            </map>
            <map to='#e6cd63'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#edcf64'>
              <bucket>&quot; &quot;</bucket>
            </map>
            <map to='#f4d166'>
              <bucket>&quot;&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:City:nk]' palette='tableau-10' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Ann Arbor&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Bainbridge Island&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Belle Mead&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Bogota&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Bronx&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Chandigarh&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Dehradun&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Edmonton&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Fulshear&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Helsinki&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Irvine&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Lake Jackson&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Macerata&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Milpitas&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Nashik&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Orono&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Peach Bottom&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Port St Lucie&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Redwood City&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Saint Petersburg&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Santiago&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Silver Spring&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Tel Aviv-Yafo&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Vantaa&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Weston&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Annandale&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Bal Harbour&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Boston&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Brooklyn&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Cuernavaca&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Delray Beach&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Ellicott City&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Gainesville&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Hernando&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Ithaca&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Lakewood Ranch&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Manassas&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Ottawa&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Pembroke Pines&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Rehoboth&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Sarasota&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;South Lake Tahoe&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Tempe&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Alameda&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Aswan&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Bamberg&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Berkeley&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Bournemouth&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Buenos Aires&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Chennai&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Cutler Bay&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Epping&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Glen Rock&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Hoboken&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Jersey City&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Lewisville&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Manhattan Beach&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Mississauga&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;North Wales&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Palm Coast&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Prosper&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Reykjavík&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Scarsdale&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Stanford&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Toronto&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Waltham&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Amsterdam&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Aventura&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Bay City&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Blacksburg&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Bridgetown&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Canton&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Coral Gables&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;East Brunswick&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Hallandale Beach&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Huntington Beach&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Kingston&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Mexico City&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Myrtle Beach&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Orford&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Paris&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Pleasant Hill&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Rancho Santa Fe&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Saco&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Sharon&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Tegucigalpa&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Utica&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Westerville&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Amaranth&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Barueri&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Bethlehem&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Cambridge&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Fairfax&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Gwalior&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Hoover&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Key Biscayne&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;London&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Mountain View&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Opa-locka&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Palo Alto&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Pittsburgh&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Quito&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Seoul&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Union City&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Wellington&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Altadena&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Atherton&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Barcelona&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Bethany&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Boynton Beach&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Calgary&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Davie&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Doral&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Evanston&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Gumla&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Homestead&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Katy&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Lisbon&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Markham&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Mount Kisco&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Oakland Park&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Palmetto Bay&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Pinecrest&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Quebec City&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;San Juan&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Sunnyvale&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Ulaanbaatar&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Andover&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Avon&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Beachwood&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Boca Raton&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Brisbane&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Coral Springs&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Deerfield Beach&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Edmonds&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Indore&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;La Jolla&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Naples&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Pasadena&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Pompano Beach&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Redmond City&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Santa Monica&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Sherwood&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Tehran&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Westminster&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Bangkok&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Berlin&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Bowie&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Escondido&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Golden Valley&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Hollywood&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Kansas City&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Lima&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Marietta&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Montreal&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Palm Desert&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Pune&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Rio de Janeiro&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Schwenksville&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Sunny Isles&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Torrent&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Warsaw&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Ames&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Battersea&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Bikaner&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Brampton&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Canoas&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Dayton&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Hagerstown&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Key West&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Long Island&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Metuchen&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Munich&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Oranjestad&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Panama City&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Plantation&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;S\\\\343o Paulo&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Shahabad&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;West Palm Beach&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot; &quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Bengaluru&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Boulder&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Brussels&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Cupertino&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Denton&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Englewood Cliffs&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Ghaziabad&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Hialeah&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Miramar&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;New Delhi&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Oviedo&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Pewaukee&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Princeton&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Savannah&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Thane&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Walpole&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Winter Park&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:City:nk]' palette='tableau-10' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Ann Arbor&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Bainbridge Island&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Belle Mead&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Bogota&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Bronx&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Chandigarh&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Dehradun&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Edmonton&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Fulshear&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Helsinki&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Irvine&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Lake Jackson&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Macerata&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Milpitas&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Nashik&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Orono&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Peach Bottom&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Port St Lucie&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Redwood City&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Saint Petersburg&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Santiago&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Silver Spring&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Tel Aviv-Yafo&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Vantaa&quot;</bucket>
            </map>
            <map to='#17becf'>
              <bucket>&quot;Weston&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Annandale&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Bal Harbour&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Boston&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Brooklyn&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Cuernavaca&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Delray Beach&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Ellicott City&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Gainesville&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Hernando&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Ithaca&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Lakewood Ranch&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Manassas&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Ottawa&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Pembroke Pines&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Rehoboth&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Sarasota&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;South Lake Tahoe&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Tempe&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#1f77b4'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Alameda&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Aswan&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Bamberg&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Berkeley&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Bournemouth&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Buenos Aires&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Chennai&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Cutler Bay&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Epping&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Glen Rock&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Hoboken&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Jersey City&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Lewisville&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Manhattan Beach&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Mississauga&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;North Wales&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Palm Coast&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Prosper&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Reykjavík&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Scarsdale&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Stanford&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Toronto&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Waltham&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Amsterdam&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Aventura&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Bay City&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Blacksburg&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Bridgetown&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Canton&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Coral Gables&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;East Brunswick&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Hallandale Beach&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Huntington Beach&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Kingston&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Mexico City&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Myrtle Beach&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Orford&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Paris&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Pleasant Hill&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Rancho Santa Fe&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Saco&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Sharon&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Tegucigalpa&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Utica&quot;</bucket>
            </map>
            <map to='#7f7f7f'>
              <bucket>&quot;Westerville&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Amaranth&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Barueri&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Bethlehem&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Cambridge&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Fairfax&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Gwalior&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Hoover&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Key Biscayne&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;London&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Mountain View&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Opa-locka&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Palo Alto&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Pittsburgh&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Quito&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Seoul&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Union City&quot;</bucket>
            </map>
            <map to='#8c564b'>
              <bucket>&quot;Wellington&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Altadena&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Atherton&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Barcelona&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Bethany&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Boynton Beach&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Calgary&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Davie&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Doral&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Evanston&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Gumla&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Homestead&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Katy&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Lisbon&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Markham&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Mount Kisco&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Oakland Park&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Palmetto Bay&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Pinecrest&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Quebec City&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;San Juan&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Sunnyvale&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Ulaanbaatar&quot;</bucket>
            </map>
            <map to='#9467bd'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Andover&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Avon&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Beachwood&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Boca Raton&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Brisbane&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Coral Springs&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Deerfield Beach&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Edmonds&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Indore&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;La Jolla&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Naples&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Pasadena&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Pompano Beach&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Redmond City&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Santa Monica&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Sherwood&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Tehran&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#bcbd22'>
              <bucket>&quot;Westminster&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Bangkok&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Berlin&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Bowie&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Escondido&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Golden Valley&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Hollywood&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Kansas City&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Lima&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Marietta&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Montreal&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Palm Desert&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Pune&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Rio de Janeiro&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Schwenksville&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Sunny Isles&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Torrent&quot;</bucket>
            </map>
            <map to='#d62728'>
              <bucket>&quot;Warsaw&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Ames&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Battersea&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Bikaner&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Brampton&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Canoas&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Dayton&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Hagerstown&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Key West&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Long Island&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Metuchen&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Munich&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Oranjestad&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Panama City&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Plantation&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;S\\\\343o Paulo&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Shahabad&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#e377c2'>
              <bucket>&quot;West Palm Beach&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot; &quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Bengaluru&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Boulder&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Brussels&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Cupertino&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Denton&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Englewood Cliffs&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Ghaziabad&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Hialeah&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Miramar&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;New Delhi&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Oviedo&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Pewaukee&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Princeton&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Savannah&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Thane&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Walpole&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Winter Park&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Country:nk]' palette='blue_10_0' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#2c5985'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#2f5c88'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#315e8b'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#34618e'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#376491'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#396693'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#3b6996'>
              <bucket>&quot;S\\\\343o Paulo&quot;</bucket>
            </map>
            <map to='#3d6b99'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#406e9b'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#42709e'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#4473a1'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#4675a3'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#4878a6'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#4a7ba9'>
              <bucket>&quot;Nigeria &quot;</bucket>
            </map>
            <map to='#4c7dab'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#4f80ad'>
              <bucket>&quot;Netherlands &quot;</bucket>
            </map>
            <map to='#5283b0'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#5485b2'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#5788b4'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#5a8bb6'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#5d8eb9'>
              <bucket>&quot;Italy &quot;</bucket>
            </map>
            <map to='#5f90bb'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#6293bd'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#6596bf'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#6899c2'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#6b9cc4'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#6e9fc6'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#71a2c8'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#73a4cb'>
              <bucket>&quot;Germany &quot;</bucket>
            </map>
            <map to='#76a7cd'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#79aacf'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#7cacd1'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#7fafd4'>
              <bucket>&quot;England&quot;</bucket>
            </map>
            <map to='#82b2d6'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#85b5d8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#88b8da'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cbbdc'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#8fbede'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#93c1e0'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#96c4e2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#9ac7e4'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#9ecae6'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#a1cce7'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#a5cfe9'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#a9d2eb'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#add5ec'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b1d7ee'>
              <bucket>&quot;Antarctica&quot;</bucket>
            </map>
            <map to='#b5daef'>
              <bucket>&quot; &quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[City].[Name]' value='%null%' />
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='hacker_location_2022' id='hacker_location_2022_9835F50D493346B7997092377836FEFC'>
            <properties context=''>
              <relation connection='mysql.1qzz5xq1phx2h4172xk7013thwb1' name='hacker_location_2022' table='[hacker_location_2022]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='registered_that_attended_luma (Miami_HW)' inline='true' name='federated.12gjrh60b0y2av103x6rw1cwinu0' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.1w64i4n00sm0vj1e5tmwj0614z4k'>
            <connection class='mysql' dbname='Miami_HW' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='mysql.1w64i4n00sm0vj1e5tmwj0614z4k' name='registered_that_attended_luma' table='[registered_that_attended_luma]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='mysql.1w64i4n00sm0vj1e5tmwj0614z4k' name='registered_that_attended_luma' table='[registered_that_attended_luma]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>mhw_registered</remote-name>
            <remote-type>130</remote-type>
            <local-name>[mhw_registered]</local-name>
            <parent-name>[registered_that_attended_luma]</parent-name>
            <remote-alias>mhw_registered</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16383</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[registered_that_attended_luma_2435C61644F640109D596844A7A96EF2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>luma_registered</remote-name>
            <remote-type>130</remote-type>
            <local-name>[luma_registered]</local-name>
            <parent-name>[registered_that_attended_luma]</parent-name>
            <remote-alias>luma_registered</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16383</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[registered_that_attended_luma_2435C61644F640109D596844A7A96EF2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.12gjrh60b0y2av103x6rw1cwinu0].[ctd:luma_registered:qk]&quot;' value='Attendees @Luma Event' />
          <alias key='&quot;[federated.12gjrh60b0y2av103x6rw1cwinu0].[ctd:mhw_registered:qk]&quot;' value='MHW 23&apos; Attendees' />
        </aliases>
      </column>
      <column caption='Hi' datatype='real' default-format='p0.00%' name='[Calculation_5815202718430048260]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([luma_registered]) / COUNTD([mhw_registered])' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='registered_that_attended_luma' datatype='table' hidden='true' name='[__tableau_internal_object_id__].[registered_that_attended_luma_2435C61644F640109D596844A7A96EF2]' role='measure' type='quantitative' />
      <column aggregation='CountD' caption='Luma Registered' datatype='string' default-role='measure' default-type='quantitative' name='[luma_registered]' role='dimension' type='nominal' />
      <column aggregation='CountD' caption='Mhw Registered' datatype='string' default-role='measure' default-type='quantitative' name='[mhw_registered]' role='dimension' type='nominal' />
      <column-instance column='[__tableau_internal_object_id__].[registered_that_attended_luma_2435C61644F640109D596844A7A96EF2]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:registered_that_attended_luma_2435C61644F640109D596844A7A96EF2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[mhw_registered]' derivation='Attribute' name='[attr:mhw_registered:nk]' pivot='key' type='nominal' />
      <column-instance column='[luma_registered]' derivation='CountD' name='[ctd:luma_registered:ok]' pivot='key' type='ordinal' />
      <column-instance column='[luma_registered]' derivation='CountD' name='[ctd:luma_registered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[mhw_registered]' derivation='CountD' name='[ctd:mhw_registered:qk]' pivot='key' type='quantitative' />
      <column-instance column='[luma_registered]' derivation='CountD' name='[pcto:ctd:luma_registered:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_5815202718430048260]' derivation='User' name='[usr:Calculation_5815202718430048260:qk]' pivot='key' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/pc3/Documents/My Tableau Repository/Datasources/MHW_2023/registered_that_attended_luma (Miami_HW).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='03/06/2023 04:22:18 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='registered_that_attended_luma (Miami_HW)' increment-value='%null%' refresh-type='create' rows-inserted='3467' timestamp-start='2023-03-06 04:22:18.063' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>mhw_registered</remote-name>
              <remote-type>129</remote-type>
              <local-name>[mhw_registered]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>mhw_registered</remote-alias>
              <ordinal>0</ordinal>
              <family>registered_that_attended_luma</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2789</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[registered_that_attended_luma_2435C61644F640109D596844A7A96EF2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>luma_registered</remote-name>
              <remote-type>129</remote-type>
              <local-name>[luma_registered]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>luma_registered</remote-alias>
              <ordinal>1</ordinal>
              <family>registered_that_attended_luma</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1616</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[registered_that_attended_luma_2435C61644F640109D596844A7A96EF2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.12gjrh60b0y2av103x6rw1cwinu0].[ctd:luma_registered:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.12gjrh60b0y2av103x6rw1cwinu0].[pcto:ctd:luma_registered:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.12gjrh60b0y2av103x6rw1cwinu0].[usr:Calculation_5815202718430048260:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.12gjrh60b0y2av103x6rw1cwinu0].[__tableau_internal_object_id__].[cnt:registered_that_attended_luma_2435C61644F640109D596844A7A96EF2:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.12gjrh60b0y2av103x6rw1cwinu0]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.12gjrh60b0y2av103x6rw1cwinu0].[ctd:luma_registered:qk]:1&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.12gjrh60b0y2av103x6rw1cwinu0].[attr:mhw_registered:nk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.12gjrh60b0y2av103x6rw1cwinu0].[ctd:mhw_registered:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[ctd:luma_registered:ok]' type='palette'>
            <map to='#e15759'>
              <bucket>1014</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='registered_that_attended_luma' id='registered_that_attended_luma_2435C61644F640109D596844A7A96EF2'>
            <properties context=''>
              <relation connection='mysql.1w64i4n00sm0vj1e5tmwj0614z4k' name='registered_that_attended_luma' table='[registered_that_attended_luma]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='newsletter_raw_data (Miami_HW)' inline='true' name='federated.1i1m5pp1j17kxh19gvodc1t773hz' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.0ftkffn1pjk1iy13gc5h411hvzmp'>
            <connection class='mysql' dbname='Miami_HW' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='mysql.0ftkffn1pjk1iy13gc5h411hvzmp' name='newsletter_raw_data' table='[newsletter_raw_data]' type='table'>
          <columns>
            <column datatype='date' date-parse-format='yyyy-MM-dd' name='Subscribed' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='mysql.0ftkffn1pjk1iy13gc5h411hvzmp' name='newsletter_raw_data' table='[newsletter_raw_data]' type='table'>
          <columns>
            <column datatype='date' date-parse-format='yyyy-MM-dd' name='Subscribed' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Subscriber</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Subscriber]</local-name>
            <parent-name>[newsletter_raw_data]</parent-name>
            <remote-alias>Subscriber</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16383</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[newsletter_raw_data_0CEAE9A0878746C2B2B7B37A861F9B59]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sent</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Sent]</local-name>
            <parent-name>[newsletter_raw_data]</parent-name>
            <remote-alias>Sent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[newsletter_raw_data_0CEAE9A0878746C2B2B7B37A861F9B59]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Opens</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Opens]</local-name>
            <parent-name>[newsletter_raw_data]</parent-name>
            <remote-alias>Opens</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[newsletter_raw_data_0CEAE9A0878746C2B2B7B37A861F9B59]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Clicks</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Clicks]</local-name>
            <parent-name>[newsletter_raw_data]</parent-name>
            <remote-alias>Clicks</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[newsletter_raw_data_0CEAE9A0878746C2B2B7B37A861F9B59]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Subscribed</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Subscribed]</local-name>
            <parent-name>[newsletter_raw_data]</parent-name>
            <remote-alias>Subscribed</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[newsletter_raw_data_0CEAE9A0878746C2B2B7B37A861F9B59]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[newsletter_raw_data]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16383</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[newsletter_raw_data_0CEAE9A0878746C2B2B7B37A861F9B59]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='date' datatype-customized='true' name='[Subscribed]' role='dimension' type='ordinal' />
      <column datatype='string' name='[Subscriber]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='newsletter_raw_data' datatype='table' name='[__tableau_internal_object_id__].[newsletter_raw_data_0CEAE9A0878746C2B2B7B37A861F9B59]' role='measure' type='quantitative' />
      <column-instance column='[Subscriber]' derivation='Count' name='[cnt:Subscriber:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Subscriber]' derivation='Count' name='[pcto:cum:cnt:Subscriber:qk]' pivot='key' type='quantitative'>
        <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Subscribed]' derivation='Year' name='[yr:Subscribed:ok]' pivot='key' type='ordinal' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/pc3/Documents/My Tableau Repository/Datasources/MHW_2023/newsletter_raw_data (Miami_HW).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='03/06/2023 04:22:10 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='newsletter_raw_data (Miami_HW)' increment-value='%null%' refresh-type='create' rows-inserted='7608' timestamp-start='2023-03-06 04:22:10.176' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Subscriber</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Subscriber]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Subscriber</remote-alias>
              <ordinal>0</ordinal>
              <family>newsletter_raw_data</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>7608</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[newsletter_raw_data_0CEAE9A0878746C2B2B7B37A861F9B59]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Sent</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Sent]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Sent</remote-alias>
              <ordinal>1</ordinal>
              <family>newsletter_raw_data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>24</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[newsletter_raw_data_0CEAE9A0878746C2B2B7B37A861F9B59]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Opens</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Opens]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Opens</remote-alias>
              <ordinal>2</ordinal>
              <family>newsletter_raw_data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>22</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[newsletter_raw_data_0CEAE9A0878746C2B2B7B37A861F9B59]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Clicks</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Clicks]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Clicks</remote-alias>
              <ordinal>3</ordinal>
              <family>newsletter_raw_data</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[newsletter_raw_data_0CEAE9A0878746C2B2B7B37A861F9B59]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Subscribed</remote-name>
              <remote-type>133</remote-type>
              <local-name>[Subscribed]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Subscribed</remote-alias>
              <ordinal>4</ordinal>
              <family>newsletter_raw_data</family>
              <local-type>date</local-type>
              <aggregation>Year</aggregation>
              <approx-count>105</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[newsletter_raw_data_0CEAE9A0878746C2B2B7B37A861F9B59]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Location</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Location]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Location</remote-alias>
              <ordinal>5</ordinal>
              <family>newsletter_raw_data</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[newsletter_raw_data_0CEAE9A0878746C2B2B7B37A861F9B59]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#5c6068'>
              <bucket>&quot;[federated.1i1m5pp1j17kxh19gvodc1t773hz].[pcto:cum:cnt:Subscriber:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1i1m5pp1j17kxh19gvodc1t773hz].[cnt:Subscriber:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[yr:Subscribed:ok]' type='palette'>
            <map to='#4e79a7'>
              <bucket>2021</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2022</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>2023</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='newsletter_raw_data' id='newsletter_raw_data_0CEAE9A0878746C2B2B7B37A861F9B59'>
            <properties context=''>
              <relation connection='mysql.0ftkffn1pjk1iy13gc5h411hvzmp' name='newsletter_raw_data' table='[newsletter_raw_data]' type='table'>
                <columns>
                  <column datatype='date' date-parse-format='yyyy-MM-dd' name='Subscribed' />
                </columns>
              </relation>
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='attendees_2023 (Miami_HW)' inline='true' name='federated.1dnnp6z0acy4y510gicoq0vjbum9' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='localhost' name='mysql.0mddtd31nzkczo14vlhfw0uh8xzf'>
            <connection class='mysql' dbname='Miami_HW' odbc-native-protocol='' one-time-sql='' port='3306' server='localhost' source-charset='' username='root' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='mysql.0mddtd31nzkczo14vlhfw0uh8xzf' name='attendees_2023' table='[attendees_2023]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='mysql.0mddtd31nzkczo14vlhfw0uh8xzf' name='attendees_2023' table='[attendees_2023]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>21_subs</remote-name>
            <remote-type>130</remote-type>
            <local-name>[21_subs]</local-name>
            <parent-name>[attendees_2023]</parent-name>
            <remote-alias>21_subs</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16383</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[attendees_2023_3D60EF0A766D421FAB417AFC2D7C3293]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>21_to_23_subs</remote-name>
            <remote-type>130</remote-type>
            <local-name>[21_to_23_subs]</local-name>
            <parent-name>[attendees_2023]</parent-name>
            <remote-alias>21_to_23_subs</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16383</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[attendees_2023_3D60EF0A766D421FAB417AFC2D7C3293]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>22_subs</remote-name>
            <remote-type>130</remote-type>
            <local-name>[22_subs]</local-name>
            <parent-name>[attendees_2023]</parent-name>
            <remote-alias>22_subs</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16383</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[attendees_2023_3D60EF0A766D421FAB417AFC2D7C3293]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>22_to_23_subs</remote-name>
            <remote-type>130</remote-type>
            <local-name>[22_to_23_subs]</local-name>
            <parent-name>[attendees_2023]</parent-name>
            <remote-alias>22_to_23_subs</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16383</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[attendees_2023_3D60EF0A766D421FAB417AFC2D7C3293]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>23_subs</remote-name>
            <remote-type>130</remote-type>
            <local-name>[23_subs]</local-name>
            <parent-name>[attendees_2023]</parent-name>
            <remote-alias>23_subs</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16383</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[attendees_2023_3D60EF0A766D421FAB417AFC2D7C3293]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>23_to_23_subs</remote-name>
            <remote-type>130</remote-type>
            <local-name>[23_to_23_subs]</local-name>
            <parent-name>[attendees_2023]</parent-name>
            <remote-alias>23_to_23_subs</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>16383</width>
            <contains-null>true</contains-null>
            <cast-to-local-type>true</cast-to-local-type>
            <collation charset='296' flag='3' name='LROOT_S1' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WLONGVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[attendees_2023_3D60EF0A766D421FAB417AFC2D7C3293]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='CountD' caption='21 Subs' datatype='string' default-role='measure' default-type='quantitative' name='[21_subs]' role='dimension' type='nominal' />
      <column aggregation='CountD' caption='21 To 23 Subs' datatype='string' default-role='measure' default-type='quantitative' name='[21_to_23_subs]' role='dimension' type='nominal' />
      <column aggregation='CountD' caption='22 Subs' datatype='string' default-role='measure' default-type='quantitative' name='[22_subs]' role='dimension' type='nominal' />
      <column aggregation='CountD' caption='22 To 23 Subs' datatype='string' default-role='measure' default-type='quantitative' name='[22_to_23_subs]' role='dimension' type='nominal' />
      <column aggregation='CountD' caption='23 Subs' datatype='string' default-role='measure' default-type='quantitative' name='[23_subs]' role='dimension' type='nominal' />
      <column aggregation='CountD' caption='23 To 23 Subs' datatype='string' default-role='measure' default-type='quantitative' name='[23_to_23_subs]' role='dimension' type='nominal' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0awixag0ke6kmr1dppvn50uvwq87].[sum:21_subs_at_events:qk]&quot;' value='&lt;- @Luma Event' />
          <alias key='&quot;[federated.0awixag0ke6kmr1dppvn50uvwq87].[sum:22_subs_at_events:qk]&quot;' value='&lt;- @Luma_Event' />
          <alias key='&quot;[federated.0awixag0ke6kmr1dppvn50uvwq87].[sum:23_subs_at_events:qk]&quot;' value='&lt;- @Luma Events_' />
          <alias key='&quot;[federated.1dnnp6z0acy4y510gicoq0vjbum9].[ctd:21_subs:qk]&quot;' value='2021 Subs' />
          <alias key='&quot;[federated.1dnnp6z0acy4y510gicoq0vjbum9].[ctd:21_to_23_subs:qk]&quot;' value='&lt;- @MHW 2023' />
          <alias key='&quot;[federated.1dnnp6z0acy4y510gicoq0vjbum9].[ctd:22_subs:qk]&quot;' value='2022 Subs' />
          <alias key='&quot;[federated.1dnnp6z0acy4y510gicoq0vjbum9].[ctd:22_to_23_subs:qk]&quot;' value='&lt;- @MHW_2023' />
          <alias key='&quot;[federated.1dnnp6z0acy4y510gicoq0vjbum9].[ctd:23_subs:qk]&quot;' value='2023 Subs' />
          <alias key='&quot;[federated.1dnnp6z0acy4y510gicoq0vjbum9].[ctd:23_to_23_subs:qk]&quot;' value='&lt;- @MHW 2023_' />
        </aliases>
      </column>
      <column caption='2023 to 2023' datatype='real' default-format='p0%' name='[Calculation1 (copy) (copy)_4888868569643175944]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([23_to_23_subs]) / COUNTD([23_subs])' />
      </column>
      <column caption='2022 to 2023' datatype='real' default-format='p0%' name='[Calculation1 (copy)_4888868569643167751]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([22_to_23_subs]) / COUNTD([22_subs])' />
      </column>
      <column caption='2021 to 2023' datatype='real' default-format='p0%' name='[Calculation_4888868569642905606]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='COUNTD([21_to_23_subs]) / COUNTD([21_subs])' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='attendees_2023' datatype='table' name='[__tableau_internal_object_id__].[attendees_2023_3D60EF0A766D421FAB417AFC2D7C3293]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[attendees_2023_3D60EF0A766D421FAB417AFC2D7C3293]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:attendees_2023_3D60EF0A766D421FAB417AFC2D7C3293:qk]' pivot='key' type='quantitative' />
      <column-instance column='[21_subs]' derivation='Attribute' name='[attr:21_subs:nk]' pivot='key' type='nominal' />
      <column-instance column='[22_subs]' derivation='Attribute' name='[attr:22_subs:nk]' pivot='key' type='nominal' />
      <column-instance column='[23_subs]' derivation='Attribute' name='[attr:23_subs:nk]' pivot='key' type='nominal' />
      <column-instance column='[21_subs]' derivation='Count' name='[cnt:21_subs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[22_to_23_subs]' derivation='Count' name='[cnt:22_to_23_subs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[23_subs]' derivation='Count' name='[cnt:23_subs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[21_subs]' derivation='CountD' name='[ctd:21_subs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[21_to_23_subs]' derivation='CountD' name='[ctd:21_to_23_subs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[22_subs]' derivation='CountD' name='[ctd:22_subs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[22_to_23_subs]' derivation='CountD' name='[ctd:22_to_23_subs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[23_subs]' derivation='CountD' name='[ctd:23_subs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[23_to_23_subs]' derivation='CountD' name='[ctd:23_to_23_subs:qk]' pivot='key' type='quantitative' />
      <column-instance column='[23_subs]' derivation='None' name='[none:23_subs:nk]' pivot='key' type='nominal' />
      <column-instance column='[21_to_23_subs]' derivation='CountD' name='[pcto:ctd:21_to_23_subs:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' type='PctTotal' />
      </column-instance>
      <column-instance column='[Calculation_4888868569642905606]' derivation='User' name='[usr:Calculation_4888868569642905606:qk]' pivot='key' type='quantitative' />
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='/Users/pc3/Documents/My Tableau Repository/Datasources/MHW_2023/attendees_2023 (Miami_HW).hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='03/06/2023 04:21:35 AM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='attendees_2023 (Miami_HW)' increment-value='%null%' refresh-type='create' rows-inserted='5458' timestamp-start='2023-03-06 04:21:35.471' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>21_subs</remote-name>
              <remote-type>129</remote-type>
              <local-name>[21_subs]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>21_subs</remote-alias>
              <ordinal>0</ordinal>
              <family>attendees_2023</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1213</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[attendees_2023_3D60EF0A766D421FAB417AFC2D7C3293]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>21_to_23_subs</remote-name>
              <remote-type>129</remote-type>
              <local-name>[21_to_23_subs]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>21_to_23_subs</remote-alias>
              <ordinal>1</ordinal>
              <family>attendees_2023</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>142</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[attendees_2023_3D60EF0A766D421FAB417AFC2D7C3293]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>22_subs</remote-name>
              <remote-type>129</remote-type>
              <local-name>[22_subs]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>22_subs</remote-alias>
              <ordinal>2</ordinal>
              <family>attendees_2023</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>5458</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[attendees_2023_3D60EF0A766D421FAB417AFC2D7C3293]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>22_to_23_subs</remote-name>
              <remote-type>129</remote-type>
              <local-name>[22_to_23_subs]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>22_to_23_subs</remote-alias>
              <ordinal>3</ordinal>
              <family>attendees_2023</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1581</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[attendees_2023_3D60EF0A766D421FAB417AFC2D7C3293]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>23_subs</remote-name>
              <remote-type>129</remote-type>
              <local-name>[23_subs]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>23_subs</remote-alias>
              <ordinal>4</ordinal>
              <family>attendees_2023</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2342</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[attendees_2023_3D60EF0A766D421FAB417AFC2D7C3293]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>23_to_23_subs</remote-name>
              <remote-type>129</remote-type>
              <local-name>[23_to_23_subs]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>23_to_23_subs</remote-alias>
              <ordinal>5</ordinal>
              <family>attendees_2023</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>2019</approx-count>
              <contains-null>true</contains-null>
              <collation flag='3' name='LROOT_S1' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[attendees_2023_3D60EF0A766D421FAB417AFC2D7C3293]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' _.fcp.SchemaViewerObjectModel.true...common-percentage='1' _.fcp.SchemaViewerObjectModel.true...user-set-layout-v2='true' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1dnnp6z0acy4y510gicoq0vjbum9].[cnt:22_to_23_subs:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1dnnp6z0acy4y510gicoq0vjbum9].[ctd:21_subs:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1dnnp6z0acy4y510gicoq0vjbum9].[ctd:22_subs:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1dnnp6z0acy4y510gicoq0vjbum9].[ctd:23_subs:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation_4888868569642905606:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1dnnp6z0acy4y510gicoq0vjbum9].[__tableau_internal_object_id__].[cnt:attendees_2023_3D60EF0A766D421FAB417AFC2D7C3293:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1dnnp6z0acy4y510gicoq0vjbum9]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1dnnp6z0acy4y510gicoq0vjbum9].[attr:21_subs:nk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1dnnp6z0acy4y510gicoq0vjbum9].[attr:22_subs:nk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1dnnp6z0acy4y510gicoq0vjbum9].[attr:23_subs:nk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1dnnp6z0acy4y510gicoq0vjbum9].[cnt:23_subs:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1dnnp6z0acy4y510gicoq0vjbum9].[none:23_subs:nk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0awixag0ke6kmr1dppvn50uvwq87].[sum:21_subs_at_events:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0awixag0ke6kmr1dppvn50uvwq87].[sum:22_subs_at_events:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0awixag0ke6kmr1dppvn50uvwq87].[sum:23_subs_at_events:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1dnnp6z0acy4y510gicoq0vjbum9].[pcto:ctd:21_to_23_subs:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1dnnp6z0acy4y510gicoq0vjbum9].[ctd:21_to_23_subs:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1dnnp6z0acy4y510gicoq0vjbum9].[ctd:22_to_23_subs:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1dnnp6z0acy4y510gicoq0vjbum9].[ctd:23_to_23_subs:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1dnnp6z0acy4y510gicoq0vjbum9].[cnt:21_subs:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='federated.0awixag0ke6kmr1dppvn50uvwq87'>
        <column caption='21 Subs At Events' datatype='integer' name='[21_subs_at_events]' role='measure' type='quantitative' />
        <column caption='22 Subs At Events' datatype='integer' name='[22_subs_at_events]' role='measure' type='quantitative' />
        <column caption='23 Subs At Events' datatype='integer' name='[23_subs_at_events]' role='measure' type='quantitative' />
        <column-instance column='[21_subs_at_events]' derivation='Sum' name='[sum:21_subs_at_events:qk]' pivot='key' type='quantitative' />
        <column-instance column='[22_subs_at_events]' derivation='Sum' name='[sum:22_subs_at_events:qk]' pivot='key' type='quantitative' />
        <column-instance column='[23_subs_at_events]' derivation='Sum' name='[sum:23_subs_at_events:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='attendees_2023' id='attendees_2023_3D60EF0A766D421FAB417AFC2D7C3293'>
            <properties context=''>
              <relation connection='mysql.0mddtd31nzkczo14vlhfw0uh8xzf' name='attendees_2023' table='[attendees_2023]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Attendees_@Luma'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tableau Medium' fontsize='18'>General Attendees That Joined An Event</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='registered_that_attended_luma (Miami_HW)' name='federated.12gjrh60b0y2av103x6rw1cwinu0' />
          </datasources>
          <datasource-dependencies datasource='federated.12gjrh60b0y2av103x6rw1cwinu0'>
            <column caption='Hi' datatype='real' default-format='p0.00%' name='[Calculation_5815202718430048260]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([luma_registered]) / COUNTD([mhw_registered])' />
            </column>
            <column-instance column='[luma_registered]' derivation='CountD' name='[ctd:luma_registered:ok]' pivot='key' type='ordinal' />
            <column-instance column='[luma_registered]' derivation='CountD' name='[ctd:luma_registered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[mhw_registered]' derivation='CountD' name='[ctd:mhw_registered:ok]' pivot='key' type='ordinal' />
            <column-instance column='[mhw_registered]' derivation='CountD' name='[ctd:mhw_registered:qk]' pivot='key' type='quantitative' />
            <column aggregation='CountD' caption='Luma Registered' datatype='string' default-role='measure' default-type='quantitative' name='[luma_registered]' role='dimension' type='nominal' />
            <column aggregation='CountD' caption='Mhw Registered' datatype='string' default-role='measure' default-type='quantitative' name='[mhw_registered]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_5815202718430048260]' derivation='User' name='[usr:Calculation_5815202718430048260:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.12gjrh60b0y2av103x6rw1cwinu0].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <manual-sort column='[federated.12gjrh60b0y2av103x6rw1cwinu0].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.12gjrh60b0y2av103x6rw1cwinu0].[ctd:mhw_registered:qk]&quot;</bucket>
              <bucket>&quot;[federated.12gjrh60b0y2av103x6rw1cwinu0].[ctd:luma_registered:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.12gjrh60b0y2av103x6rw1cwinu0].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.12gjrh60b0y2av103x6rw1cwinu0].[ctd:luma_registered:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.12gjrh60b0y2av103x6rw1cwinu0].[ctd:luma_registered:qk]' scope='rows' value='false' />
            <encoding attr='space' class='0' field='[federated.12gjrh60b0y2av103x6rw1cwinu0].[ctd:mhw_registered:qk]' field-type='quantitative' max='2600' min='0' range-type='fixed' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.12gjrh60b0y2av103x6rw1cwinu0].[ctd:mhw_registered:qk]' scope='rows' value='true' />
            <format attr='title' class='0' field='[federated.12gjrh60b0y2av103x6rw1cwinu0].[ctd:mhw_registered:qk]' scope='rows' value='Count' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.12gjrh60b0y2av103x6rw1cwinu0].[ctd:mhw_registered:qk]' value='Tableau Medium' />
            <format attr='color' field='[federated.12gjrh60b0y2av103x6rw1cwinu0].[ctd:mhw_registered:qk]' value='#000000' />
            <format attr='font-weight' field='[federated.12gjrh60b0y2av103x6rw1cwinu0].[ctd:mhw_registered:qk]' value='bold' />
            <format attr='color' field='[federated.12gjrh60b0y2av103x6rw1cwinu0].[:Measure Names]' value='#000000' />
            <format attr='font-family' field='[federated.12gjrh60b0y2av103x6rw1cwinu0].[:Measure Names]' value='Tableau Medium' />
            <format attr='font-weight' field='[federated.12gjrh60b0y2av103x6rw1cwinu0].[:Measure Names]' value='bold' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.12gjrh60b0y2av103x6rw1cwinu0].[ctd:luma_registered:qk]' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-sequential'>
                <color>#f1f1f1</color>
                <color>#f2e3df</color>
                <color>#f3d6cd</color>
                <color>#f5c8bb</color>
                <color>#f6bba9</color>
                <color>#f8ad96</color>
                <color>#f99f84</color>
                <color>#fa9071</color>
                <color>#fc825d</color>
                <color>#fd734a</color>
                <color>#ff6537</color>
              </color-palette>
            </encoding>
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#00000000' />
            <format attr='border-width' value='0' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='div-level' scope='rows' value='10' />
            <format attr='div-level' scope='cols' value='10' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#f0f7fa' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='fill-color' id='annotation_3' value='#e6e6e6e6' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-disallow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <customized-tooltip show-buttons='false'>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='0' />
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='1.3183425664901733' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-disallow' y-axis-name='[federated.12gjrh60b0y2av103x6rw1cwinu0].[ctd:luma_registered:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.12gjrh60b0y2av103x6rw1cwinu0].[ctd:luma_registered:ok]' />
              <text column='[federated.12gjrh60b0y2av103x6rw1cwinu0].[ctd:luma_registered:qk]' />
              <text column='[federated.12gjrh60b0y2av103x6rw1cwinu0].[usr:Calculation_5815202718430048260:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run bold='true' fontalignment='1' fontcolor='#666666' fontname='Tableau Medium'>Count: </run>
                <run bold='true' fontalignment='1' fontname='Tableau Medium'>Æ </run>
                <run bold='true' fontalignment='1' fontcolor='#e15759' fontname='Tableau Medium'><![CDATA[<[federated.12gjrh60b0y2av103x6rw1cwinu0].[ctd:luma_registered:ok]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run fontcolor='#e15759' fontsize='12'>&lt;</run>
                <run fontcolor='#e15759' fontsize='12'>[federated.12gjrh60b0y2av103x6rw1cwinu0].[ctd:luma_registered:qk]</run>
                <run fontcolor='#e15759' fontsize='12'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='0' />
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='color' value='#000000' />
                <format attr='font-family' value='Tableau Medium' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='14' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='0.30685082077980042' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-disallow' y-axis-name='[federated.12gjrh60b0y2av103x6rw1cwinu0].[ctd:mhw_registered:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.12gjrh60b0y2av103x6rw1cwinu0].[ctd:mhw_registered:ok]' />
              <text column='[federated.12gjrh60b0y2av103x6rw1cwinu0].[ctd:mhw_registered:qk]' />
            </encodings>
            <customized-tooltip show-buttons='false'>
              <formatted-text>
                <run bold='true' fontalignment='1' fontname='Tableau Medium'>Count: </run>
                <run bold='true' fontalignment='1' fontcolor='#e15759' fontname='Tableau Medium'><![CDATA[<[federated.12gjrh60b0y2av103x6rw1cwinu0].[ctd:mhw_registered:ok]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run fontcolor='#4e79a7' fontsize='12'><![CDATA[<[federated.12gjrh60b0y2av103x6rw1cwinu0].[ctd:mhw_registered:qk]>]]></run>
                <run>Æ&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-orientation' value='0' />
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-family' value='Tableau Medium' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='14' />
                <format attr='color' value='#000000' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='size' value='0.3948066234588623' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.12gjrh60b0y2av103x6rw1cwinu0].[ctd:mhw_registered:qk] + [federated.12gjrh60b0y2av103x6rw1cwinu0].[ctd:luma_registered:qk])</rows>
        <cols>[federated.12gjrh60b0y2av103x6rw1cwinu0].[:Measure Names]</cols>
        <annotations>
          <annotation class='point' id='3' mark-position='1' pullback='1' text-width='88'>
            <formatted-text>
              <run bold='true' fontcolor='#000000' fontname='Tableau Medium' fontsize='14'> &lt;</run>
              <run bold='true' fontcolor='#000000' fontname='Tableau Medium' fontsize='14'>[federated.12gjrh60b0y2av103x6rw1cwinu0].[usr:Calculation_5815202718430048260:qk]</run>
              <run bold='true' fontcolor='#000000' fontname='Tableau Medium' fontsize='14'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.12gjrh60b0y2av103x6rw1cwinu0].[:Measure Names]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.12gjrh60b0y2av103x6rw1cwinu0].[ctd:luma_registered:qk]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.12gjrh60b0y2av103x6rw1cwinu0].[ctd:luma_registered:ok]</field>
                      <field>[federated.12gjrh60b0y2av103x6rw1cwinu0].[ctd:luma_registered:qk]</field>
                      <field>[federated.12gjrh60b0y2av103x6rw1cwinu0].[usr:Calculation_5815202718430048260:qk]</field>
                      <field>[federated.12gjrh60b0y2av103x6rw1cwinu0].[:Measure Names]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>1014</value>
                    <value>1014</value>
                    <value>0.41337138198124745</value>
                    <value>&quot;[federated.12gjrh60b0y2av103x6rw1cwinu0].[ctd:luma_registered:qk]&quot;</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='0' y='-63' />
          </annotation>
        </annotations>
        <tooltip-style tooltip-mode='sticky' />
      </table>
      <simple-id uuid='{BFEDD969-73C3-4FEB-BD94-029105D25FAB}' />
    </worksheet>
    <worksheet name='Hackers_Locations_2022'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tableau Medium' fontsize='18'>U.S.A Hacker Locations 2022</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='hacker_location_2022 (Miami_HW)' name='federated.0p6qq6d05piqtx19z6lqv1ne1lzu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0p6qq6d05piqtx19z6lqv1ne1lzu'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Alexandria&quot;' value='38.820450000000001' />
                <semantic-value key='&quot;Ames&quot;' value='42.030799999999999' />
                <semantic-value key='&quot;Andover&quot;' value='42.658299999999997' />
                <semantic-value key='&quot;Annandale&quot;' value='38.830399999999997' />
                <semantic-value key='&quot;Arlington&quot;' value='32.735700000000001' />
                <semantic-value key='&quot;Athens&quot;' value='33.951900000000002' />
                <semantic-value key='&quot;Atlanta&quot;' value='33.748800000000003' />
                <semantic-value key='&quot;Austin&quot;' value='30.267199999999999' />
                <semantic-value key='&quot;Avon&quot;' value='39.762799999999999' />
                <semantic-value key='&quot;Baltimore&quot;' value='39.290399999999998' />
                <semantic-value key='&quot;Bay City&quot;' value='43.594499999999996' />
                <semantic-value key='&quot;Beachwood&quot;' value='41.464500000000001' />
                <semantic-value key='&quot;Bellingham&quot;' value='48.751899999999999' />
                <semantic-value key='&quot;Berkeley&quot;' value='37.871499999999997' />
                <semantic-value key='&quot;Bethany&quot;' value='35.518700000000003' />
                <semantic-value key='&quot;Bethlehem&quot;' value='40.625900000000001' />
                <semantic-value key='&quot;Blacksburg&quot;' value='37.229599999999998' />
                <semantic-value key='&quot;Boston&quot;' value='42.360100000000003' />
                <semantic-value key='&quot;Boulder&quot;' value='40.015000000000001' />
                <semantic-value key='&quot;Bowie&quot;' value='39.006799999999998' />
                <semantic-value key='&quot;Brooklyn&quot;' value='40.678199999999997' />
                <semantic-value key='&quot;Burlington&quot;' value='44.475900000000003' />
                <semantic-value key='&quot;Cambridge&quot;' value='42.373600000000003' />
                <semantic-value key='&quot;Canton&quot;' value='40.798900000000003' />
                <semantic-value key='&quot;Charlotte&quot;' value='35.2271' />
                <semantic-value key='&quot;Charlottesville&quot;' value='38.029299999999999' />
                <semantic-value key='&quot;Cincinnati&quot;' value='39.103099999999998' />
                <semantic-value key='&quot;Columbia&quot;' value='34.000700000000002' />
                <semantic-value key='&quot;Columbus&quot;' value='39.961199999999998' />
                <semantic-value key='&quot;Covington&quot;' value='33.596800000000002' />
                <semantic-value key='&quot;Dallas&quot;' value='32.776699999999998' />
                <semantic-value key='&quot;Dayton&quot;' value='39.758899999999997' />
                <semantic-value key='&quot;Decatur&quot;' value='33.774799999999999' />
                <semantic-value key='&quot;Denton&quot;' value='33.214799999999997' />
                <semantic-value key='&quot;Denver&quot;' value='39.739199999999997' />
                <semantic-value key='&quot;Detroit&quot;' value='42.331400000000002' />
                <semantic-value key='&quot;Durham&quot;' value='35.994' />
                <semantic-value key='&quot;East Brunswick&quot;' value='40.431699999999999' />
                <semantic-value key='&quot;Epping&quot;' value='43.0535' />
                <semantic-value key='&quot;Evanston&quot;' value='42.045099999999998' />
                <semantic-value key='&quot;Fairfax&quot;' value='38.846200000000003' />
                <semantic-value key='&quot;Fairfield&quot;' value='41.140799999999999' />
                <semantic-value key='&quot;Fremont&quot;' value='37.548499999999997' />
                <semantic-value key='&quot;Gainesville&quot;' value='29.651599999999998' />
                <semantic-value key='&quot;Glen Rock&quot;' value='40.962899999999998' />
                <semantic-value key='&quot;Golden Valley&quot;' value='44.991700000000002' />
                <semantic-value key='&quot;Hagerstown&quot;' value='39.641800000000003' />
                <semantic-value key='&quot;Helena&quot;' value='46.589100000000002' />
                <semantic-value key='&quot;Hernando&quot;' value='34.823985999999998' />
                <semantic-value key='&quot;Hollywood&quot;' value='26.011199999999999' />
                <semantic-value key='&quot;Homestead&quot;' value='25.468699999999998' />
                <semantic-value key='&quot;Houston&quot;' value='29.760400000000001' />
                <semantic-value key='&quot;Irvine&quot;' value='33.684600000000003' />
                <semantic-value key='&quot;Ithaca&quot;' value='42.444000000000003' />
                <semantic-value key='&quot;Jacksonville&quot;' value='30.3322' />
                <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
                <semantic-value key='&quot;Las Vegas&quot;' value='36.171599999999998' />
                <semantic-value key='&quot;Lewisville&quot;' value='33.046300000000002' />
                <semantic-value key='&quot;Louisville&quot;' value='38.252699999999997' />
                <semantic-value key='&quot;Manassas&quot;' value='38.750900000000001' />
                <semantic-value key='&quot;Manhattan&quot;' value='40.776676000000002' />
                <semantic-value key='&quot;Manhattan Beach&quot;' value='33.884700000000002' />
                <semantic-value key='&quot;Marietta&quot;' value='33.952599999999997' />
                <semantic-value key='&quot;Markham&quot;' value='41.593600000000002' />
                <semantic-value key='&quot;Miami&quot;' value='25.761700000000001' />
                <semantic-value key='&quot;Mountain View&quot;' value='37.386099999999999' />
                <semantic-value key='&quot;Naples&quot;' value='26.141999999999999' />
                <semantic-value key='&quot;Nashville&quot;' value='36.162700000000001' />
                <semantic-value key='&quot;Oakland&quot;' value='37.804400000000001' />
                <semantic-value key='&quot;Oakland Park&quot;' value='26.1723' />
                <semantic-value key='&quot;Orlando&quot;' value='28.538399999999999' />
                <semantic-value key='&quot;Orono&quot;' value='44.883099999999999' />
                <semantic-value key='&quot;Palo Alto&quot;' value='37.441899999999997' />
                <semantic-value key='&quot;Pasadena&quot;' value='34.147799999999997' />
                <semantic-value key='&quot;Philadelphia&quot;' value='39.952599999999997' />
                <semantic-value key='&quot;Phoenix&quot;' value='33.448399999999999' />
                <semantic-value key='&quot;Plantation&quot;' value='26.127600000000001' />
                <semantic-value key='&quot;Pleasant Hill&quot;' value='37.948' />
                <semantic-value key='&quot;Portland&quot;' value='45.5152' />
                <semantic-value key='&quot;Princeton&quot;' value='40.357300000000002' />
                <semantic-value key='&quot;Raleigh&quot;' value='35.779600000000002' />
                <semantic-value key='&quot;Reno&quot;' value='39.529899999999998' />
                <semantic-value key='&quot;Rochester&quot;' value='43.156599999999997' />
                <semantic-value key='&quot;Rogers&quot;' value='36.333500000000001' />
                <semantic-value key='&quot;Saco&quot;' value='43.500900000000001' />
                <semantic-value key='&quot;Sacramento&quot;' value='38.581600000000002' />
                <semantic-value key='&quot;Saint Petersburg&quot;' value='27.767600000000002' />
                <semantic-value key='&quot;San Diego&quot;' value='32.715699999999998' />
                <semantic-value key='&quot;San Francisco&quot;' value='37.774900000000002' />
                <semantic-value key='&quot;San Jose&quot;' value='37.338700000000003' />
                <semantic-value key='&quot;San Mateo&quot;' value='37.563000000000002' />
                <semantic-value key='&quot;Santa Clara&quot;' value='37.354100000000003' />
                <semantic-value key='&quot;Savannah&quot;' value='32.0809' />
                <semantic-value key='&quot;Sharon&quot;' value='41.2331' />
                <semantic-value key='&quot;Sherwood&quot;' value='34.832099999999997' />
                <semantic-value key='&quot;Springfield&quot;' value='39.781700000000001' />
                <semantic-value key='&quot;Stanford&quot;' value='37.427500000000002' />
                <semantic-value key='&quot;Sunnyvale&quot;' value='37.3688' />
                <semantic-value key='&quot;Tampa&quot;' value='27.950600000000001' />
                <semantic-value key='&quot;Union City&quot;' value='37.593400000000003' />
                <semantic-value key='&quot;Utica&quot;' value='43.100900000000003' />
                <semantic-value key='&quot;Virginia&quot;' value='37.431600000000003' />
                <semantic-value key='&quot;Walpole&quot;' value='42.1417' />
                <semantic-value key='&quot;Waltham&quot;' value='42.1417' />
                <semantic-value key='&quot;Waterloo&quot;' value='43.464300000000001' />
                <semantic-value key='&quot;Westerville&quot;' value='40.1267' />
                <semantic-value key='&quot;Westminster&quot;' value='33.7592' />
                <semantic-value key='&quot;Weston&quot;' value='26.1004' />
                <semantic-value key='&quot;Winter Park&quot;' value='28.600000000000001' />
              </semantic-values>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Amaranth&quot;' value='&quot;Amaranth&quot;' />
                <semantic-value key='&quot;Amsterdam&quot;' value='&quot;Amsterdam&quot;' />
                <semantic-value key='&quot;Bangkok&quot;' value='&quot;Bangkok&quot;' />
                <semantic-value key='&quot;Barcelona&quot;' value='&quot;Barcelona&quot;' />
                <semantic-value key='&quot;Barueri&quot;' value='&quot;Barueri&quot;' />
                <semantic-value key='&quot;Battersea&quot;' value='&quot;London&quot;' />
                <semantic-value key='&quot;Belle Mead&quot;' value='&quot;Nashville&quot;' />
                <semantic-value key='&quot;Bengaluru&quot;' value='&quot;Bengaluru&quot;' />
                <semantic-value key='&quot;Berlin&quot;' value='&quot;Berlin&quot;' />
                <semantic-value key='&quot;Bikaner&quot;' value='&quot;Bikaner&quot;' />
                <semantic-value key='&quot;Bogota&quot;' value='&quot;Bogotá&quot;' />
                <semantic-value key='&quot;Bournemouth&quot;' value='&quot;Bournemouth&quot;' />
                <semantic-value key='&quot;Bridgetown&quot;' value='&quot;Bridgetown&quot;' />
                <semantic-value key='&quot;Brisbane&quot;' value='&quot;Brisbane&quot;' />
                <semantic-value key='&quot;Brussels&quot;' value='&quot;Brussels&quot;' />
                <semantic-value key='&quot;Buenos Aires&quot;' value='&quot;Buenos Aires&quot;' />
                <semantic-value key='&quot;Canoas&quot;' value='&quot;Canoas&quot;' />
                <semantic-value key='&quot;Chandigarh&quot;' value='&quot;Chandigarh&quot;' />
                <semantic-value key='&quot;Chennai&quot;' value='&quot;Chennai&quot;' />
                <semantic-value key='&quot;Cuernavaca&quot;' value='&quot;Cuernavaca&quot;' />
                <semantic-value key='&quot;Davis&quot;' value='&quot;Davis&quot;' />
                <semantic-value key='&quot;Dehradun&quot;' value='&quot;Dehra Dun&quot;' />
                <semantic-value key='&quot;Dublin&quot;' value='&quot;Dublin&quot;' />
                <semantic-value key='&quot;Ghaziabad&quot;' value='&quot;Ghaziabad&quot;' />
                <semantic-value key='&quot;Gumla&quot;' value='&quot;Gumla&quot;' />
                <semantic-value key='&quot;Gwalior&quot;' value='&quot;Gwalior&quot;' />
                <semantic-value key='&quot;Helsinki&quot;' value='&quot;Helsinki&quot;' />
                <semantic-value key='&quot;Hoboken&quot;' value='&quot;Hoboken&quot;' />
                <semantic-value key='&quot;Indore&quot;' value='&quot;Indore&quot;' />
                <semantic-value key='&quot;Kingston&quot;' value='&quot;Kingston&quot;' />
                <semantic-value key='&quot;Lakewood Ranch&quot;' value='&quot;Bradenton&quot;' />
                <semantic-value key='&quot;Lima&quot;' value='&quot;Lima&quot;' />
                <semantic-value key='&quot;Lisbon&quot;' value='&quot;Lisbon&quot;' />
                <semantic-value key='&quot;London&quot;' value='&quot;London&quot;' />
                <semantic-value key='&quot;Long Island&quot;' value='&quot;Long Island&quot;' />
                <semantic-value key='&quot;Macerata&quot;' value='&quot;Macerata&quot;' />
                <semantic-value key='&quot;Melbourne&quot;' value='&quot;Melbourne&quot;' />
                <semantic-value key='&quot;Mexico City&quot;' value='&quot;Mexico City&quot;' />
                <semantic-value key='&quot;Munich&quot;' value='&quot;Munich&quot;' />
                <semantic-value key='&quot;Nashik&quot;' value='&quot;New Delhi&quot;' />
                <semantic-value key='&quot;New Delhi&quot;' value='&quot;New Delhi&quot;' />
                <semantic-value key='&quot;Oranjestad&quot;' value='&quot;Oranjestad&quot;' />
                <semantic-value key='&quot;Paris&quot;' value='&quot;Paris&quot;' />
                <semantic-value key='&quot;Pinecrest&quot;' value='&quot;Pinecrest&quot;' />
                <semantic-value key='&quot;Pune&quot;' value='&quot;Pune&quot;' />
                <semantic-value key='&quot;Quito&quot;' value='&quot;Quito&quot;' />
                <semantic-value key='&quot;Redmond City&quot;' value='&quot;Redmond&quot;' />
                <semantic-value key='&quot;Rehoboth&quot;' value='&quot;Rehoboth&quot;' />
                <semantic-value key='&quot;Reykjavík&quot;' value='&quot;Reykjavik&quot;' />
                <semantic-value key='&quot;Rio de Janeiro&quot;' value='&quot;Rio De Janeiro&quot;' />
                <semantic-value key='&quot;San Juan&quot;' value='&quot;San Juan de Dios&quot;' />
                <semantic-value key='&quot;Santiago&quot;' value='&quot;Santiago&quot;' />
                <semantic-value key='&quot;Seoul&quot;' value='&quot;Seoul&quot;' />
                <semantic-value key='&quot;Shahabad&quot;' value='&quot;Shahabad&quot;' />
                <semantic-value key='&quot;Sunny Isles&quot;' value='&quot;Sunny Isles Beach&quot;' />
                <semantic-value key='&quot;Tegucigalpa&quot;' value='&quot;Tegucigalpa&quot;' />
                <semantic-value key='&quot;Tehran&quot;' value='&quot;Tehran&quot;' />
                <semantic-value key='&quot;Tel Aviv-Yafo&quot;' value='&quot;Tel Aviv-Yafo&quot;' />
                <semantic-value key='&quot;Thane&quot;' value='&quot;Thane&quot;' />
                <semantic-value key='&quot;Torrent&quot;' value='&quot;Torrent&quot;' />
                <semantic-value key='&quot;Ulaanbaatar&quot;' value='&quot;Ulan Bator&quot;' />
                <semantic-value key='&quot;Vancouver&quot;' value='&quot;Vancouver&quot;' />
                <semantic-value key='&quot;Vantaa&quot;' value='&quot;Vantaa&quot;' />
                <semantic-value key='&quot;Warsaw&quot;' value='&quot;Warsaw&quot;' />
                <semantic-value key='&quot;Wellington&quot;' value='&quot;Wellington&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Alexandria&quot;' value='-77.050551999999996' />
                <semantic-value key='&quot;Ames&quot;' value='-93.631' />
                <semantic-value key='&quot;Andover&quot;' value='-71.136799999999994' />
                <semantic-value key='&quot;Annandale&quot;' value='-77.196399999999997' />
                <semantic-value key='&quot;Arlington&quot;' value='-97.108099999999993' />
                <semantic-value key='&quot;Athens&quot;' value='-83.357600000000005' />
                <semantic-value key='&quot;Atlanta&quot;' value='-84.387699999999995' />
                <semantic-value key='&quot;Austin&quot;' value='-97.743099999999998' />
                <semantic-value key='&quot;Avon&quot;' value='-86.399699999999996' />
                <semantic-value key='&quot;Baltimore&quot;' value='-76.612200000000001' />
                <semantic-value key='&quot;Bay City&quot;' value='-83.888900000000007' />
                <semantic-value key='&quot;Beachwood&quot;' value='-81.508700000000005' />
                <semantic-value key='&quot;Bellingham&quot;' value='-122.4787' />
                <semantic-value key='&quot;Berkeley&quot;' value='-122.273' />
                <semantic-value key='&quot;Bethany&quot;' value='-97.632300000000001' />
                <semantic-value key='&quot;Bethlehem&quot;' value='-75.370500000000007' />
                <semantic-value key='&quot;Blacksburg&quot;' value='-80.413899999999998' />
                <semantic-value key='&quot;Boston&quot;' value='-71.058899999999994' />
                <semantic-value key='&quot;Boulder&quot;' value='-105.2705' />
                <semantic-value key='&quot;Bowie&quot;' value='-76.7791' />
                <semantic-value key='&quot;Brooklyn&quot;' value='-73.944199999999995' />
                <semantic-value key='&quot;Burlington&quot;' value='-73.212100000000007' />
                <semantic-value key='&quot;Cambridge&quot;' value='-71.109700000000004' />
                <semantic-value key='&quot;Canton&quot;' value='-81.378399999999999' />
                <semantic-value key='&quot;Charlotte&quot;' value='-80.843100000000007' />
                <semantic-value key='&quot;Charlottesville&quot;' value='-78.476699999999994' />
                <semantic-value key='&quot;Cincinnati&quot;' value='-84.512' />
                <semantic-value key='&quot;Columbia&quot;' value='-81.034800000000004' />
                <semantic-value key='&quot;Columbus&quot;' value='-82.998800000000003' />
                <semantic-value key='&quot;Covington&quot;' value='-83.860200000000006' />
                <semantic-value key='&quot;Dallas&quot;' value='-96.796999999999997' />
                <semantic-value key='&quot;Dayton&quot;' value='-84.191599999999994' />
                <semantic-value key='&quot;Decatur&quot;' value='-84.296300000000002' />
                <semantic-value key='&quot;Denton&quot;' value='-97.133099999999999' />
                <semantic-value key='&quot;Denver&quot;' value='-104.9903' />
                <semantic-value key='&quot;Detroit&quot;' value='-83.0458' />
                <semantic-value key='&quot;Durham&quot;' value='-78.898600000000002' />
                <semantic-value key='&quot;East Brunswick&quot;' value='-74.405000000000001' />
                <semantic-value key='&quot;Epping&quot;' value='-71.073499999999996' />
                <semantic-value key='&quot;Evanston&quot;' value='-87.687700000000007' />
                <semantic-value key='&quot;Fairfax&quot;' value='-77.306399999999996' />
                <semantic-value key='&quot;Fairfield&quot;' value='-73.261300000000006' />
                <semantic-value key='&quot;Fremont&quot;' value='-121.98860000000001' />
                <semantic-value key='&quot;Gainesville&quot;' value='-82.324799999999996' />
                <semantic-value key='&quot;Glen Rock&quot;' value='-74.132900000000006' />
                <semantic-value key='&quot;Golden Valley&quot;' value='-93.359999999999999' />
                <semantic-value key='&quot;Hagerstown&quot;' value='-77.719999999999999' />
                <semantic-value key='&quot;Helena&quot;' value='-112.0391' />
                <semantic-value key='&quot;Hernando&quot;' value='-89.993706000000003' />
                <semantic-value key='&quot;Hollywood&quot;' value='-80.149500000000003' />
                <semantic-value key='&quot;Homestead&quot;' value='-80.477599999999995' />
                <semantic-value key='&quot;Houston&quot;' value='-95.369799999999998' />
                <semantic-value key='&quot;Irvine&quot;' value='-117.8265' />
                <semantic-value key='&quot;Ithaca&quot;' value='-76.501900000000006' />
                <semantic-value key='&quot;Jacksonville&quot;' value='-81.655699999999996' />
                <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
                <semantic-value key='&quot;Las Vegas&quot;' value='-115.1391' />
                <semantic-value key='&quot;Lewisville&quot;' value='-96.994200000000006' />
                <semantic-value key='&quot;Louisville&quot;' value='-85.758499999999998' />
                <semantic-value key='&quot;Manassas&quot;' value='-77.475300000000004' />
                <semantic-value key='&quot;Manhattan&quot;' value='-73.971321000000003' />
                <semantic-value key='&quot;Manhattan Beach&quot;' value='-118.4109' />
                <semantic-value key='&quot;Marietta&quot;' value='-84.549899999999994' />
                <semantic-value key='&quot;Markham&quot;' value='-87.694800000000001' />
                <semantic-value key='&quot;Miami&quot;' value='-80.191800000000001' />
                <semantic-value key='&quot;Mountain View&quot;' value='-122.0839' />
                <semantic-value key='&quot;Naples&quot;' value='-81.794799999999995' />
                <semantic-value key='&quot;Nashville&quot;' value='-86.781599999999997' />
                <semantic-value key='&quot;Oakland&quot;' value='-122.27119999999999' />
                <semantic-value key='&quot;Oakland Park&quot;' value='-80.132000000000005' />
                <semantic-value key='&quot;Orlando&quot;' value='-81.378900000000002' />
                <semantic-value key='&quot;Orono&quot;' value='-68.671899999999994' />
                <semantic-value key='&quot;Palo Alto&quot;' value='-122.143' />
                <semantic-value key='&quot;Pasadena&quot;' value='-118.14449999999999' />
                <semantic-value key='&quot;Philadelphia&quot;' value='-75.165199999999999' />
                <semantic-value key='&quot;Phoenix&quot;' value='-112.074' />
                <semantic-value key='&quot;Plantation&quot;' value='-80.233099999999993' />
                <semantic-value key='&quot;Pleasant Hill&quot;' value='-122.0608' />
                <semantic-value key='&quot;Portland&quot;' value='-122.6784' />
                <semantic-value key='&quot;Princeton&quot;' value='-74.667199999999994' />
                <semantic-value key='&quot;Raleigh&quot;' value='-78.638199999999998' />
                <semantic-value key='&quot;Reno&quot;' value='-119.8143' />
                <semantic-value key='&quot;Rochester&quot;' value='-77.608800000000002' />
                <semantic-value key='&quot;Rogers&quot;' value='-94.125699999999995' />
                <semantic-value key='&quot;Saco&quot;' value='-70.442800000000005' />
                <semantic-value key='&quot;Sacramento&quot;' value='-121.4944' />
                <semantic-value key='&quot;Saint Petersburg&quot;' value='-82.640299999999996' />
                <semantic-value key='&quot;San Diego&quot;' value='-117.1611' />
                <semantic-value key='&quot;San Francisco&quot;' value='-122.4194' />
                <semantic-value key='&quot;San Jose&quot;' value='-121.8853' />
                <semantic-value key='&quot;San Mateo&quot;' value='-122.32550000000001' />
                <semantic-value key='&quot;Santa Clara&quot;' value='-121.9552' />
                <semantic-value key='&quot;Savannah&quot;' value='-81.091200000000001' />
                <semantic-value key='&quot;Sharon&quot;' value='-80.493399999999994' />
                <semantic-value key='&quot;Sherwood&quot;' value='-92.191100000000006' />
                <semantic-value key='&quot;Springfield&quot;' value='-89.650099999999995' />
                <semantic-value key='&quot;Stanford&quot;' value='-122.16970000000001' />
                <semantic-value key='&quot;Sunnyvale&quot;' value='-122.0363' />
                <semantic-value key='&quot;Tampa&quot;' value='-82.4572' />
                <semantic-value key='&quot;Union City&quot;' value='-122.04389999999999' />
                <semantic-value key='&quot;Utica&quot;' value='-75.232699999999994' />
                <semantic-value key='&quot;Virginia&quot;' value='-78.656899999999993' />
                <semantic-value key='&quot;Walpole&quot;' value='-71.249499999999998' />
                <semantic-value key='&quot;Waltham&quot;' value='-71.249499999999998' />
                <semantic-value key='&quot;Waterloo&quot;' value='-80.520399999999995' />
                <semantic-value key='&quot;Westerville&quot;' value='-82.931899999999999' />
                <semantic-value key='&quot;Westminster&quot;' value='-117.9897' />
                <semantic-value key='&quot;Weston&quot;' value='-80.399799999999999' />
                <semantic-value key='&quot;Winter Park&quot;' value='-81.339200000000005' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;England&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;S\\\\343o Paulo&quot;' value='&quot;Antarctica&quot;' />
                <semantic-value key='&quot;Virginia&quot;' value='&quot;United States&quot;' />
              </semantic-values>
            </column>
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <semantic-values semantic-role='[State].[Name]'>
                <semantic-value key='&quot;Deleware&quot;' value='&quot;Delaware&quot;' />
                <semantic-value key='&quot;Virginia&quot;' value='&quot;Virginia&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[City]' derivation='Count' name='[cnt:City:qk]' pivot='key' type='quantitative' />
            <column-instance column='[State]' derivation='Count' name='[cnt:State:qk]' pivot='key' type='quantitative' />
            <column caption='Combo Count' datatype='integer' name='[combo_count]' role='measure' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[combo_count]' derivation='Sum' name='[sum:combo_count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[none:City:nk]'>
            <groupfilter function='level-members' level='[none:City:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[sum:combo_count:qk]' included-values='in-range'>
            <min>1</min>
            <max>636</max>
          </filter>
          <slices>
            <column>[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[sum:combo_count:qk]</column>
            <column>[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[none:City:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[Latitude (generated)]' field-type='quantitative' max='6535176.1659644907' min='2394592.9277870506' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='1' field='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[Longitude (generated)]' field-type='quantitative' fold='true' max='-324362.10682350025' min='-18437727.408808123' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[Longitude (generated)]' field-type='quantitative' max='-324362.10682350025' min='-18437727.408808123' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <format attr='tick-color' field='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[sum:combo_count:qk]' value='#00000000' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-align' field='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[sum:combo_count:qk]' value='center' />
            <format attr='text-align' data-class='subtotal' field='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[sum:combo_count:qk]' value='center' />
            <format attr='text-orientation' value='0' />
            <format attr='vertical-align' value='center' />
            <format attr='text-align' value='auto' />
            <format attr='font-size' data-class='subtotal' field='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[sum:combo_count:qk]' value='8' />
            <format attr='font-family' field='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[sum:combo_count:qk]' value='Tableau Medium' />
            <format attr='text-align' field='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[none:State:nk]' value='center' />
            <format attr='text-orientation' field='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[none:State:nk]' value='0' />
            <format attr='color' field='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[none:State:nk]' value='#000000' />
            <format attr='color' field='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[sum:combo_count:qk]' value='#000000' />
            <format attr='font-style' field='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[sum:combo_count:qk]' value='normal' />
            <format attr='font-weight' field='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[sum:combo_count:qk]' value='bold' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' field='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[sum:combo_count:qk]' value='#ffffff' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' scope='cols' value='bold' />
            <format attr='font-weight' scope='rows' value='bold' />
            <format attr='color' field='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[none:State:nk]' value='#000000' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[sum:combo_count:qk]' field-type='quantitative' max='100' max-size='1' min='1' min-size='0' type='centersize' />
            <encoding attr='color' field='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[sum:combo_count:qk]' max='110' min='1' palette='blue_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[cnt:State:qk]' max='500' min='1' palette='blue_teal_10_0' symmetric='false' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='8' />
            <format attr='in-tooltip' field='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[none:Country:nk]' value='false' />
            <format attr='in-tooltip' field='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[cnt:State:qk]' value='false' />
            <format attr='in-tooltip' field='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[cnt:City:qk]' value='false' />
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#f0f7fa' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='place-village' value='true' />
            <format attr='enabled' id='place-town' value='true' />
            <format attr='enabled' id='place-islands' value='true' />
            <format attr='enabled' id='place-islands-2' value='true' />
            <format attr='enabled' id='place-city-sm' value='true' />
            <format attr='enabled' id='place-city-md-s' value='true' />
            <format attr='enabled' id='place-city-md-n' value='true' />
            <format attr='enabled' id='place-city-lg-s' value='true' />
            <format attr='enabled' id='place-city-lg-n' value='true' />
            <format attr='enabled' id='place-capital-s' value='true' />
            <format attr='enabled' id='place-capital-n' value='true' />
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[none:City:nk]' value='City'>
              <formatted-text>
                <run fontalignment='1'>City</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[none:State:nk]' />
              <lod column='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='1.5292567014694214' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[Longitude (generated)]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Heatmap' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[cnt:City:qk]' />
              <lod column='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[none:City:nk]' />
              <lod column='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[none:State:nk]' />
              <lod column='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[none:Country:nk]' />
              <lod column='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[sum:combo_count:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#666666' fontname='Tableau Medium' fontsize='9'>City:</run>
                <run bold='true' fontcolor='#787878' fontname='Tableau Medium' fontsize='9'>Æ&#9;</run>
                <run bold='true' fontcolor='#000000' fontname='Tableau Medium' fontsize='9'><![CDATA[ <[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[none:City:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#666666' fontname='Tableau Medium' fontsize='9'>Count:</run>
                <run bold='true' fontcolor='#000000' fontname='Tableau Medium' fontsize='9'>Æ&#9; </run>
                <run bold='true' fontcolor='#e15759' fontname='Tableau Medium' fontsize='9'><![CDATA[<[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[sum:combo_count:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='1.8570718765258789' />
                <encoding attr='density-color' palette='density_light_multicolor' type='interpolated' />
                <format attr='mark-labels-show' value='false' />
                <format attr='density-intensity' value='0.59258079528808594' />
                <format attr='density-kernel-size' value='2.4198894500732422' />
                <format attr='has-stroke' value='false' />
                <format attr='has-halo' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[Longitude (generated)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[sum:combo_count:qk]' />
              <size column='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[cnt:State:qk]' />
              <text column='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[sum:combo_count:qk]' />
              <lod column='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[none:State:nk]' />
              <lod column='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[none:Country:nk]' />
              <geometry column='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#666666' fontname='Tableau Medium'>State:</run>
                <run bold='true' fontcolor='#898989' fontname='Tableau Medium'>Æ&#9;</run>
                <run bold='true' fontcolor='#000000' fontname='Tableau Medium' italic='true'>Æ </run>
                <run bold='true' fontcolor='#e15759' fontname='Tableau Medium' italic='true'><![CDATA[<[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[none:State:nk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[sum:combo_count:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='size' value='3.6574585437774658' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-transparency' value='193' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[Latitude (generated)]</rows>
        <cols>([federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[Longitude (generated)] + [federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[Longitude (generated)])</cols>
      </table>
      <simple-id uuid='{AB7F44C0-1DFC-4B80-98FC-02C3ADE693BA}' />
    </worksheet>
    <worksheet name='House_Info_2022'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontname='Tableau Medium' fontsize='18'>     Distribution Of Jobs By House (2022)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='hacker_house_info_2022 (Miami_HW)' name='federated.08p2aoo0msdhrx17tqk1o1ame7h1' />
          </datasources>
          <datasource-dependencies datasource='federated.08p2aoo0msdhrx17tqk1o1ame7h1'>
            <column caption='Combo Count' datatype='integer' name='[combo_count]' role='measure' type='quantitative' />
            <column caption='Hacker Job' datatype='string' name='[hacker_job]' role='dimension' type='nominal' />
            <column caption='House Name' datatype='string' name='[house_name]' role='dimension' type='nominal' />
            <column-instance column='[hacker_job]' derivation='None' name='[none:hacker_job:nk]' pivot='key' type='nominal' />
            <column-instance column='[house_name]' derivation='None' name='[none:house_name:nk]' pivot='key' type='nominal' />
            <column-instance column='[combo_count]' derivation='Sum' name='[sum:combo_count:ok]' pivot='key' type='ordinal' />
            <column-instance column='[combo_count]' derivation='Sum' name='[sum:combo_count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08p2aoo0msdhrx17tqk1o1ame7h1].[Exclusions (Hacker Job,House Name)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[none:hacker_job:nk]' />
                <groupfilter function='level-members' level='[none:house_name:nk]' />
              </groupfilter>
              <groupfilter function='union'>
                <groupfilter function='crossjoin'>
                  <groupfilter function='member' level='[none:hacker_job:nk]' member='&quot;&quot;' />
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:house_name:nk]' member='&quot;&quot;' />
                    <groupfilter function='member' level='[none:house_name:nk]' member='&quot;Casa De Quicknode&quot;' />
                    <groupfilter function='member' level='[none:house_name:nk]' member='&quot;Casa OpenStore&quot;' />
                    <groupfilter function='member' level='[none:house_name:nk]' member='&quot;Fortunafi - Space Whale Capital&quot;' />
                    <groupfilter function='member' level='[none:house_name:nk]' member='&quot;Handshake House&quot;' />
                    <groupfilter function='member' level='[none:house_name:nk]' member='&quot;Hard Tech Hack House&quot;' />
                    <groupfilter function='member' level='[none:house_name:nk]' member='&quot;Norus House&quot;' />
                    <groupfilter function='member' level='[none:house_name:nk]' member='&quot;Polygon Hacker House&quot;' />
                    <groupfilter function='member' level='[none:house_name:nk]' member='&quot;RAMP Hacker House&quot;' />
                    <groupfilter function='member' level='[none:house_name:nk]' member='&quot;Shrimp Society Solana Hacker House&quot;' />
                    <groupfilter function='member' level='[none:house_name:nk]' member='&quot;Sonr Villa&quot;' />
                    <groupfilter function='member' level='[none:house_name:nk]' member='&quot;Space-Eyes Hacker House&quot;' />
                    <groupfilter function='member' level='[none:house_name:nk]' member='&quot;Tap Hacker House&quot;' />
                    <groupfilter function='member' level='[none:house_name:nk]' member='&quot;Thresholds Hacker House&quot;' />
                  </groupfilter>
                </groupfilter>
                <groupfilter function='crossjoin'>
                  <groupfilter function='union'>
                    <groupfilter function='member' level='[none:hacker_job:nk]' member='&quot;busDev&quot;' />
                    <groupfilter function='member' level='[none:hacker_job:nk]' member='&quot;creative&quot;' />
                    <groupfilter function='member' level='[none:hacker_job:nk]' member='&quot;designer&quot;' />
                    <groupfilter function='member' level='[none:hacker_job:nk]' member='&quot;engineer&quot;' />
                    <groupfilter function='member' level='[none:hacker_job:nk]' member='&quot;marketerOrCommunityBuilder&quot;' />
                  </groupfilter>
                  <groupfilter function='member' level='[none:house_name:nk]' member='&quot;&quot;' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.08p2aoo0msdhrx17tqk1o1ame7h1].[none:hacker_job:nk]'>
            <groupfilter function='level-members' level='[none:hacker_job:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.08p2aoo0msdhrx17tqk1o1ame7h1].[none:house_name:nk]'>
            <groupfilter function='level-members' level='[none:house_name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.08p2aoo0msdhrx17tqk1o1ame7h1].[Exclusions (Hacker Job,House Name)]</column>
            <column>[federated.08p2aoo0msdhrx17tqk1o1ame7h1].[none:hacker_job:nk]</column>
            <column>[federated.08p2aoo0msdhrx17tqk1o1ame7h1].[none:house_name:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.08p2aoo0msdhrx17tqk1o1ame7h1].[sum:combo_count:qk]' scope='cols' value='Count' />
            <format attr='auto-subtitle' class='0' field='[federated.08p2aoo0msdhrx17tqk1o1ame7h1].[sum:combo_count:qk]' scope='cols' value='true' />
            <format attr='subtitle' class='0' field='[federated.08p2aoo0msdhrx17tqk1o1ame7h1].[sum:combo_count:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.08p2aoo0msdhrx17tqk1o1ame7h1].[none:house_name:nk]' value='41' />
            <format attr='width' field='[federated.08p2aoo0msdhrx17tqk1o1ame7h1].[none:house_name:nk]' value='100' />
            <format attr='width' field='[federated.08p2aoo0msdhrx17tqk1o1ame7h1].[none:hacker_job:nk]' value='143' />
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='center' />
            <format attr='wrap' value='on' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.08p2aoo0msdhrx17tqk1o1ame7h1].[none:house_name:nk]' value='180' />
            <format attr='width' field='[federated.08p2aoo0msdhrx17tqk1o1ame7h1].[none:hacker_job:nk]' value='188' />
            <format attr='wrap' data-class='subtotal' field='[federated.08p2aoo0msdhrx17tqk1o1ame7h1].[none:house_name:nk]' value='on' />
            <format attr='text-orientation' data-class='subtotal' field='[federated.08p2aoo0msdhrx17tqk1o1ame7h1].[none:house_name:nk]' value='0' />
          </style-rule>
          <style-rule element='field-labels'>
            <format attr='font-size' value='10' />
            <format attr='font-weight' value='bold' />
            <format attr='background-color' value='#f0f7fa' />
          </style-rule>
          <style-rule element='field-labels-decoration'>
            <format attr='text-align' value='center' />
            <format attr='vertical-align' value='center' />
            <format attr='text-orientation' value='0' />
          </style-rule>
          <style-rule element='label'>
            <format attr='vertical-align' field='[federated.08p2aoo0msdhrx17tqk1o1ame7h1].[none:house_name:nk]' value='center' />
            <format attr='text-orientation' field='[federated.08p2aoo0msdhrx17tqk1o1ame7h1].[none:house_name:nk]' value='0' />
            <format attr='text-align' scope='rows' value='center' />
            <format attr='wrap' scope='rows' value='on' />
            <format attr='vertical-align' scope='rows' value='center' />
            <format attr='wrap' scope='cols' value='on' />
            <format attr='color' field='[federated.08p2aoo0msdhrx17tqk1o1ame7h1].[none:house_name:nk]' value='#000000' />
            <format attr='wrap' field='[federated.08p2aoo0msdhrx17tqk1o1ame7h1].[none:house_name:nk]' value='on' />
            <format attr='font-family' field='[federated.08p2aoo0msdhrx17tqk1o1ame7h1].[none:house_name:nk]' value='Tableau Medium' />
            <format attr='text-orientation' field='[federated.08p2aoo0msdhrx17tqk1o1ame7h1].[none:hacker_job:nk]' value='0' />
            <format attr='text-align' field='[federated.08p2aoo0msdhrx17tqk1o1ame7h1].[none:house_name:nk]' value='center' />
            <format attr='font-family' field='[federated.08p2aoo0msdhrx17tqk1o1ame7h1].[none:hacker_job:nk]' value='Tableau Medium' />
            <format attr='font-weight' field='[federated.08p2aoo0msdhrx17tqk1o1ame7h1].[none:hacker_job:nk]' value='normal' />
            <format attr='text-align' field='[federated.08p2aoo0msdhrx17tqk1o1ame7h1].[none:hacker_job:nk]' value='center' />
            <format attr='wrap' field='[federated.08p2aoo0msdhrx17tqk1o1ame7h1].[none:hacker_job:nk]' value='auto' />
            <format attr='vertical-align' field='[federated.08p2aoo0msdhrx17tqk1o1ame7h1].[none:hacker_job:nk]' value='center' />
            <format attr='font-size' field='[federated.08p2aoo0msdhrx17tqk1o1ame7h1].[none:house_name:nk]' value='9' />
            <format attr='font-family' field='[federated.08p2aoo0msdhrx17tqk1o1ame7h1].[sum:combo_count:qk]' value='Tableau Medium' />
            <format attr='font-weight' field='[federated.08p2aoo0msdhrx17tqk1o1ame7h1].[sum:combo_count:qk]' value='bold' />
            <format attr='color' field='[federated.08p2aoo0msdhrx17tqk1o1ame7h1].[sum:combo_count:qk]' value='#000000' />
            <format attr='font-size' field='[federated.08p2aoo0msdhrx17tqk1o1ame7h1].[sum:combo_count:qk]' value='8' />
            <format attr='color' field='[federated.08p2aoo0msdhrx17tqk1o1ame7h1].[none:hacker_job:nk]' value='#000000' />
            <format attr='font-size' field='[federated.08p2aoo0msdhrx17tqk1o1ame7h1].[none:hacker_job:nk]' value='8' />
            <format attr='font-weight' field='[federated.08p2aoo0msdhrx17tqk1o1ame7h1].[none:house_name:nk]' value='normal' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size' field='[federated.08p2aoo0msdhrx17tqk1o1ame7h1].[sum:combo_count:qk]' field-type='quantitative' max='35' max-size='1' min='1' min-size='0' type='quantsize' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
            <format attr='background-color' value='#f0f7fa' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#f0f7fa' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='color' value='#000000' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.08p2aoo0msdhrx17tqk1o1ame7h1].[none:hacker_job:nk]' value='Hacker Job' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='font-size' value='8' />
            <format attr='font-weight' value='bold' />
            <format attr='text-align' value='auto' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.08p2aoo0msdhrx17tqk1o1ame7h1].[none:hacker_job:nk]' />
              <size column='[federated.08p2aoo0msdhrx17tqk1o1ame7h1].[sum:combo_count:ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#666666' fontname='Tableau Medium'>Count:</run>
                <run bold='true' fontcolor='#787878' fontname='Tableau Medium'>Æ&#9;</run>
                <run bold='true' fontcolor='#e15759' fontname='Tableau Medium'><![CDATA[<[federated.08p2aoo0msdhrx17tqk1o1ame7h1].[sum:combo_count:ok]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2' />
                <format attr='mark-color' value='#59a14f' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.08p2aoo0msdhrx17tqk1o1ame7h1].[none:house_name:nk] / [federated.08p2aoo0msdhrx17tqk1o1ame7h1].[none:hacker_job:nk])</rows>
        <cols>[federated.08p2aoo0msdhrx17tqk1o1ame7h1].[sum:combo_count:qk]</cols>
      </table>
      <simple-id uuid='{224D298F-D218-40E3-9C8E-A77A9DB44824}' />
    </worksheet>
    <worksheet name='Int._Hacker_locations_2022'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tableau Medium' fontsize='18'>Hacker Locations 2022</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='hacker_location_2022 (Miami_HW)' name='federated.0p6qq6d05piqtx19z6lqv1ne1lzu' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0p6qq6d05piqtx19z6lqv1ne1lzu'>
            <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
              <semantic-values semantic-role='[Geographical].[Latitude]'>
                <semantic-value key='&quot;Alexandria&quot;' value='38.820450000000001' />
                <semantic-value key='&quot;Ames&quot;' value='42.030799999999999' />
                <semantic-value key='&quot;Andover&quot;' value='42.658299999999997' />
                <semantic-value key='&quot;Annandale&quot;' value='38.830399999999997' />
                <semantic-value key='&quot;Arlington&quot;' value='32.735700000000001' />
                <semantic-value key='&quot;Athens&quot;' value='33.951900000000002' />
                <semantic-value key='&quot;Atlanta&quot;' value='33.748800000000003' />
                <semantic-value key='&quot;Austin&quot;' value='30.267199999999999' />
                <semantic-value key='&quot;Avon&quot;' value='39.762799999999999' />
                <semantic-value key='&quot;Baltimore&quot;' value='39.290399999999998' />
                <semantic-value key='&quot;Bay City&quot;' value='43.594499999999996' />
                <semantic-value key='&quot;Beachwood&quot;' value='41.464500000000001' />
                <semantic-value key='&quot;Bellingham&quot;' value='48.751899999999999' />
                <semantic-value key='&quot;Berkeley&quot;' value='37.871499999999997' />
                <semantic-value key='&quot;Bethany&quot;' value='35.518700000000003' />
                <semantic-value key='&quot;Bethlehem&quot;' value='40.625900000000001' />
                <semantic-value key='&quot;Blacksburg&quot;' value='37.229599999999998' />
                <semantic-value key='&quot;Boston&quot;' value='42.360100000000003' />
                <semantic-value key='&quot;Boulder&quot;' value='40.015000000000001' />
                <semantic-value key='&quot;Bowie&quot;' value='39.006799999999998' />
                <semantic-value key='&quot;Brooklyn&quot;' value='40.678199999999997' />
                <semantic-value key='&quot;Burlington&quot;' value='44.475900000000003' />
                <semantic-value key='&quot;Cambridge&quot;' value='42.373600000000003' />
                <semantic-value key='&quot;Canton&quot;' value='40.798900000000003' />
                <semantic-value key='&quot;Charlotte&quot;' value='35.2271' />
                <semantic-value key='&quot;Charlottesville&quot;' value='38.029299999999999' />
                <semantic-value key='&quot;Cincinnati&quot;' value='39.103099999999998' />
                <semantic-value key='&quot;Columbia&quot;' value='34.000700000000002' />
                <semantic-value key='&quot;Columbus&quot;' value='39.961199999999998' />
                <semantic-value key='&quot;Covington&quot;' value='33.596800000000002' />
                <semantic-value key='&quot;Dallas&quot;' value='32.776699999999998' />
                <semantic-value key='&quot;Dayton&quot;' value='39.758899999999997' />
                <semantic-value key='&quot;Decatur&quot;' value='33.774799999999999' />
                <semantic-value key='&quot;Denton&quot;' value='33.214799999999997' />
                <semantic-value key='&quot;Denver&quot;' value='39.739199999999997' />
                <semantic-value key='&quot;Detroit&quot;' value='42.331400000000002' />
                <semantic-value key='&quot;Durham&quot;' value='35.994' />
                <semantic-value key='&quot;East Brunswick&quot;' value='40.431699999999999' />
                <semantic-value key='&quot;Epping&quot;' value='43.0535' />
                <semantic-value key='&quot;Evanston&quot;' value='42.045099999999998' />
                <semantic-value key='&quot;Fairfax&quot;' value='38.846200000000003' />
                <semantic-value key='&quot;Fairfield&quot;' value='41.140799999999999' />
                <semantic-value key='&quot;Fremont&quot;' value='37.548499999999997' />
                <semantic-value key='&quot;Gainesville&quot;' value='29.651599999999998' />
                <semantic-value key='&quot;Glen Rock&quot;' value='40.962899999999998' />
                <semantic-value key='&quot;Golden Valley&quot;' value='44.991700000000002' />
                <semantic-value key='&quot;Hagerstown&quot;' value='39.641800000000003' />
                <semantic-value key='&quot;Helena&quot;' value='46.589100000000002' />
                <semantic-value key='&quot;Hernando&quot;' value='34.823985999999998' />
                <semantic-value key='&quot;Hollywood&quot;' value='26.011199999999999' />
                <semantic-value key='&quot;Homestead&quot;' value='25.468699999999998' />
                <semantic-value key='&quot;Houston&quot;' value='29.760400000000001' />
                <semantic-value key='&quot;Irvine&quot;' value='33.684600000000003' />
                <semantic-value key='&quot;Ithaca&quot;' value='42.444000000000003' />
                <semantic-value key='&quot;Jacksonville&quot;' value='30.3322' />
                <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
                <semantic-value key='&quot;Las Vegas&quot;' value='36.171599999999998' />
                <semantic-value key='&quot;Lewisville&quot;' value='33.046300000000002' />
                <semantic-value key='&quot;Louisville&quot;' value='38.252699999999997' />
                <semantic-value key='&quot;Manassas&quot;' value='38.750900000000001' />
                <semantic-value key='&quot;Manhattan&quot;' value='40.776676000000002' />
                <semantic-value key='&quot;Manhattan Beach&quot;' value='33.884700000000002' />
                <semantic-value key='&quot;Marietta&quot;' value='33.952599999999997' />
                <semantic-value key='&quot;Markham&quot;' value='41.593600000000002' />
                <semantic-value key='&quot;Miami&quot;' value='25.761700000000001' />
                <semantic-value key='&quot;Mountain View&quot;' value='37.386099999999999' />
                <semantic-value key='&quot;Naples&quot;' value='26.141999999999999' />
                <semantic-value key='&quot;Nashville&quot;' value='36.162700000000001' />
                <semantic-value key='&quot;Oakland&quot;' value='37.804400000000001' />
                <semantic-value key='&quot;Oakland Park&quot;' value='26.1723' />
                <semantic-value key='&quot;Orlando&quot;' value='28.538399999999999' />
                <semantic-value key='&quot;Orono&quot;' value='44.883099999999999' />
                <semantic-value key='&quot;Palo Alto&quot;' value='37.441899999999997' />
                <semantic-value key='&quot;Pasadena&quot;' value='34.147799999999997' />
                <semantic-value key='&quot;Philadelphia&quot;' value='39.952599999999997' />
                <semantic-value key='&quot;Phoenix&quot;' value='33.448399999999999' />
                <semantic-value key='&quot;Plantation&quot;' value='26.127600000000001' />
                <semantic-value key='&quot;Pleasant Hill&quot;' value='37.948' />
                <semantic-value key='&quot;Portland&quot;' value='45.5152' />
                <semantic-value key='&quot;Princeton&quot;' value='40.357300000000002' />
                <semantic-value key='&quot;Raleigh&quot;' value='35.779600000000002' />
                <semantic-value key='&quot;Reno&quot;' value='39.529899999999998' />
                <semantic-value key='&quot;Rochester&quot;' value='43.156599999999997' />
                <semantic-value key='&quot;Rogers&quot;' value='36.333500000000001' />
                <semantic-value key='&quot;Saco&quot;' value='43.500900000000001' />
                <semantic-value key='&quot;Sacramento&quot;' value='38.581600000000002' />
                <semantic-value key='&quot;Saint Petersburg&quot;' value='27.767600000000002' />
                <semantic-value key='&quot;San Diego&quot;' value='32.715699999999998' />
                <semantic-value key='&quot;San Francisco&quot;' value='37.774900000000002' />
                <semantic-value key='&quot;San Jose&quot;' value='37.338700000000003' />
                <semantic-value key='&quot;San Mateo&quot;' value='37.563000000000002' />
                <semantic-value key='&quot;Santa Clara&quot;' value='37.354100000000003' />
                <semantic-value key='&quot;Savannah&quot;' value='32.0809' />
                <semantic-value key='&quot;Sharon&quot;' value='41.2331' />
                <semantic-value key='&quot;Sherwood&quot;' value='34.832099999999997' />
                <semantic-value key='&quot;Springfield&quot;' value='39.781700000000001' />
                <semantic-value key='&quot;Stanford&quot;' value='37.427500000000002' />
                <semantic-value key='&quot;Sunnyvale&quot;' value='37.3688' />
                <semantic-value key='&quot;Tampa&quot;' value='27.950600000000001' />
                <semantic-value key='&quot;Union City&quot;' value='37.593400000000003' />
                <semantic-value key='&quot;Utica&quot;' value='43.100900000000003' />
                <semantic-value key='&quot;Virginia&quot;' value='37.431600000000003' />
                <semantic-value key='&quot;Walpole&quot;' value='42.1417' />
                <semantic-value key='&quot;Waltham&quot;' value='42.1417' />
                <semantic-value key='&quot;Waterloo&quot;' value='43.464300000000001' />
                <semantic-value key='&quot;Westerville&quot;' value='40.1267' />
                <semantic-value key='&quot;Westminster&quot;' value='33.7592' />
                <semantic-value key='&quot;Weston&quot;' value='26.1004' />
                <semantic-value key='&quot;Winter Park&quot;' value='28.600000000000001' />
              </semantic-values>
              <semantic-values semantic-role='[City].[Name]'>
                <semantic-value key='&quot;Amaranth&quot;' value='&quot;Amaranth&quot;' />
                <semantic-value key='&quot;Amsterdam&quot;' value='&quot;Amsterdam&quot;' />
                <semantic-value key='&quot;Bangkok&quot;' value='&quot;Bangkok&quot;' />
                <semantic-value key='&quot;Barcelona&quot;' value='&quot;Barcelona&quot;' />
                <semantic-value key='&quot;Barueri&quot;' value='&quot;Barueri&quot;' />
                <semantic-value key='&quot;Battersea&quot;' value='&quot;London&quot;' />
                <semantic-value key='&quot;Belle Mead&quot;' value='&quot;Nashville&quot;' />
                <semantic-value key='&quot;Bengaluru&quot;' value='&quot;Bengaluru&quot;' />
                <semantic-value key='&quot;Berlin&quot;' value='&quot;Berlin&quot;' />
                <semantic-value key='&quot;Bikaner&quot;' value='&quot;Bikaner&quot;' />
                <semantic-value key='&quot;Bogota&quot;' value='&quot;Bogotá&quot;' />
                <semantic-value key='&quot;Bournemouth&quot;' value='&quot;Bournemouth&quot;' />
                <semantic-value key='&quot;Bridgetown&quot;' value='&quot;Bridgetown&quot;' />
                <semantic-value key='&quot;Brisbane&quot;' value='&quot;Brisbane&quot;' />
                <semantic-value key='&quot;Brussels&quot;' value='&quot;Brussels&quot;' />
                <semantic-value key='&quot;Buenos Aires&quot;' value='&quot;Buenos Aires&quot;' />
                <semantic-value key='&quot;Canoas&quot;' value='&quot;Canoas&quot;' />
                <semantic-value key='&quot;Chandigarh&quot;' value='&quot;Chandigarh&quot;' />
                <semantic-value key='&quot;Chennai&quot;' value='&quot;Chennai&quot;' />
                <semantic-value key='&quot;Cuernavaca&quot;' value='&quot;Cuernavaca&quot;' />
                <semantic-value key='&quot;Davis&quot;' value='&quot;Davis&quot;' />
                <semantic-value key='&quot;Dehradun&quot;' value='&quot;Dehra Dun&quot;' />
                <semantic-value key='&quot;Dublin&quot;' value='&quot;Dublin&quot;' />
                <semantic-value key='&quot;Ghaziabad&quot;' value='&quot;Ghaziabad&quot;' />
                <semantic-value key='&quot;Gumla&quot;' value='&quot;Gumla&quot;' />
                <semantic-value key='&quot;Gwalior&quot;' value='&quot;Gwalior&quot;' />
                <semantic-value key='&quot;Helsinki&quot;' value='&quot;Helsinki&quot;' />
                <semantic-value key='&quot;Hoboken&quot;' value='&quot;Hoboken&quot;' />
                <semantic-value key='&quot;Indore&quot;' value='&quot;Indore&quot;' />
                <semantic-value key='&quot;Kingston&quot;' value='&quot;Kingston&quot;' />
                <semantic-value key='&quot;Lakewood Ranch&quot;' value='&quot;Bradenton&quot;' />
                <semantic-value key='&quot;Lima&quot;' value='&quot;Lima&quot;' />
                <semantic-value key='&quot;Lisbon&quot;' value='&quot;Lisbon&quot;' />
                <semantic-value key='&quot;London&quot;' value='&quot;London&quot;' />
                <semantic-value key='&quot;Long Island&quot;' value='&quot;Long Island&quot;' />
                <semantic-value key='&quot;Macerata&quot;' value='&quot;Macerata&quot;' />
                <semantic-value key='&quot;Melbourne&quot;' value='&quot;Melbourne&quot;' />
                <semantic-value key='&quot;Mexico City&quot;' value='&quot;Mexico City&quot;' />
                <semantic-value key='&quot;Munich&quot;' value='&quot;Munich&quot;' />
                <semantic-value key='&quot;Nashik&quot;' value='&quot;New Delhi&quot;' />
                <semantic-value key='&quot;New Delhi&quot;' value='&quot;New Delhi&quot;' />
                <semantic-value key='&quot;Oranjestad&quot;' value='&quot;Oranjestad&quot;' />
                <semantic-value key='&quot;Paris&quot;' value='&quot;Paris&quot;' />
                <semantic-value key='&quot;Pinecrest&quot;' value='&quot;Pinecrest&quot;' />
                <semantic-value key='&quot;Pune&quot;' value='&quot;Pune&quot;' />
                <semantic-value key='&quot;Quito&quot;' value='&quot;Quito&quot;' />
                <semantic-value key='&quot;Redmond City&quot;' value='&quot;Redmond&quot;' />
                <semantic-value key='&quot;Rehoboth&quot;' value='&quot;Rehoboth&quot;' />
                <semantic-value key='&quot;Reykjavík&quot;' value='&quot;Reykjavik&quot;' />
                <semantic-value key='&quot;Rio de Janeiro&quot;' value='&quot;Rio De Janeiro&quot;' />
                <semantic-value key='&quot;San Juan&quot;' value='&quot;San Juan de Dios&quot;' />
                <semantic-value key='&quot;Santiago&quot;' value='&quot;Santiago&quot;' />
                <semantic-value key='&quot;Seoul&quot;' value='&quot;Seoul&quot;' />
                <semantic-value key='&quot;Shahabad&quot;' value='&quot;Shahabad&quot;' />
                <semantic-value key='&quot;Sunny Isles&quot;' value='&quot;Sunny Isles Beach&quot;' />
                <semantic-value key='&quot;Tegucigalpa&quot;' value='&quot;Tegucigalpa&quot;' />
                <semantic-value key='&quot;Tehran&quot;' value='&quot;Tehran&quot;' />
                <semantic-value key='&quot;Tel Aviv-Yafo&quot;' value='&quot;Tel Aviv-Yafo&quot;' />
                <semantic-value key='&quot;Thane&quot;' value='&quot;Thane&quot;' />
                <semantic-value key='&quot;Torrent&quot;' value='&quot;Torrent&quot;' />
                <semantic-value key='&quot;Ulaanbaatar&quot;' value='&quot;Ulan Bator&quot;' />
                <semantic-value key='&quot;Vancouver&quot;' value='&quot;Vancouver&quot;' />
                <semantic-value key='&quot;Vantaa&quot;' value='&quot;Vantaa&quot;' />
                <semantic-value key='&quot;Warsaw&quot;' value='&quot;Warsaw&quot;' />
                <semantic-value key='&quot;Wellington&quot;' value='&quot;Wellington&quot;' />
              </semantic-values>
              <semantic-values semantic-role='[Geographical].[Longitude]'>
                <semantic-value key='&quot;Alexandria&quot;' value='-77.050551999999996' />
                <semantic-value key='&quot;Ames&quot;' value='-93.631' />
                <semantic-value key='&quot;Andover&quot;' value='-71.136799999999994' />
                <semantic-value key='&quot;Annandale&quot;' value='-77.196399999999997' />
                <semantic-value key='&quot;Arlington&quot;' value='-97.108099999999993' />
                <semantic-value key='&quot;Athens&quot;' value='-83.357600000000005' />
                <semantic-value key='&quot;Atlanta&quot;' value='-84.387699999999995' />
                <semantic-value key='&quot;Austin&quot;' value='-97.743099999999998' />
                <semantic-value key='&quot;Avon&quot;' value='-86.399699999999996' />
                <semantic-value key='&quot;Baltimore&quot;' value='-76.612200000000001' />
                <semantic-value key='&quot;Bay City&quot;' value='-83.888900000000007' />
                <semantic-value key='&quot;Beachwood&quot;' value='-81.508700000000005' />
                <semantic-value key='&quot;Bellingham&quot;' value='-122.4787' />
                <semantic-value key='&quot;Berkeley&quot;' value='-122.273' />
                <semantic-value key='&quot;Bethany&quot;' value='-97.632300000000001' />
                <semantic-value key='&quot;Bethlehem&quot;' value='-75.370500000000007' />
                <semantic-value key='&quot;Blacksburg&quot;' value='-80.413899999999998' />
                <semantic-value key='&quot;Boston&quot;' value='-71.058899999999994' />
                <semantic-value key='&quot;Boulder&quot;' value='-105.2705' />
                <semantic-value key='&quot;Bowie&quot;' value='-76.7791' />
                <semantic-value key='&quot;Brooklyn&quot;' value='-73.944199999999995' />
                <semantic-value key='&quot;Burlington&quot;' value='-73.212100000000007' />
                <semantic-value key='&quot;Cambridge&quot;' value='-71.109700000000004' />
                <semantic-value key='&quot;Canton&quot;' value='-81.378399999999999' />
                <semantic-value key='&quot;Charlotte&quot;' value='-80.843100000000007' />
                <semantic-value key='&quot;Charlottesville&quot;' value='-78.476699999999994' />
                <semantic-value key='&quot;Cincinnati&quot;' value='-84.512' />
                <semantic-value key='&quot;Columbia&quot;' value='-81.034800000000004' />
                <semantic-value key='&quot;Columbus&quot;' value='-82.998800000000003' />
                <semantic-value key='&quot;Covington&quot;' value='-83.860200000000006' />
                <semantic-value key='&quot;Dallas&quot;' value='-96.796999999999997' />
                <semantic-value key='&quot;Dayton&quot;' value='-84.191599999999994' />
                <semantic-value key='&quot;Decatur&quot;' value='-84.296300000000002' />
                <semantic-value key='&quot;Denton&quot;' value='-97.133099999999999' />
                <semantic-value key='&quot;Denver&quot;' value='-104.9903' />
                <semantic-value key='&quot;Detroit&quot;' value='-83.0458' />
                <semantic-value key='&quot;Durham&quot;' value='-78.898600000000002' />
                <semantic-value key='&quot;East Brunswick&quot;' value='-74.405000000000001' />
                <semantic-value key='&quot;Epping&quot;' value='-71.073499999999996' />
                <semantic-value key='&quot;Evanston&quot;' value='-87.687700000000007' />
                <semantic-value key='&quot;Fairfax&quot;' value='-77.306399999999996' />
                <semantic-value key='&quot;Fairfield&quot;' value='-73.261300000000006' />
                <semantic-value key='&quot;Fremont&quot;' value='-121.98860000000001' />
                <semantic-value key='&quot;Gainesville&quot;' value='-82.324799999999996' />
                <semantic-value key='&quot;Glen Rock&quot;' value='-74.132900000000006' />
                <semantic-value key='&quot;Golden Valley&quot;' value='-93.359999999999999' />
                <semantic-value key='&quot;Hagerstown&quot;' value='-77.719999999999999' />
                <semantic-value key='&quot;Helena&quot;' value='-112.0391' />
                <semantic-value key='&quot;Hernando&quot;' value='-89.993706000000003' />
                <semantic-value key='&quot;Hollywood&quot;' value='-80.149500000000003' />
                <semantic-value key='&quot;Homestead&quot;' value='-80.477599999999995' />
                <semantic-value key='&quot;Houston&quot;' value='-95.369799999999998' />
                <semantic-value key='&quot;Irvine&quot;' value='-117.8265' />
                <semantic-value key='&quot;Ithaca&quot;' value='-76.501900000000006' />
                <semantic-value key='&quot;Jacksonville&quot;' value='-81.655699999999996' />
                <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
                <semantic-value key='&quot;Las Vegas&quot;' value='-115.1391' />
                <semantic-value key='&quot;Lewisville&quot;' value='-96.994200000000006' />
                <semantic-value key='&quot;Louisville&quot;' value='-85.758499999999998' />
                <semantic-value key='&quot;Manassas&quot;' value='-77.475300000000004' />
                <semantic-value key='&quot;Manhattan&quot;' value='-73.971321000000003' />
                <semantic-value key='&quot;Manhattan Beach&quot;' value='-118.4109' />
                <semantic-value key='&quot;Marietta&quot;' value='-84.549899999999994' />
                <semantic-value key='&quot;Markham&quot;' value='-87.694800000000001' />
                <semantic-value key='&quot;Miami&quot;' value='-80.191800000000001' />
                <semantic-value key='&quot;Mountain View&quot;' value='-122.0839' />
                <semantic-value key='&quot;Naples&quot;' value='-81.794799999999995' />
                <semantic-value key='&quot;Nashville&quot;' value='-86.781599999999997' />
                <semantic-value key='&quot;Oakland&quot;' value='-122.27119999999999' />
                <semantic-value key='&quot;Oakland Park&quot;' value='-80.132000000000005' />
                <semantic-value key='&quot;Orlando&quot;' value='-81.378900000000002' />
                <semantic-value key='&quot;Orono&quot;' value='-68.671899999999994' />
                <semantic-value key='&quot;Palo Alto&quot;' value='-122.143' />
                <semantic-value key='&quot;Pasadena&quot;' value='-118.14449999999999' />
                <semantic-value key='&quot;Philadelphia&quot;' value='-75.165199999999999' />
                <semantic-value key='&quot;Phoenix&quot;' value='-112.074' />
                <semantic-value key='&quot;Plantation&quot;' value='-80.233099999999993' />
                <semantic-value key='&quot;Pleasant Hill&quot;' value='-122.0608' />
                <semantic-value key='&quot;Portland&quot;' value='-122.6784' />
                <semantic-value key='&quot;Princeton&quot;' value='-74.667199999999994' />
                <semantic-value key='&quot;Raleigh&quot;' value='-78.638199999999998' />
                <semantic-value key='&quot;Reno&quot;' value='-119.8143' />
                <semantic-value key='&quot;Rochester&quot;' value='-77.608800000000002' />
                <semantic-value key='&quot;Rogers&quot;' value='-94.125699999999995' />
                <semantic-value key='&quot;Saco&quot;' value='-70.442800000000005' />
                <semantic-value key='&quot;Sacramento&quot;' value='-121.4944' />
                <semantic-value key='&quot;Saint Petersburg&quot;' value='-82.640299999999996' />
                <semantic-value key='&quot;San Diego&quot;' value='-117.1611' />
                <semantic-value key='&quot;San Francisco&quot;' value='-122.4194' />
                <semantic-value key='&quot;San Jose&quot;' value='-121.8853' />
                <semantic-value key='&quot;San Mateo&quot;' value='-122.32550000000001' />
                <semantic-value key='&quot;Santa Clara&quot;' value='-121.9552' />
                <semantic-value key='&quot;Savannah&quot;' value='-81.091200000000001' />
                <semantic-value key='&quot;Sharon&quot;' value='-80.493399999999994' />
                <semantic-value key='&quot;Sherwood&quot;' value='-92.191100000000006' />
                <semantic-value key='&quot;Springfield&quot;' value='-89.650099999999995' />
                <semantic-value key='&quot;Stanford&quot;' value='-122.16970000000001' />
                <semantic-value key='&quot;Sunnyvale&quot;' value='-122.0363' />
                <semantic-value key='&quot;Tampa&quot;' value='-82.4572' />
                <semantic-value key='&quot;Union City&quot;' value='-122.04389999999999' />
                <semantic-value key='&quot;Utica&quot;' value='-75.232699999999994' />
                <semantic-value key='&quot;Virginia&quot;' value='-78.656899999999993' />
                <semantic-value key='&quot;Walpole&quot;' value='-71.249499999999998' />
                <semantic-value key='&quot;Waltham&quot;' value='-71.249499999999998' />
                <semantic-value key='&quot;Waterloo&quot;' value='-80.520399999999995' />
                <semantic-value key='&quot;Westerville&quot;' value='-82.931899999999999' />
                <semantic-value key='&quot;Westminster&quot;' value='-117.9897' />
                <semantic-value key='&quot;Weston&quot;' value='-80.399799999999999' />
                <semantic-value key='&quot;Winter Park&quot;' value='-81.339200000000005' />
              </semantic-values>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;England&quot;' value='&quot;United Kingdom&quot;' />
                <semantic-value key='&quot;S\\\\343o Paulo&quot;' value='&quot;Antarctica&quot;' />
                <semantic-value key='&quot;Virginia&quot;' value='&quot;United States&quot;' />
              </semantic-values>
            </column>
            <column caption='Combo Count' datatype='integer' name='[combo_count]' role='measure' type='quantitative' />
            <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[combo_count]' derivation='Sum' name='[sum:combo_count:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[none:Country:nk]'>
            <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[Longitude (generated)]' field-type='quantitative' max='9738239.2176897451' min='-13552988.610460253' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[Latitude (generated)]' field-type='quantitative' max='6531044.6625496903' min='526545.69985017623' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
            <encoding attr='space' class='1' field='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[Longitude (generated)]' field-type='quantitative' fold='true' max='9738239.2176897451' min='-13552988.610460253' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='color' field='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[sum:combo_count:qk]' value='#000000' />
            <format attr='font-family' field='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[sum:combo_count:qk]' value='Tableau Medium' />
            <format attr='font-weight' field='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[sum:combo_count:qk]' value='normal' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-family' field='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[sum:combo_count:qk]' value='Tableau Medium' />
            <format attr='color' field='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[sum:combo_count:qk]' value='#000000' />
          </style-rule>
          <style-rule element='caption'>
            <format attr='background-color' value='#00000000' />
            <format attr='border-width' value='0' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#f0f7fa' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='place-village' value='true' />
            <format attr='enabled' id='place-town' value='true' />
            <format attr='enabled' id='place-islands' value='true' />
            <format attr='enabled' id='place-islands-2' value='true' />
            <format attr='enabled' id='place-city-sm' value='true' />
            <format attr='enabled' id='place-city-md-s' value='true' />
            <format attr='enabled' id='place-city-md-n' value='true' />
            <format attr='enabled' id='place-city-lg-s' value='true' />
            <format attr='enabled' id='place-city-lg-n' value='true' />
            <format attr='enabled' id='place-capital-s' value='true' />
            <format attr='enabled' id='place-capital-n' value='true' />
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[none:Country:nk]' value='Country' />
          </style-rule>
          <style-rule element='quick-filter-title'>
            <format attr='text-align' value='center' />
            <format attr='font-weight' value='bold' />
            <format attr='font-size' value='8' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[sum:combo_count:qk]' />
              <lod column='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[none:Country:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[Longitude (generated)]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[none:Country:nk]' />
              <lod column='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[sum:combo_count:qk]' />
              <lod column='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[none:Country:nk]' />
              <geometry column='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#000000' fontname='Tableau Medium'>Country:&#9;</run>
                <run bold='true' fontcolor='#e15759' fontname='Tableau Medium' italic='true'><![CDATA[<[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[none:Country:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#000000' fontname='Tableau Medium'><![CDATA[Count:	<[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[sum:combo_count:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='mark-transparency' value='206' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[Longitude (generated)]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[none:City:nk]' />
              <lod column='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[sum:combo_count:qk]' />
              <lod column='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[none:Country:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#000000' fontname='Tableau Medium' fontsize='9'><![CDATA[City:	 <[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[none:City:nk]>]]></run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#000000' fontname='Tableau Medium' fontsize='9'>Count:   </run>
                <run bold='true' fontcolor='#e15759' fontname='Tableau Medium' fontsize='9'><![CDATA[<[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[sum:combo_count:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[Latitude (generated)]</rows>
        <cols>([federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[Longitude (generated)] + [federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[Longitude (generated)])</cols>
      </table>
      <simple-id uuid='{F996EAC5-009C-4D7D-8CA0-E93B6C87D35F}' />
    </worksheet>
    <worksheet name='Subscriber_Attendance (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tableau Medium' fontsize='18'>Sub Attendance Breakdown</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='attendees_2023 (Miami_HW)' name='federated.1dnnp6z0acy4y510gicoq0vjbum9' />
            <datasource caption='all_luma_events_2023 (Miami_HW)' name='federated.0awixag0ke6kmr1dppvn50uvwq87' />
          </datasources>
          <datasource-dependencies datasource='federated.0awixag0ke6kmr1dppvn50uvwq87'>
            <column caption='2022 @Luma' datatype='real' default-format='p0%' name='[2021 @Luma (copy)_5815202718361600002]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([22_subs_at_events]) / SUM([22_subs_total])' />
            </column>
            <column caption='2023 @Luma' datatype='real' default-format='p0%' name='[2022 @Luma (copy)_5815202718361866243]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([23_subs_at_events]) / SUM([23_subs_total])' />
            </column>
            <column caption='21 Subs At Events' datatype='integer' name='[21_subs_at_events]' role='measure' type='quantitative' />
            <column caption='21 Subs Total' datatype='integer' name='[21_subs_total]' role='measure' type='quantitative' />
            <column caption='22 Subs At Events' datatype='integer' name='[22_subs_at_events]' role='measure' type='quantitative' />
            <column caption='22 Subs Total' datatype='integer' name='[22_subs_total]' role='measure' type='quantitative' />
            <column caption='23 Subs At Events' datatype='integer' name='[23_subs_at_events]' role='measure' type='quantitative' />
            <column caption='23 Subs Total' datatype='integer' name='[23_subs_total]' role='measure' type='quantitative' />
            <column caption='2021 @Luma' datatype='real' default-format='p0%' name='[Calculation_5815202718360416257]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([21_subs_at_events]) / SUM([21_subs_total])' />
            </column>
            <column-instance column='[21_subs_at_events]' derivation='Sum' name='[sum:21_subs_at_events:qk]' pivot='key' type='quantitative' />
            <column-instance column='[22_subs_at_events]' derivation='Sum' name='[sum:22_subs_at_events:qk]' pivot='key' type='quantitative' />
            <column-instance column='[23_subs_at_events]' derivation='Sum' name='[sum:23_subs_at_events:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2021 @Luma (copy)_5815202718361600002]' derivation='User' name='[usr:2021 @Luma (copy)_5815202718361600002:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2022 @Luma (copy)_5815202718361866243]' derivation='User' name='[usr:2022 @Luma (copy)_5815202718361866243:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_5815202718360416257]' derivation='User' name='[usr:Calculation_5815202718360416257:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.1dnnp6z0acy4y510gicoq0vjbum9'>
            <column aggregation='CountD' caption='21 Subs' datatype='string' default-role='measure' default-type='quantitative' name='[21_subs]' role='dimension' type='nominal' />
            <column aggregation='CountD' caption='21 To 23 Subs' datatype='string' default-role='measure' default-type='quantitative' name='[21_to_23_subs]' role='dimension' type='nominal' />
            <column aggregation='CountD' caption='22 Subs' datatype='string' default-role='measure' default-type='quantitative' name='[22_subs]' role='dimension' type='nominal' />
            <column aggregation='CountD' caption='22 To 23 Subs' datatype='string' default-role='measure' default-type='quantitative' name='[22_to_23_subs]' role='dimension' type='nominal' />
            <column aggregation='CountD' caption='23 Subs' datatype='string' default-role='measure' default-type='quantitative' name='[23_subs]' role='dimension' type='nominal' />
            <column aggregation='CountD' caption='23 To 23 Subs' datatype='string' default-role='measure' default-type='quantitative' name='[23_to_23_subs]' role='dimension' type='nominal' />
            <column caption='2023 to 2023' datatype='real' default-format='p0%' name='[Calculation1 (copy) (copy)_4888868569643175944]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([23_to_23_subs]) / COUNTD([23_subs])' />
            </column>
            <column caption='2022 to 2023' datatype='real' default-format='p0%' name='[Calculation1 (copy)_4888868569643167751]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([22_to_23_subs]) / COUNTD([22_subs])' />
            </column>
            <column caption='2021 to 2023' datatype='real' default-format='p0%' name='[Calculation_4888868569642905606]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='COUNTD([21_to_23_subs]) / COUNTD([21_subs])' />
            </column>
            <column-instance column='[21_subs]' derivation='CountD' name='[ctd:21_subs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[21_to_23_subs]' derivation='CountD' name='[ctd:21_to_23_subs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[22_subs]' derivation='CountD' name='[ctd:22_subs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[22_to_23_subs]' derivation='CountD' name='[ctd:22_to_23_subs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[23_subs]' derivation='CountD' name='[ctd:23_subs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[23_to_23_subs]' derivation='CountD' name='[ctd:23_to_23_subs:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation1 (copy) (copy)_4888868569643175944]' derivation='User' name='[usr:Calculation1 (copy) (copy)_4888868569643175944:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation1 (copy)_4888868569643167751]' derivation='User' name='[usr:Calculation1 (copy)_4888868569643167751:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_4888868569642905606]' derivation='User' name='[usr:Calculation_4888868569642905606:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1dnnp6z0acy4y510gicoq0vjbum9].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dnnp6z0acy4y510gicoq0vjbum9].[ctd:21_subs:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dnnp6z0acy4y510gicoq0vjbum9].[ctd:21_to_23_subs:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0awixag0ke6kmr1dppvn50uvwq87].[sum:21_subs_at_events:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dnnp6z0acy4y510gicoq0vjbum9].[ctd:22_subs:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dnnp6z0acy4y510gicoq0vjbum9].[ctd:22_to_23_subs:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0awixag0ke6kmr1dppvn50uvwq87].[sum:22_subs_at_events:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dnnp6z0acy4y510gicoq0vjbum9].[ctd:23_subs:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.1dnnp6z0acy4y510gicoq0vjbum9].[ctd:23_to_23_subs:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0awixag0ke6kmr1dppvn50uvwq87].[sum:23_subs_at_events:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.1dnnp6z0acy4y510gicoq0vjbum9].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.1dnnp6z0acy4y510gicoq0vjbum9].[ctd:21_subs:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dnnp6z0acy4y510gicoq0vjbum9].[ctd:21_to_23_subs:qk]&quot;</bucket>
              <bucket>&quot;[federated.0awixag0ke6kmr1dppvn50uvwq87].[sum:21_subs_at_events:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dnnp6z0acy4y510gicoq0vjbum9].[ctd:22_subs:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dnnp6z0acy4y510gicoq0vjbum9].[ctd:22_to_23_subs:qk]&quot;</bucket>
              <bucket>&quot;[federated.0awixag0ke6kmr1dppvn50uvwq87].[sum:22_subs_at_events:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dnnp6z0acy4y510gicoq0vjbum9].[ctd:23_subs:qk]&quot;</bucket>
              <bucket>&quot;[federated.1dnnp6z0acy4y510gicoq0vjbum9].[ctd:23_to_23_subs:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1dnnp6z0acy4y510gicoq0vjbum9].[Multiple Values]' scope='rows' value='Count' />
            <format attr='width' field='[federated.1dnnp6z0acy4y510gicoq0vjbum9].[Multiple Values]' value='72' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='font-family' field='[federated.1dnnp6z0acy4y510gicoq0vjbum9].[Multiple Values]' value='Tableau Medium' />
            <format attr='color' field='[federated.1dnnp6z0acy4y510gicoq0vjbum9].[Multiple Values]' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1dnnp6z0acy4y510gicoq0vjbum9].[:Measure Names]' value='#000000' />
            <format attr='font-weight' field='[federated.1dnnp6z0acy4y510gicoq0vjbum9].[:Measure Names]' value='bold' />
            <format attr='font-family' field='[federated.1dnnp6z0acy4y510gicoq0vjbum9].[:Measure Names]' value='Tableau Medium' />
            <format attr='color' field='[federated.1dnnp6z0acy4y510gicoq0vjbum9].[Multiple Values]' value='#000000' />
            <format attr='font-family' field='[federated.1dnnp6z0acy4y510gicoq0vjbum9].[Multiple Values]' value='Tableau Medium' />
            <format attr='font-size' field='[federated.1dnnp6z0acy4y510gicoq0vjbum9].[:Measure Names]' value='8' />
            <format attr='font-weight' field='[federated.1dnnp6z0acy4y510gicoq0vjbum9].[Multiple Values]' value='bold' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='div-level' scope='rows' value='1' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-width' value='0' />
            <format attr='background-color' value='#f0f7fa' />
          </style-rule>
          <style-rule element='annotation'>
            <format attr='fill-color' id='annotation_2' value='#e6e6e6e6' />
            <format attr='fill-color' id='annotation_0' value='#e6e6e6e6' />
            <format attr='fill-color' id='annotation_1' value='#e6e6e6e6' />
            <format attr='fill-color' id='annotation_4' value='#e6e6e6e6' />
            <format attr='line-end-size' id='annotation_4' value='medium' />
            <format attr='fill-color' id='annotation_5' value='#e6e6e6e6' />
            <format attr='fill-color' id='annotation_6' value='#e6e6e6e6' />
            <format attr='body-type' id='annotation_6' value='none' />
            <format attr='body-type' id='annotation_1' value='none' />
            <format attr='body-type' id='annotation_0' value='none' />
            <format attr='body-type' id='annotation_5' value='none' />
            <format attr='body-type' id='annotation_2' value='none' />
            <format attr='body-type' id='annotation_4' value='none' />
          </style-rule>
        </style>
        <panes>
          <pane id='10' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.1dnnp6z0acy4y510gicoq0vjbum9].[:Measure Names]' />
              <text column='[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation_4888868569642905606:qk]' />
              <text column='[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation1 (copy)_4888868569643167751:qk]' />
              <text column='[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation1 (copy) (copy)_4888868569643175944:qk]' />
              <lod column='[federated.0awixag0ke6kmr1dppvn50uvwq87].[usr:Calculation_5815202718360416257:qk]' />
              <lod column='[federated.0awixag0ke6kmr1dppvn50uvwq87].[usr:2021 @Luma (copy)_5815202718361600002:qk]' />
              <lod column='[federated.0awixag0ke6kmr1dppvn50uvwq87].[usr:2022 @Luma (copy)_5815202718361866243:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#787878' fontname='Tableau Medium'>Count:&#9; </run>
                <run bold='true' fontcolor='#e15759' fontname='Tableau Medium'><![CDATA[<[federated.1dnnp6z0acy4y510gicoq0vjbum9].[Multiple Values]>]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation1 (copy) (copy)_4888868569643175944:qk]</run>
                <run>&gt;&#10;&lt;</run>
                <run>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation1 (copy)_4888868569643167751:qk]</run>
                <run>&gt;&#10;&lt;</run>
                <run>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation_4888868569642905606:qk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[Multiple Values]</rows>
        <cols>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[:Measure Names]</cols>
        <mark-labels>
          <mark-label id='0' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation1 (copy) (copy)_4888868569643175944:qk]</field>
                  <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation1 (copy)_4888868569643167751:qk]</field>
                  <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation_4888868569642905606:qk]</field>
                  <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[:Measure Names]</field>
                  <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>0.81587953456536622</value>
                <value>0.17332356174422867</value>
                <value>0.15050651230101303</value>
                <value>&quot;[federated.1dnnp6z0acy4y510gicoq0vjbum9].[ctd:21_subs:qk]&quot;</value>
                <value>691.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='1' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation1 (copy) (copy)_4888868569643175944:qk]</field>
                  <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation1 (copy)_4888868569643167751:qk]</field>
                  <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation_4888868569642905606:qk]</field>
                  <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[:Measure Names]</field>
                  <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>0.81587953456536622</value>
                <value>0.17332356174422867</value>
                <value>0.15050651230101303</value>
                <value>&quot;[federated.1dnnp6z0acy4y510gicoq0vjbum9].[ctd:22_subs:qk]&quot;</value>
                <value>5458.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='2' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation1 (copy) (copy)_4888868569643175944:qk]</field>
                  <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation1 (copy)_4888868569643167751:qk]</field>
                  <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation_4888868569642905606:qk]</field>
                  <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[:Measure Names]</field>
                  <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>0.81587953456536622</value>
                <value>0.17332356174422867</value>
                <value>0.15050651230101303</value>
                <value>&quot;[federated.1dnnp6z0acy4y510gicoq0vjbum9].[ctd:23_subs:qk]&quot;</value>
                <value>1461.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='3' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation1 (copy) (copy)_4888868569643175944:qk]</field>
                  <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation1 (copy)_4888868569643167751:qk]</field>
                  <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation_4888868569642905606:qk]</field>
                  <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[:Measure Names]</field>
                  <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>0.81587953456536622</value>
                <value>0.17332356174422867</value>
                <value>0.15050651230101303</value>
                <value>&quot;[federated.1dnnp6z0acy4y510gicoq0vjbum9].[ctd:22_to_23_subs:qk]&quot;</value>
                <value>946.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='4' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation1 (copy) (copy)_4888868569643175944:qk]</field>
                  <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation1 (copy)_4888868569643167751:qk]</field>
                  <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation_4888868569642905606:qk]</field>
                  <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[:Measure Names]</field>
                  <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>0.81587953456536622</value>
                <value>0.17332356174422867</value>
                <value>0.15050651230101303</value>
                <value>&quot;[federated.1dnnp6z0acy4y510gicoq0vjbum9].[ctd:23_to_23_subs:qk]&quot;</value>
                <value>1192.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='5' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation1 (copy) (copy)_4888868569643175944:qk]</field>
                  <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation1 (copy)_4888868569643167751:qk]</field>
                  <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation_4888868569642905606:qk]</field>
                  <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[:Measure Names]</field>
                  <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>0.81587953456536622</value>
                <value>0.17332356174422867</value>
                <value>0.15050651230101303</value>
                <value>&quot;[federated.1dnnp6z0acy4y510gicoq0vjbum9].[ctd:21_to_23_subs:qk]&quot;</value>
                <value>104.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='6' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation1 (copy) (copy)_4888868569643175944:qk]</field>
                  <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation1 (copy)_4888868569643167751:qk]</field>
                  <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation_4888868569642905606:qk]</field>
                  <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[:Measure Names]</field>
                  <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>0.81587953456536622</value>
                <value>0.17332356174422867</value>
                <value>0.15050651230101303</value>
                <value>&quot;[federated.0awixag0ke6kmr1dppvn50uvwq87].[sum:21_subs_at_events:qk]&quot;</value>
                <value>41.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='7' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0awixag0ke6kmr1dppvn50uvwq87].[usr:2021 @Luma (copy)_5815202718361600002:qk]</field>
                  <field>[federated.0awixag0ke6kmr1dppvn50uvwq87].[usr:2022 @Luma (copy)_5815202718361866243:qk]</field>
                  <field>[federated.0awixag0ke6kmr1dppvn50uvwq87].[usr:Calculation_5815202718360416257:qk]</field>
                  <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation1 (copy) (copy)_4888868569643175944:qk]</field>
                  <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation1 (copy)_4888868569643167751:qk]</field>
                  <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation_4888868569642905606:qk]</field>
                  <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[:Measure Names]</field>
                  <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>0.28118393234672306</value>
                <value>0.53439597315436238</value>
                <value>0.39423076923076922</value>
                <value>0.81587953456536622</value>
                <value>0.17332356174422867</value>
                <value>0.15050651230101303</value>
                <value>&quot;[federated.0awixag0ke6kmr1dppvn50uvwq87].[sum:22_subs_at_events:qk]&quot;</value>
                <value>266.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
          <mark-label id='8' label-state='off'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[:Measure Names]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[Multiple Values]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0awixag0ke6kmr1dppvn50uvwq87].[usr:2021 @Luma (copy)_5815202718361600002:qk]</field>
                  <field>[federated.0awixag0ke6kmr1dppvn50uvwq87].[usr:2022 @Luma (copy)_5815202718361866243:qk]</field>
                  <field>[federated.0awixag0ke6kmr1dppvn50uvwq87].[usr:Calculation_5815202718360416257:qk]</field>
                  <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation1 (copy) (copy)_4888868569643175944:qk]</field>
                  <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation1 (copy)_4888868569643167751:qk]</field>
                  <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation_4888868569642905606:qk]</field>
                  <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[:Measure Names]</field>
                  <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[Multiple Values]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>0.28118393234672306</value>
                <value>0.53439597315436238</value>
                <value>0.39423076923076922</value>
                <value>0.81587953456536622</value>
                <value>0.17332356174422867</value>
                <value>0.15050651230101303</value>
                <value>&quot;[federated.0awixag0ke6kmr1dppvn50uvwq87].[sum:23_subs_at_events:qk]&quot;</value>
                <value>637.0</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
        <annotations>
          <annotation class='point' id='0' mark-position='1' pullback='0' text-width='76'>
            <formatted-text>
              <run fontcolor='#e15759' fontname='Tableau Medium'>Æ </run>
              <run bold='true' fontcolor='#e15759' fontname='Tableau Medium'><![CDATA[<[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation1 (copy)_4888868569643167751:qk]>]]></run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[:Measure Names]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[Multiple Values]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation1 (copy) (copy)_4888868569643175944:qk]</field>
                      <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation1 (copy)_4888868569643167751:qk]</field>
                      <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation_4888868569642905606:qk]</field>
                      <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[:Measure Names]</field>
                      <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[Multiple Values]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>0.81587953456536622</value>
                    <value>0.17332356174422867</value>
                    <value>0.15050651230101303</value>
                    <value>&quot;[federated.1dnnp6z0acy4y510gicoq0vjbum9].[ctd:22_to_23_subs:qk]&quot;</value>
                    <value>946.0</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='0' y='-29' />
          </annotation>
          <annotation class='point' id='1' mark-position='1' pullback='0' text-width='64'>
            <formatted-text>
              <run bold='true' fontcolor='#e15759' fontname='Tableau Medium'><![CDATA[<[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation1 (copy) (copy)_4888868569643175944:qk]>]]></run>
              <run>Æ&#10;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[:Measure Names]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[Multiple Values]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation1 (copy) (copy)_4888868569643175944:qk]</field>
                      <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation1 (copy)_4888868569643167751:qk]</field>
                      <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation_4888868569642905606:qk]</field>
                      <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[:Measure Names]</field>
                      <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[Multiple Values]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>0.81587953456536622</value>
                    <value>0.17332356174422867</value>
                    <value>0.15050651230101303</value>
                    <value>&quot;[federated.1dnnp6z0acy4y510gicoq0vjbum9].[ctd:23_to_23_subs:qk]&quot;</value>
                    <value>1192.0</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='0' y='-30' />
          </annotation>
          <annotation class='point' id='2' mark-position='1' pullback='0' text-width='82'>
            <formatted-text>
              <run bold='true' fontcolor='#e15759' fontname='Tableau Medium'>&lt;</run>
              <run bold='true' fontcolor='#e15759' fontname='Tableau Medium'>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation_4888868569642905606:qk]</run>
              <run bold='true' fontcolor='#e15759' fontname='Tableau Medium'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[:Measure Names]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[Multiple Values]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation1 (copy) (copy)_4888868569643175944:qk]</field>
                      <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation1 (copy)_4888868569643167751:qk]</field>
                      <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation_4888868569642905606:qk]</field>
                      <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[:Measure Names]</field>
                      <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[Multiple Values]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>0.81587953456536622</value>
                    <value>0.17332356174422867</value>
                    <value>0.15050651230101303</value>
                    <value>&quot;[federated.1dnnp6z0acy4y510gicoq0vjbum9].[ctd:21_to_23_subs:qk]&quot;</value>
                    <value>104.0</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='0' y='-28' />
          </annotation>
          <annotation class='point' id='4' mark-position='1' pullback='12' text-width='71'>
            <formatted-text>
              <run bold='true' fontcolor='#e15759' fontname='Tableau Medium'> &lt;</run>
              <run bold='true' fontcolor='#e15759' fontname='Tableau Medium'>[federated.0awixag0ke6kmr1dppvn50uvwq87].[usr:Calculation_5815202718360416257:qk]</run>
              <run bold='true' fontcolor='#e15759' fontname='Tableau Medium'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[:Measure Names]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[Multiple Values]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0awixag0ke6kmr1dppvn50uvwq87].[usr:2021 @Luma (copy)_5815202718361600002:qk]</field>
                      <field>[federated.0awixag0ke6kmr1dppvn50uvwq87].[usr:2022 @Luma (copy)_5815202718361866243:qk]</field>
                      <field>[federated.0awixag0ke6kmr1dppvn50uvwq87].[usr:Calculation_5815202718360416257:qk]</field>
                      <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation1 (copy) (copy)_4888868569643175944:qk]</field>
                      <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation1 (copy)_4888868569643167751:qk]</field>
                      <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation_4888868569642905606:qk]</field>
                      <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[:Measure Names]</field>
                      <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[Multiple Values]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>0.28118393234672306</value>
                    <value>0.53439597315436238</value>
                    <value>0.39423076923076922</value>
                    <value>0.81587953456536622</value>
                    <value>0.17332356174422867</value>
                    <value>0.15050651230101303</value>
                    <value>&quot;[federated.0awixag0ke6kmr1dppvn50uvwq87].[sum:21_subs_at_events:qk]&quot;</value>
                    <value>41.0</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='0' y='-24' />
          </annotation>
          <annotation class='point' id='5' mark-position='1' pullback='12' text-width='64'>
            <formatted-text>
              <run bold='true' fontcolor='#e15759' fontname='Tableau Medium'>&lt;</run>
              <run bold='true' fontcolor='#e15759' fontname='Tableau Medium'>[federated.0awixag0ke6kmr1dppvn50uvwq87].[usr:2021 @Luma (copy)_5815202718361600002:qk]</run>
              <run bold='true' fontcolor='#e15759' fontname='Tableau Medium'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[:Measure Names]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[Multiple Values]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0awixag0ke6kmr1dppvn50uvwq87].[usr:2021 @Luma (copy)_5815202718361600002:qk]</field>
                      <field>[federated.0awixag0ke6kmr1dppvn50uvwq87].[usr:2022 @Luma (copy)_5815202718361866243:qk]</field>
                      <field>[federated.0awixag0ke6kmr1dppvn50uvwq87].[usr:Calculation_5815202718360416257:qk]</field>
                      <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation1 (copy) (copy)_4888868569643175944:qk]</field>
                      <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation1 (copy)_4888868569643167751:qk]</field>
                      <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation_4888868569642905606:qk]</field>
                      <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[:Measure Names]</field>
                      <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[Multiple Values]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>0.28118393234672306</value>
                    <value>0.53439597315436238</value>
                    <value>0.39423076923076922</value>
                    <value>0.81587953456536622</value>
                    <value>0.17332356174422867</value>
                    <value>0.15050651230101303</value>
                    <value>&quot;[federated.0awixag0ke6kmr1dppvn50uvwq87].[sum:22_subs_at_events:qk]&quot;</value>
                    <value>266.0</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='0' y='-25' />
          </annotation>
          <annotation class='point' id='6' mark-position='1' pullback='12' text-width='68'>
            <formatted-text>
              <run bold='true' fontcolor='#e15759' fontname='Tableau Medium'> &lt;</run>
              <run bold='true' fontcolor='#e15759' fontname='Tableau Medium'>[federated.0awixag0ke6kmr1dppvn50uvwq87].[usr:2022 @Luma (copy)_5815202718361866243:qk]</run>
              <run bold='true' fontcolor='#e15759' fontname='Tableau Medium'>&gt;</run>
            </formatted-text>
            <point>
              <visual-coordinate class='mark'>
                <tuple-reference>
                  <tuple-descriptor>
                    <pane-descriptor>
                      <x-fields>
                        <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[:Measure Names]</field>
                      </x-fields>
                      <y-fields>
                        <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[Multiple Values]</field>
                      </y-fields>
                    </pane-descriptor>
                    <columns>
                      <field>[federated.0awixag0ke6kmr1dppvn50uvwq87].[usr:2021 @Luma (copy)_5815202718361600002:qk]</field>
                      <field>[federated.0awixag0ke6kmr1dppvn50uvwq87].[usr:2022 @Luma (copy)_5815202718361866243:qk]</field>
                      <field>[federated.0awixag0ke6kmr1dppvn50uvwq87].[usr:Calculation_5815202718360416257:qk]</field>
                      <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation1 (copy) (copy)_4888868569643175944:qk]</field>
                      <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation1 (copy)_4888868569643167751:qk]</field>
                      <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[usr:Calculation_4888868569642905606:qk]</field>
                      <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[:Measure Names]</field>
                      <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[Multiple Values]</field>
                    </columns>
                  </tuple-descriptor>
                  <tuple>
                    <value>0.28118393234672306</value>
                    <value>0.53439597315436238</value>
                    <value>0.39423076923076922</value>
                    <value>0.81587953456536622</value>
                    <value>0.17332356174422867</value>
                    <value>0.15050651230101303</value>
                    <value>&quot;[federated.0awixag0ke6kmr1dppvn50uvwq87].[sum:23_subs_at_events:qk]&quot;</value>
                    <value>637.0</value>
                  </tuple>
                </tuple-reference>
              </visual-coordinate>
            </point>
            <body x='0' y='-28' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{F447DBE1-4E36-454D-86D1-E90A9B3EED2F}' />
    </worksheet>
    <worksheet name='newsletter_data'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tableau Medium' fontsize='18'>Newsletter Subs By Year</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='newsletter_raw_data (Miami_HW)' name='federated.1i1m5pp1j17kxh19gvodc1t773hz' />
          </datasources>
          <datasource-dependencies datasource='federated.1i1m5pp1j17kxh19gvodc1t773hz'>
            <column datatype='date' datatype-customized='true' name='[Subscribed]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Subscriber]' role='dimension' type='nominal' />
            <column-instance column='[Subscriber]' derivation='Count' name='[cnt:Subscriber:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Subscriber]' derivation='Count' name='[pcto:cum:cnt:Subscriber:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Subscribed]' derivation='Year' name='[yr:Subscribed:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1i1m5pp1j17kxh19gvodc1t773hz].[pcto:cum:cnt:Subscriber:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.1i1m5pp1j17kxh19gvodc1t773hz].[pcto:cum:cnt:Subscriber:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.1i1m5pp1j17kxh19gvodc1t773hz].[cnt:Subscriber:qk]' scope='rows' value='Count' />
            <format attr='height' field='[federated.1i1m5pp1j17kxh19gvodc1t773hz].[yr:Subscribed:ok]' value='31' />
            <encoding attr='space' class='0' field='[federated.1i1m5pp1j17kxh19gvodc1t773hz].[cnt:Subscriber:qk]' field-type='quantitative' max='6000' min='0' range-type='fixed' scope='rows' type='space' />
            <format attr='width' field='[federated.1i1m5pp1j17kxh19gvodc1t773hz].[cnt:Subscriber:qk]' value='68' />
            <format attr='width' field='[federated.1i1m5pp1j17kxh19gvodc1t773hz].[pcto:cum:cnt:Subscriber:qk]' value='68' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.1i1m5pp1j17kxh19gvodc1t773hz].[yr:Subscribed:ok]' value='240' />
            <format attr='vertical-align' field='[federated.1i1m5pp1j17kxh19gvodc1t773hz].[cnt:Subscriber:qk]' value='auto' />
            <format attr='text-orientation' data-class='total' field='[federated.1i1m5pp1j17kxh19gvodc1t773hz].[cnt:Subscriber:qk]' value='0' />
            <format attr='color' field='[federated.1i1m5pp1j17kxh19gvodc1t773hz].[pcto:cum:cnt:Subscriber:qk]' value='#000000' />
            <format attr='font-weight' field='[federated.1i1m5pp1j17kxh19gvodc1t773hz].[pcto:cum:cnt:Subscriber:qk]' value='bold' />
            <format attr='font-family' field='[federated.1i1m5pp1j17kxh19gvodc1t773hz].[pcto:cum:cnt:Subscriber:qk]' value='Tableau Medium' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.1i1m5pp1j17kxh19gvodc1t773hz].[cnt:Subscriber:qk]' value='#000000' />
            <format attr='font-family' field='[federated.1i1m5pp1j17kxh19gvodc1t773hz].[cnt:Subscriber:qk]' value='Tableau Medium' />
            <format attr='font-weight' field='[federated.1i1m5pp1j17kxh19gvodc1t773hz].[cnt:Subscriber:qk]' value='bold' />
            <format attr='color' field='[federated.1i1m5pp1j17kxh19gvodc1t773hz].[yr:Subscribed:ok]' value='#000000' />
            <format attr='font-family' field='[federated.1i1m5pp1j17kxh19gvodc1t773hz].[yr:Subscribed:ok]' value='Tableau Medium' />
            <format attr='font-weight' field='[federated.1i1m5pp1j17kxh19gvodc1t773hz].[yr:Subscribed:ok]' value='bold' />
            <format attr='font-family' field='[federated.1i1m5pp1j17kxh19gvodc1t773hz].[pcto:cum:cnt:Subscriber:qk]' value='Tableau Medium' />
            <format attr='color' field='[federated.1i1m5pp1j17kxh19gvodc1t773hz].[pcto:cum:cnt:Subscriber:qk]' value='#000000' />
            <format attr='font-weight' field='[federated.1i1m5pp1j17kxh19gvodc1t773hz].[pcto:cum:cnt:Subscriber:qk]' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='title'>
            <format attr='border-width' value='0' />
            <format attr='border-style' value='none' />
            <format attr='background-color' value='#f0f7fa' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <style>
              <style-rule element='mark'>
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1i1m5pp1j17kxh19gvodc1t773hz].[cnt:Subscriber:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1i1m5pp1j17kxh19gvodc1t773hz].[yr:Subscribed:ok]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#666666' fontname='Tableau Medium'>Count:</run>
                <run bold='true' fontcolor='#787878' fontname='Tableau Medium'>Æ&#9; </run>
                <run bold='true' fontcolor='#e15759' fontname='Tableau Medium'><![CDATA[<[federated.1i1m5pp1j17kxh19gvodc1t773hz].[cnt:Subscriber:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.58171272277832031' />
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1i1m5pp1j17kxh19gvodc1t773hz].[pcto:cum:cnt:Subscriber:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.1i1m5pp1j17kxh19gvodc1t773hz].[:Measure Names]' />
            </encodings>
            <customized-tooltip>
              <formatted-text />
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.58171272277832031' />
                <format attr='line-interpolation' value='linear' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1i1m5pp1j17kxh19gvodc1t773hz].[cnt:Subscriber:qk] + [federated.1i1m5pp1j17kxh19gvodc1t773hz].[pcto:cum:cnt:Subscriber:qk])</rows>
        <cols>[federated.1i1m5pp1j17kxh19gvodc1t773hz].[yr:Subscribed:ok]</cols>
      </table>
      <simple-id uuid='{A0A054BB-5F67-4C11-8842-80A2C3EA465A}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Jobs_By_House'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource caption='hacker_house_info_2022 (Miami_HW)' name='federated.08p2aoo0msdhrx17tqk1o1ame7h1' />
      </datasources>
      <datasource-dependencies datasource='federated.08p2aoo0msdhrx17tqk1o1ame7h1'>
        <column caption='Hacker Job' datatype='string' name='[hacker_job]' role='dimension' type='nominal' />
        <column caption='House Name' datatype='string' name='[house_name]' role='dimension' type='nominal' />
        <column-instance column='[hacker_job]' derivation='None' name='[none:hacker_job:nk]' pivot='key' type='nominal' />
        <column-instance column='[house_name]' derivation='None' name='[none:house_name:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='12' param='horz' type-v2='layout-flow' w='98828' x='586' y='1042'>
            <zone h='97916' id='5' type-v2='layout-basic' w='98828' x='586' y='1042' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='97333' id='3' name='House_Info_2022' w='98000' x='1000' y='1333' />
        <zone h='2734' id='10' mode='checkdropdown' name='House_Info_2022' param='[federated.08p2aoo0msdhrx17tqk1o1ame7h1].[none:hacker_job:nk]' type-v2='filter' values='database' w='16764' x='49268' y='3125' />
        <zone h='2734' id='13' mode='checkdropdown' name='House_Info_2022' param='[federated.08p2aoo0msdhrx17tqk1o1ame7h1].[none:house_name:nk]' type-v2='filter' values='database' w='16764' x='68375' y='2995' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='45' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='44' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone h='2734' id='10' mode='checkdropdown' name='House_Info_2022' param='[federated.08p2aoo0msdhrx17tqk1o1ame7h1].[none:hacker_job:nk]' type-v2='filter' values='database' w='16764' x='49268' y='3125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='2734' id='13' mode='checkdropdown' name='House_Info_2022' param='[federated.08p2aoo0msdhrx17tqk1o1ame7h1].[none:house_name:nk]' type-v2='filter' values='database' w='16764' x='68375' y='2995'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='97333' id='3' is-fixed='true' name='House_Info_2022' w='98000' x='1000' y='1333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{934A0ED5-2F17-483F-B42E-CE9A7145F7E2}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Locations'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource caption='hacker_location_2022 (Miami_HW)' name='federated.0p6qq6d05piqtx19z6lqv1ne1lzu' />
      </datasources>
      <datasource-dependencies datasource='federated.0p6qq6d05piqtx19z6lqv1ne1lzu'>
        <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
          <semantic-values semantic-role='[Geographical].[Latitude]'>
            <semantic-value key='&quot;Alexandria&quot;' value='38.820450000000001' />
            <semantic-value key='&quot;Ames&quot;' value='42.030799999999999' />
            <semantic-value key='&quot;Andover&quot;' value='42.658299999999997' />
            <semantic-value key='&quot;Annandale&quot;' value='38.830399999999997' />
            <semantic-value key='&quot;Arlington&quot;' value='32.735700000000001' />
            <semantic-value key='&quot;Athens&quot;' value='33.951900000000002' />
            <semantic-value key='&quot;Atlanta&quot;' value='33.748800000000003' />
            <semantic-value key='&quot;Austin&quot;' value='30.267199999999999' />
            <semantic-value key='&quot;Avon&quot;' value='39.762799999999999' />
            <semantic-value key='&quot;Baltimore&quot;' value='39.290399999999998' />
            <semantic-value key='&quot;Bay City&quot;' value='43.594499999999996' />
            <semantic-value key='&quot;Beachwood&quot;' value='41.464500000000001' />
            <semantic-value key='&quot;Bellingham&quot;' value='48.751899999999999' />
            <semantic-value key='&quot;Berkeley&quot;' value='37.871499999999997' />
            <semantic-value key='&quot;Bethany&quot;' value='35.518700000000003' />
            <semantic-value key='&quot;Bethlehem&quot;' value='40.625900000000001' />
            <semantic-value key='&quot;Blacksburg&quot;' value='37.229599999999998' />
            <semantic-value key='&quot;Boston&quot;' value='42.360100000000003' />
            <semantic-value key='&quot;Boulder&quot;' value='40.015000000000001' />
            <semantic-value key='&quot;Bowie&quot;' value='39.006799999999998' />
            <semantic-value key='&quot;Brooklyn&quot;' value='40.678199999999997' />
            <semantic-value key='&quot;Burlington&quot;' value='44.475900000000003' />
            <semantic-value key='&quot;Cambridge&quot;' value='42.373600000000003' />
            <semantic-value key='&quot;Canton&quot;' value='40.798900000000003' />
            <semantic-value key='&quot;Charlotte&quot;' value='35.2271' />
            <semantic-value key='&quot;Charlottesville&quot;' value='38.029299999999999' />
            <semantic-value key='&quot;Cincinnati&quot;' value='39.103099999999998' />
            <semantic-value key='&quot;Columbia&quot;' value='34.000700000000002' />
            <semantic-value key='&quot;Columbus&quot;' value='39.961199999999998' />
            <semantic-value key='&quot;Covington&quot;' value='33.596800000000002' />
            <semantic-value key='&quot;Dallas&quot;' value='32.776699999999998' />
            <semantic-value key='&quot;Dayton&quot;' value='39.758899999999997' />
            <semantic-value key='&quot;Decatur&quot;' value='33.774799999999999' />
            <semantic-value key='&quot;Denton&quot;' value='33.214799999999997' />
            <semantic-value key='&quot;Denver&quot;' value='39.739199999999997' />
            <semantic-value key='&quot;Detroit&quot;' value='42.331400000000002' />
            <semantic-value key='&quot;Durham&quot;' value='35.994' />
            <semantic-value key='&quot;East Brunswick&quot;' value='40.431699999999999' />
            <semantic-value key='&quot;Epping&quot;' value='43.0535' />
            <semantic-value key='&quot;Evanston&quot;' value='42.045099999999998' />
            <semantic-value key='&quot;Fairfax&quot;' value='38.846200000000003' />
            <semantic-value key='&quot;Fairfield&quot;' value='41.140799999999999' />
            <semantic-value key='&quot;Fremont&quot;' value='37.548499999999997' />
            <semantic-value key='&quot;Gainesville&quot;' value='29.651599999999998' />
            <semantic-value key='&quot;Glen Rock&quot;' value='40.962899999999998' />
            <semantic-value key='&quot;Golden Valley&quot;' value='44.991700000000002' />
            <semantic-value key='&quot;Hagerstown&quot;' value='39.641800000000003' />
            <semantic-value key='&quot;Helena&quot;' value='46.589100000000002' />
            <semantic-value key='&quot;Hernando&quot;' value='34.823985999999998' />
            <semantic-value key='&quot;Hollywood&quot;' value='26.011199999999999' />
            <semantic-value key='&quot;Homestead&quot;' value='25.468699999999998' />
            <semantic-value key='&quot;Houston&quot;' value='29.760400000000001' />
            <semantic-value key='&quot;Irvine&quot;' value='33.684600000000003' />
            <semantic-value key='&quot;Ithaca&quot;' value='42.444000000000003' />
            <semantic-value key='&quot;Jacksonville&quot;' value='30.3322' />
            <semantic-value key='&quot;Kansas City&quot;' value='39.099699999999999' />
            <semantic-value key='&quot;Las Vegas&quot;' value='36.171599999999998' />
            <semantic-value key='&quot;Lewisville&quot;' value='33.046300000000002' />
            <semantic-value key='&quot;Louisville&quot;' value='38.252699999999997' />
            <semantic-value key='&quot;Manassas&quot;' value='38.750900000000001' />
            <semantic-value key='&quot;Manhattan&quot;' value='40.776676000000002' />
            <semantic-value key='&quot;Manhattan Beach&quot;' value='33.884700000000002' />
            <semantic-value key='&quot;Marietta&quot;' value='33.952599999999997' />
            <semantic-value key='&quot;Markham&quot;' value='41.593600000000002' />
            <semantic-value key='&quot;Miami&quot;' value='25.761700000000001' />
            <semantic-value key='&quot;Mountain View&quot;' value='37.386099999999999' />
            <semantic-value key='&quot;Naples&quot;' value='26.141999999999999' />
            <semantic-value key='&quot;Nashville&quot;' value='36.162700000000001' />
            <semantic-value key='&quot;Oakland&quot;' value='37.804400000000001' />
            <semantic-value key='&quot;Oakland Park&quot;' value='26.1723' />
            <semantic-value key='&quot;Orlando&quot;' value='28.538399999999999' />
            <semantic-value key='&quot;Orono&quot;' value='44.883099999999999' />
            <semantic-value key='&quot;Palo Alto&quot;' value='37.441899999999997' />
            <semantic-value key='&quot;Pasadena&quot;' value='34.147799999999997' />
            <semantic-value key='&quot;Philadelphia&quot;' value='39.952599999999997' />
            <semantic-value key='&quot;Phoenix&quot;' value='33.448399999999999' />
            <semantic-value key='&quot;Plantation&quot;' value='26.127600000000001' />
            <semantic-value key='&quot;Pleasant Hill&quot;' value='37.948' />
            <semantic-value key='&quot;Portland&quot;' value='45.5152' />
            <semantic-value key='&quot;Princeton&quot;' value='40.357300000000002' />
            <semantic-value key='&quot;Raleigh&quot;' value='35.779600000000002' />
            <semantic-value key='&quot;Reno&quot;' value='39.529899999999998' />
            <semantic-value key='&quot;Rochester&quot;' value='43.156599999999997' />
            <semantic-value key='&quot;Rogers&quot;' value='36.333500000000001' />
            <semantic-value key='&quot;Saco&quot;' value='43.500900000000001' />
            <semantic-value key='&quot;Sacramento&quot;' value='38.581600000000002' />
            <semantic-value key='&quot;Saint Petersburg&quot;' value='27.767600000000002' />
            <semantic-value key='&quot;San Diego&quot;' value='32.715699999999998' />
            <semantic-value key='&quot;San Francisco&quot;' value='37.774900000000002' />
            <semantic-value key='&quot;San Jose&quot;' value='37.338700000000003' />
            <semantic-value key='&quot;San Mateo&quot;' value='37.563000000000002' />
            <semantic-value key='&quot;Santa Clara&quot;' value='37.354100000000003' />
            <semantic-value key='&quot;Savannah&quot;' value='32.0809' />
            <semantic-value key='&quot;Sharon&quot;' value='41.2331' />
            <semantic-value key='&quot;Sherwood&quot;' value='34.832099999999997' />
            <semantic-value key='&quot;Springfield&quot;' value='39.781700000000001' />
            <semantic-value key='&quot;Stanford&quot;' value='37.427500000000002' />
            <semantic-value key='&quot;Sunnyvale&quot;' value='37.3688' />
            <semantic-value key='&quot;Tampa&quot;' value='27.950600000000001' />
            <semantic-value key='&quot;Union City&quot;' value='37.593400000000003' />
            <semantic-value key='&quot;Utica&quot;' value='43.100900000000003' />
            <semantic-value key='&quot;Virginia&quot;' value='37.431600000000003' />
            <semantic-value key='&quot;Walpole&quot;' value='42.1417' />
            <semantic-value key='&quot;Waltham&quot;' value='42.1417' />
            <semantic-value key='&quot;Waterloo&quot;' value='43.464300000000001' />
            <semantic-value key='&quot;Westerville&quot;' value='40.1267' />
            <semantic-value key='&quot;Westminster&quot;' value='33.7592' />
            <semantic-value key='&quot;Weston&quot;' value='26.1004' />
            <semantic-value key='&quot;Winter Park&quot;' value='28.600000000000001' />
          </semantic-values>
          <semantic-values semantic-role='[City].[Name]'>
            <semantic-value key='&quot;Amaranth&quot;' value='&quot;Amaranth&quot;' />
            <semantic-value key='&quot;Amsterdam&quot;' value='&quot;Amsterdam&quot;' />
            <semantic-value key='&quot;Bangkok&quot;' value='&quot;Bangkok&quot;' />
            <semantic-value key='&quot;Barcelona&quot;' value='&quot;Barcelona&quot;' />
            <semantic-value key='&quot;Barueri&quot;' value='&quot;Barueri&quot;' />
            <semantic-value key='&quot;Battersea&quot;' value='&quot;London&quot;' />
            <semantic-value key='&quot;Belle Mead&quot;' value='&quot;Nashville&quot;' />
            <semantic-value key='&quot;Bengaluru&quot;' value='&quot;Bengaluru&quot;' />
            <semantic-value key='&quot;Berlin&quot;' value='&quot;Berlin&quot;' />
            <semantic-value key='&quot;Bikaner&quot;' value='&quot;Bikaner&quot;' />
            <semantic-value key='&quot;Bogota&quot;' value='&quot;Bogotá&quot;' />
            <semantic-value key='&quot;Bournemouth&quot;' value='&quot;Bournemouth&quot;' />
            <semantic-value key='&quot;Bridgetown&quot;' value='&quot;Bridgetown&quot;' />
            <semantic-value key='&quot;Brisbane&quot;' value='&quot;Brisbane&quot;' />
            <semantic-value key='&quot;Brussels&quot;' value='&quot;Brussels&quot;' />
            <semantic-value key='&quot;Buenos Aires&quot;' value='&quot;Buenos Aires&quot;' />
            <semantic-value key='&quot;Canoas&quot;' value='&quot;Canoas&quot;' />
            <semantic-value key='&quot;Chandigarh&quot;' value='&quot;Chandigarh&quot;' />
            <semantic-value key='&quot;Chennai&quot;' value='&quot;Chennai&quot;' />
            <semantic-value key='&quot;Cuernavaca&quot;' value='&quot;Cuernavaca&quot;' />
            <semantic-value key='&quot;Davis&quot;' value='&quot;Davis&quot;' />
            <semantic-value key='&quot;Dehradun&quot;' value='&quot;Dehra Dun&quot;' />
            <semantic-value key='&quot;Dublin&quot;' value='&quot;Dublin&quot;' />
            <semantic-value key='&quot;Ghaziabad&quot;' value='&quot;Ghaziabad&quot;' />
            <semantic-value key='&quot;Gumla&quot;' value='&quot;Gumla&quot;' />
            <semantic-value key='&quot;Gwalior&quot;' value='&quot;Gwalior&quot;' />
            <semantic-value key='&quot;Helsinki&quot;' value='&quot;Helsinki&quot;' />
            <semantic-value key='&quot;Hoboken&quot;' value='&quot;Hoboken&quot;' />
            <semantic-value key='&quot;Indore&quot;' value='&quot;Indore&quot;' />
            <semantic-value key='&quot;Kingston&quot;' value='&quot;Kingston&quot;' />
            <semantic-value key='&quot;Lakewood Ranch&quot;' value='&quot;Bradenton&quot;' />
            <semantic-value key='&quot;Lima&quot;' value='&quot;Lima&quot;' />
            <semantic-value key='&quot;Lisbon&quot;' value='&quot;Lisbon&quot;' />
            <semantic-value key='&quot;London&quot;' value='&quot;London&quot;' />
            <semantic-value key='&quot;Long Island&quot;' value='&quot;Long Island&quot;' />
            <semantic-value key='&quot;Macerata&quot;' value='&quot;Macerata&quot;' />
            <semantic-value key='&quot;Melbourne&quot;' value='&quot;Melbourne&quot;' />
            <semantic-value key='&quot;Mexico City&quot;' value='&quot;Mexico City&quot;' />
            <semantic-value key='&quot;Munich&quot;' value='&quot;Munich&quot;' />
            <semantic-value key='&quot;Nashik&quot;' value='&quot;New Delhi&quot;' />
            <semantic-value key='&quot;New Delhi&quot;' value='&quot;New Delhi&quot;' />
            <semantic-value key='&quot;Oranjestad&quot;' value='&quot;Oranjestad&quot;' />
            <semantic-value key='&quot;Paris&quot;' value='&quot;Paris&quot;' />
            <semantic-value key='&quot;Pinecrest&quot;' value='&quot;Pinecrest&quot;' />
            <semantic-value key='&quot;Pune&quot;' value='&quot;Pune&quot;' />
            <semantic-value key='&quot;Quito&quot;' value='&quot;Quito&quot;' />
            <semantic-value key='&quot;Redmond City&quot;' value='&quot;Redmond&quot;' />
            <semantic-value key='&quot;Rehoboth&quot;' value='&quot;Rehoboth&quot;' />
            <semantic-value key='&quot;Reykjavík&quot;' value='&quot;Reykjavik&quot;' />
            <semantic-value key='&quot;Rio de Janeiro&quot;' value='&quot;Rio De Janeiro&quot;' />
            <semantic-value key='&quot;San Juan&quot;' value='&quot;San Juan de Dios&quot;' />
            <semantic-value key='&quot;Santiago&quot;' value='&quot;Santiago&quot;' />
            <semantic-value key='&quot;Seoul&quot;' value='&quot;Seoul&quot;' />
            <semantic-value key='&quot;Shahabad&quot;' value='&quot;Shahabad&quot;' />
            <semantic-value key='&quot;Sunny Isles&quot;' value='&quot;Sunny Isles Beach&quot;' />
            <semantic-value key='&quot;Tegucigalpa&quot;' value='&quot;Tegucigalpa&quot;' />
            <semantic-value key='&quot;Tehran&quot;' value='&quot;Tehran&quot;' />
            <semantic-value key='&quot;Tel Aviv-Yafo&quot;' value='&quot;Tel Aviv-Yafo&quot;' />
            <semantic-value key='&quot;Thane&quot;' value='&quot;Thane&quot;' />
            <semantic-value key='&quot;Torrent&quot;' value='&quot;Torrent&quot;' />
            <semantic-value key='&quot;Ulaanbaatar&quot;' value='&quot;Ulan Bator&quot;' />
            <semantic-value key='&quot;Vancouver&quot;' value='&quot;Vancouver&quot;' />
            <semantic-value key='&quot;Vantaa&quot;' value='&quot;Vantaa&quot;' />
            <semantic-value key='&quot;Warsaw&quot;' value='&quot;Warsaw&quot;' />
            <semantic-value key='&quot;Wellington&quot;' value='&quot;Wellington&quot;' />
          </semantic-values>
          <semantic-values semantic-role='[Geographical].[Longitude]'>
            <semantic-value key='&quot;Alexandria&quot;' value='-77.050551999999996' />
            <semantic-value key='&quot;Ames&quot;' value='-93.631' />
            <semantic-value key='&quot;Andover&quot;' value='-71.136799999999994' />
            <semantic-value key='&quot;Annandale&quot;' value='-77.196399999999997' />
            <semantic-value key='&quot;Arlington&quot;' value='-97.108099999999993' />
            <semantic-value key='&quot;Athens&quot;' value='-83.357600000000005' />
            <semantic-value key='&quot;Atlanta&quot;' value='-84.387699999999995' />
            <semantic-value key='&quot;Austin&quot;' value='-97.743099999999998' />
            <semantic-value key='&quot;Avon&quot;' value='-86.399699999999996' />
            <semantic-value key='&quot;Baltimore&quot;' value='-76.612200000000001' />
            <semantic-value key='&quot;Bay City&quot;' value='-83.888900000000007' />
            <semantic-value key='&quot;Beachwood&quot;' value='-81.508700000000005' />
            <semantic-value key='&quot;Bellingham&quot;' value='-122.4787' />
            <semantic-value key='&quot;Berkeley&quot;' value='-122.273' />
            <semantic-value key='&quot;Bethany&quot;' value='-97.632300000000001' />
            <semantic-value key='&quot;Bethlehem&quot;' value='-75.370500000000007' />
            <semantic-value key='&quot;Blacksburg&quot;' value='-80.413899999999998' />
            <semantic-value key='&quot;Boston&quot;' value='-71.058899999999994' />
            <semantic-value key='&quot;Boulder&quot;' value='-105.2705' />
            <semantic-value key='&quot;Bowie&quot;' value='-76.7791' />
            <semantic-value key='&quot;Brooklyn&quot;' value='-73.944199999999995' />
            <semantic-value key='&quot;Burlington&quot;' value='-73.212100000000007' />
            <semantic-value key='&quot;Cambridge&quot;' value='-71.109700000000004' />
            <semantic-value key='&quot;Canton&quot;' value='-81.378399999999999' />
            <semantic-value key='&quot;Charlotte&quot;' value='-80.843100000000007' />
            <semantic-value key='&quot;Charlottesville&quot;' value='-78.476699999999994' />
            <semantic-value key='&quot;Cincinnati&quot;' value='-84.512' />
            <semantic-value key='&quot;Columbia&quot;' value='-81.034800000000004' />
            <semantic-value key='&quot;Columbus&quot;' value='-82.998800000000003' />
            <semantic-value key='&quot;Covington&quot;' value='-83.860200000000006' />
            <semantic-value key='&quot;Dallas&quot;' value='-96.796999999999997' />
            <semantic-value key='&quot;Dayton&quot;' value='-84.191599999999994' />
            <semantic-value key='&quot;Decatur&quot;' value='-84.296300000000002' />
            <semantic-value key='&quot;Denton&quot;' value='-97.133099999999999' />
            <semantic-value key='&quot;Denver&quot;' value='-104.9903' />
            <semantic-value key='&quot;Detroit&quot;' value='-83.0458' />
            <semantic-value key='&quot;Durham&quot;' value='-78.898600000000002' />
            <semantic-value key='&quot;East Brunswick&quot;' value='-74.405000000000001' />
            <semantic-value key='&quot;Epping&quot;' value='-71.073499999999996' />
            <semantic-value key='&quot;Evanston&quot;' value='-87.687700000000007' />
            <semantic-value key='&quot;Fairfax&quot;' value='-77.306399999999996' />
            <semantic-value key='&quot;Fairfield&quot;' value='-73.261300000000006' />
            <semantic-value key='&quot;Fremont&quot;' value='-121.98860000000001' />
            <semantic-value key='&quot;Gainesville&quot;' value='-82.324799999999996' />
            <semantic-value key='&quot;Glen Rock&quot;' value='-74.132900000000006' />
            <semantic-value key='&quot;Golden Valley&quot;' value='-93.359999999999999' />
            <semantic-value key='&quot;Hagerstown&quot;' value='-77.719999999999999' />
            <semantic-value key='&quot;Helena&quot;' value='-112.0391' />
            <semantic-value key='&quot;Hernando&quot;' value='-89.993706000000003' />
            <semantic-value key='&quot;Hollywood&quot;' value='-80.149500000000003' />
            <semantic-value key='&quot;Homestead&quot;' value='-80.477599999999995' />
            <semantic-value key='&quot;Houston&quot;' value='-95.369799999999998' />
            <semantic-value key='&quot;Irvine&quot;' value='-117.8265' />
            <semantic-value key='&quot;Ithaca&quot;' value='-76.501900000000006' />
            <semantic-value key='&quot;Jacksonville&quot;' value='-81.655699999999996' />
            <semantic-value key='&quot;Kansas City&quot;' value='-94.578599999999994' />
            <semantic-value key='&quot;Las Vegas&quot;' value='-115.1391' />
            <semantic-value key='&quot;Lewisville&quot;' value='-96.994200000000006' />
            <semantic-value key='&quot;Louisville&quot;' value='-85.758499999999998' />
            <semantic-value key='&quot;Manassas&quot;' value='-77.475300000000004' />
            <semantic-value key='&quot;Manhattan&quot;' value='-73.971321000000003' />
            <semantic-value key='&quot;Manhattan Beach&quot;' value='-118.4109' />
            <semantic-value key='&quot;Marietta&quot;' value='-84.549899999999994' />
            <semantic-value key='&quot;Markham&quot;' value='-87.694800000000001' />
            <semantic-value key='&quot;Miami&quot;' value='-80.191800000000001' />
            <semantic-value key='&quot;Mountain View&quot;' value='-122.0839' />
            <semantic-value key='&quot;Naples&quot;' value='-81.794799999999995' />
            <semantic-value key='&quot;Nashville&quot;' value='-86.781599999999997' />
            <semantic-value key='&quot;Oakland&quot;' value='-122.27119999999999' />
            <semantic-value key='&quot;Oakland Park&quot;' value='-80.132000000000005' />
            <semantic-value key='&quot;Orlando&quot;' value='-81.378900000000002' />
            <semantic-value key='&quot;Orono&quot;' value='-68.671899999999994' />
            <semantic-value key='&quot;Palo Alto&quot;' value='-122.143' />
            <semantic-value key='&quot;Pasadena&quot;' value='-118.14449999999999' />
            <semantic-value key='&quot;Philadelphia&quot;' value='-75.165199999999999' />
            <semantic-value key='&quot;Phoenix&quot;' value='-112.074' />
            <semantic-value key='&quot;Plantation&quot;' value='-80.233099999999993' />
            <semantic-value key='&quot;Pleasant Hill&quot;' value='-122.0608' />
            <semantic-value key='&quot;Portland&quot;' value='-122.6784' />
            <semantic-value key='&quot;Princeton&quot;' value='-74.667199999999994' />
            <semantic-value key='&quot;Raleigh&quot;' value='-78.638199999999998' />
            <semantic-value key='&quot;Reno&quot;' value='-119.8143' />
            <semantic-value key='&quot;Rochester&quot;' value='-77.608800000000002' />
            <semantic-value key='&quot;Rogers&quot;' value='-94.125699999999995' />
            <semantic-value key='&quot;Saco&quot;' value='-70.442800000000005' />
            <semantic-value key='&quot;Sacramento&quot;' value='-121.4944' />
            <semantic-value key='&quot;Saint Petersburg&quot;' value='-82.640299999999996' />
            <semantic-value key='&quot;San Diego&quot;' value='-117.1611' />
            <semantic-value key='&quot;San Francisco&quot;' value='-122.4194' />
            <semantic-value key='&quot;San Jose&quot;' value='-121.8853' />
            <semantic-value key='&quot;San Mateo&quot;' value='-122.32550000000001' />
            <semantic-value key='&quot;Santa Clara&quot;' value='-121.9552' />
            <semantic-value key='&quot;Savannah&quot;' value='-81.091200000000001' />
            <semantic-value key='&quot;Sharon&quot;' value='-80.493399999999994' />
            <semantic-value key='&quot;Sherwood&quot;' value='-92.191100000000006' />
            <semantic-value key='&quot;Springfield&quot;' value='-89.650099999999995' />
            <semantic-value key='&quot;Stanford&quot;' value='-122.16970000000001' />
            <semantic-value key='&quot;Sunnyvale&quot;' value='-122.0363' />
            <semantic-value key='&quot;Tampa&quot;' value='-82.4572' />
            <semantic-value key='&quot;Union City&quot;' value='-122.04389999999999' />
            <semantic-value key='&quot;Utica&quot;' value='-75.232699999999994' />
            <semantic-value key='&quot;Virginia&quot;' value='-78.656899999999993' />
            <semantic-value key='&quot;Walpole&quot;' value='-71.249499999999998' />
            <semantic-value key='&quot;Waltham&quot;' value='-71.249499999999998' />
            <semantic-value key='&quot;Waterloo&quot;' value='-80.520399999999995' />
            <semantic-value key='&quot;Westerville&quot;' value='-82.931899999999999' />
            <semantic-value key='&quot;Westminster&quot;' value='-117.9897' />
            <semantic-value key='&quot;Weston&quot;' value='-80.399799999999999' />
            <semantic-value key='&quot;Winter Park&quot;' value='-81.339200000000005' />
          </semantic-values>
        </column>
        <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
          <semantic-values semantic-role='[Country].[Name]'>
            <semantic-value key='&quot;England&quot;' value='&quot;United Kingdom&quot;' />
            <semantic-value key='&quot;S\\\\343o Paulo&quot;' value='&quot;Antarctica&quot;' />
            <semantic-value key='&quot;Virginia&quot;' value='&quot;United States&quot;' />
          </semantic-values>
        </column>
        <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
        <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='10' param='horz' type-v2='layout-flow' w='98828' x='586' y='1042'>
            <zone h='97916' id='5' type-v2='layout-basic' w='98828' x='586' y='1042' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='51625' id='3' name='Int._Hacker_locations_2022' w='98600' x='600' y='875' />
        <zone h='46375' id='8' name='Hackers_Locations_2022' w='98400' x='700' y='52875' />
        <zone h='2604' id='11' mode='checkdropdown' name='Int._Hacker_locations_2022' param='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[none:Country:nk]' type-v2='filter' values='relevant' w='18302' x='2123' y='2865' />
        <zone h='2604' id='12' mode='checkdropdown' name='Hackers_Locations_2022' param='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[none:City:nk]' type-v2='filter' values='cascading' w='18302' x='2343' y='54818' />
      </zones>
      <devicelayouts>
        <devicelayout name='Desktop' />
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='44' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='43' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone h='2604' id='11' mode='checkdropdown' name='Int._Hacker_locations_2022' param='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[none:Country:nk]' type-v2='filter' values='relevant' w='18302' x='2123' y='2865'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='51625' id='3' is-fixed='true' name='Int._Hacker_locations_2022' w='98600' x='600' y='875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='2604' id='12' mode='checkdropdown' name='Hackers_Locations_2022' param='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[none:City:nk]' type-v2='filter' values='cascading' w='18302' x='2343' y='54818'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='46375' id='8' is-fixed='true' name='Hackers_Locations_2022' w='98400' x='700' y='52875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{3FEBE913-3140-45E9-9456-2C5773ADA4CA}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Misc.'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='12' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='18' param='horz' type-v2='layout-flow' w='98828' x='586' y='1042'>
            <zone h='97916' id='13' type-v2='layout-basic' w='98828' x='586' y='1042' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='97786' id='16' name='Attendees_@Luma' w='98902' x='586' y='1172' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='34' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='84000' id='33' param='vert' type-v2='layout-flow' w='84000' x='8000' y='8000'>
                <zone fixed-size='280' h='97786' id='16' is-fixed='true' name='Attendees_@Luma' w='98902' x='586' y='1172'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{E017E246-E2DB-4CB3-9D65-7821C389F51E}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Subscribers'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='8' param='horz' type-v2='layout-flow' w='98828' x='586' y='1042'>
            <zone h='97916' id='6' type-v2='layout-basic' w='98828' x='586' y='1042' />
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone h='97526' id='3' name='Subscriber_Attendance (2)' w='98755' x='659' y='1302' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='40' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='39' param='vert' type-v2='layout-flow' w='98828' x='586' y='1042'>
                <zone fixed-size='280' h='97526' id='3' is-fixed='true' name='Subscriber_Attendance (2)' w='98755' x='659' y='1302'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{2AF7A72E-E86E-4B0E-8711-6598FB592345}' />
    </dashboard>
  </dashboards>
  <windows source-height='135'>
    <window class='worksheet' name='House_Info_2022'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.08p2aoo0msdhrx17tqk1o1ame7h1].[none:hacker_job:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08p2aoo0msdhrx17tqk1o1ame7h1].[none:house_name:nk]</field>
            <field>[federated.0h7z7ih1ojf9mm154lwpf0n0yl03].[none:hacker_job:nk]</field>
            <field>[federated.0h7z7ih1ojf9mm154lwpf0n0yl03].[none:hacker_location:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{05B34C47-1392-4977-8745-65FAD40D9670}' />
    </window>
    <window class='worksheet' name='Int._Hacker_locations_2022'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[none:Country:nk]' type='color' />
            <card pane-specification-id='2' param='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[none:City:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[cnt:Country (copy)_1741696853644546056:ok]</field>
            <field>[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[none:City:nk]</field>
            <field>[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[none:Country:nk]</field>
            <field>[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[none:State:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{42C75E63-ABF0-4DBF-A3CC-57C46C6A1315}' />
    </window>
    <window class='worksheet' name='Hackers_Locations_2022'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[sum:combo_count:qk]' type='color' />
            <card pane-specification-id='2' param='[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[cnt:State:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[cnt:State:qk]</field>
            <field>[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[none:City:nk]</field>
            <field>[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[none:Country:nk]</field>
            <field>[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[none:State:nk]</field>
            <field>[federated.0p6qq6d05piqtx19z6lqv1ne1lzu].[sum:combo_count:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{9F8FD50A-E040-470A-B464-E546DA86263C}' />
    </window>
    <window class='worksheet' name='newsletter_data'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1i1m5pp1j17kxh19gvodc1t773hz].[:Measure Names]' type='color' />
            <card pane-specification-id='1' param='[federated.1i1m5pp1j17kxh19gvodc1t773hz].[yr:Subscribed:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1i1m5pp1j17kxh19gvodc1t773hz].[none:Subscriber:nk]</field>
            <field>[federated.1i1m5pp1j17kxh19gvodc1t773hz].[yr:Subscribed:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{28D8F045-1873-4865-B61D-0BE39B006932}' />
    </window>
    <window class='worksheet' name='Subscriber_Attendance (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[:Measure Names]</field>
            <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[__tableau_internal_object_id__].[cnt:attendees_2023_3D60EF0A766D421FAB417AFC2D7C3293:ok]</field>
            <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[none:21_subs:nk]</field>
            <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[none:21_to_23_subs:nk]</field>
            <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[none:22_subs:nk]</field>
            <field>[federated.1dnnp6z0acy4y510gicoq0vjbum9].[none:22_to_23_subs:nk]</field>
            <field>[federated.1i1m5pp1j17kxh19gvodc1t773hz].[yr:Subscribed:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2566B01B-F61D-4374-8BF8-F1B7E7522314}' />
    </window>
    <window class='worksheet' name='Attendees_@Luma'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.12gjrh60b0y2av103x6rw1cwinu0].[ctd:mhw_registered:ok]' type='color' />
            <card pane-specification-id='1' param='[federated.12gjrh60b0y2av103x6rw1cwinu0].[ctd:luma_registered:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.12gjrh60b0y2av103x6rw1cwinu0].[:Measure Names]</field>
            <field>[federated.12gjrh60b0y2av103x6rw1cwinu0].[ctd:luma_registered:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F4AA76B2-A3F9-4075-AD1C-4FC3F279124D}' />
    </window>
    <window class='dashboard' name='Locations'>
      <viewpoints>
        <viewpoint name='Hackers_Locations_2022'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Int._Hacker_locations_2022'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{13A4A1AE-5FA4-407A-AC1E-94C9A95208A0}' />
    </window>
    <window class='dashboard' maximized='true' name='Subscribers'>
      <viewpoints>
        <viewpoint name='Subscriber_Attendance (2)'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{3A67E3CD-111D-4474-B1C7-99D4ECECAAEB}' />
    </window>
    <window class='dashboard' name='Jobs_By_House'>
      <viewpoints>
        <viewpoint name='House_Info_2022' />
      </viewpoints>
      <active id='-1' />
      <grid grid-overlay-mode='on' />
      <simple-id uuid='{0C5A033E-9F6D-4FFB-AA5B-2C8333AE5F17}' />
    </window>
    <window class='dashboard' name='Misc.'>
      <viewpoints>
        <viewpoint name='Attendees_@Luma'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.12gjrh60b0y2av103x6rw1cwinu0].[ctd:luma_registered:ok]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <grid grid-overlay-mode='on' />
      <simple-id uuid='{55E2E523-C28B-4757-AE79-BDC459917435}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Attendees_@Luma' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Hackers_Locations_2022' width='384'>
      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
      SUVORK5CYII=
    </thumbnail>
    <thumbnail height='384' name='House_Info_2022' width='384'>
      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
      Ukn9+vUZNmwYFStWZO/evYwePZoWLVo81q49e/bQvHlzNBoN9vb2nD17FrVazY4dOxg2bBhn
      z57l1q1b6PV6MjMzSU1N5cKFCzRt2pSAgAAqVarE6NGjmT59OteuXWPDhg3MmjXrZX4UZslo
      NPL5558zYMAAcnNzMRgMTJkyheDgYGbOnEn9+vWZPXs2a9asQZIkrl27Rk5ODhEREVhYWODp
      6cmePXtwdHQkPT2d2rVrs3HjRqytralZsyZ37txh+/bthIaGYmNjw/Tp00u6yYJgVl7qIPDO
      nTs5d+4cgYGBXL58mZSUFGQyGbVr1+b69euMGDECuVyOQqFg7dq1REREMHLkSNPvjx8/nsWL
      F2M0GjEYDOzfv59ly5axceNG9u3bZ0r1C9CmTRtmzJhBjx49TD+zsLBAkiRUKpWpf/mtt97C
      9r93QJmZmfznP//h6tWrNGjQgIkTJ+Ls7MyAAQM4fvw4a9eu5fLly/j7+5ORkWEq9/333+f4
      8eP83//9HyqViszMTJydnbGyssLZ2Zns7OwnzkVQUBDlypWjT58+nDlzhgcPHvDDDz9w69Yt
      6tat+zJOv9nT6/VkZWXRuXNnqlSpYsr9s379eipUqIBOp2Ps2LHMmDGD/fv3m34vNjaWLl26
      4O7ubvpZkyZNqF+/PjqdjtjYWH799VcSExOxsLDA2tqapUuXUqdOnZJo5j8ity2D3Nb2BX+V
      KelmCWbipT0BGAwGfv/9dw4fPsxbb73F9OnTOXz4MADNmjWjW7duDBw4kNWrV2M0Gpk1axb2
      9vY0btyYhg0bIpPJcHFxoW7duoSFhREXF0f58uXZvn07RqMRPz8/7t69i5ubGwAVKlSgWrVq
      wMMLe5EKFSowduxYRowY8UQde/XqxfHjx7G3tyc3N5fQ0FDu379PxYoVycrKYt++fTg6OmJh
      YYHB8HhCrqJ+fJlMRrNmzZg9ezbTpk0jMjKSiRMnYmNjw+TJk4mLi8PPz49NmzahVquxt7dH
      o9HQs2dPzp8/T/ny5cnLy3spn4G5s7CwwMXFhS+++ILLly8zatQoWrdujaWlJU5OTsjlcs6d
      O0fTpk25deuWqZusZ8+ejBs3DhsbG2rWrPnEmEvHjh3Zv38/bm5u2NnZoVQqX8tUEABVli8T
      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
    </thumbnail>
    <thumbnail height='384' name='Int._Hacker_locations_2022' width='384'>
      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
    </thumbnail>
    <thumbnail height='384' name='Jobs_By_House' width='384'>
      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
      X3+dLVu2YG5uzujRo9HQ0ODw4cP06tWL0aNHPxFb+OcKvXaUAtn9ui6GINSZf9XroJVKJdHR
      0bRr166ui/Kvd/jwYbp06YK5+T938ZIPD7wrngCEBu1fNQz0Uf+C8Pds376dkpISJk6cyJ49
      e0hJSWHGjBkkJSVx/PhxPDw8MDQ0RFtbmx07dlQ7+1cmk7Ft2zZGjRpFeno6UqkUe3t7HB0d
      6/ryBEF46F+VAIS/78qVK6p1fU+ePMmZM2cYMGAAYWFhBAYGsm7dOpYsWYKlpSVNmzbl0KFD
      zJkzh4CAAKKiopgzZw5ffPEFhYWFzJw5k+XLl2NsbIytrS0dOnSo68sTBOEx4lUQQhVyuZzM
      zEw6dOiAiYkJVlZWmJubo1QqqaioIC4ursr+T5v9W1ZWRlJSEsOGDQNg7ty56Ovr18UlCYLw
      FLXSCSz8c1hZWZGfn8+dO3fw8PDAyMgIJycnGjVqRJcuXbh69Sr5+fn4+Pjg4OCAlpYWzZs3
      R0tLi/79+xMWFkazZs0YMWIEx44dw8rKCldXV5o1a4ZEIqnry6tCdAILDd2/qhNYqFnr168n
      KSmJWbNmqYbX/pOtP/ENubLsGo3x6J9XTSc/hUKBVFrzD/S1EUfUWe3FEQlAaLDEovD1M46o
      s9qLI/oABEEQGiiRAARBEBookQAEQRAaKDEP4F9kwYIFrFix4onPjx07hqenJ9ra2tUeFxAQ
      QGhoKA4ODixcuFD1eVZWFp9++ilKpRI/P7+XWtb169czatQo4uLi6N69e5Vts2bNQlNTk5Yt
      WzJ9+nTV5zKZDH9/f4yMjGjSpAmdO3cG4IMPPuCrr756/kLk5EFR6d+6jj8jUVSitDCr0RiC
      8KJEAqjnCgsLmTNnDuXl5djb21NYWMjixYtZuXIl5eXlfP7556xbtw65XE5xcTHnzp2jpKSE
      mzdvcuvWLaZPn87SpUvp3r0706dP5/vvv8fOzo7u3bsTERGBra0tgYGB7Nu3j6VLl3L16lUO
      HTpEVlYW6urqzJkzR/XivM8//xwTExPefPNNVq1aRUlJCdbW1ujo6ODj48Pu3bspLi7GyMgI
      Z2dnLCws6NWrFz///DPe3t58/fXXFBYW8vXXXyOVStm/fz8HDx5k8uTJKBQKunTpwvXr1ykv
      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
      3rx5JCcn8+9//5tnn32Wzp07A7B06VKaN2/Oxo0bMRqNDBo0iBUrVpCens5jjz3GqlWrABgw
      YAArVqzgiSeeICcnh2+++YaFCxdy+PBh5s6dS0BAAM7OzixbtgxPT08OHz7M559/jtFoZMqU
      Kbz//vtcuXKFjh07cuHCBYYNG0ZMTAxZWVl06dIFo9FIixYtGDp0KAsWLGDUqFHMnj0brVbL
      okWLSExMRKvV8uOPP2I2mzlx4gSPPvooGRkZeHp60qNHD/bv309sbCwBAQHExcUxefJkjh49
      SocOHQCYOnUqarUai8XCF198UfPK47QzoLXtKCA1SAIQDktuATk4RVHo2rUrzz77LCNGjCAk
      JAStVouTkxNqtZr8/HyaN2/O+++/T0ZGBtu2beMvf/kLhw8fJjg4mPT0dHr37s3MmTPZt28f
      vr6+aLVaysvLeeKJJxg2bJj1k3rllYWrqytLly5FURTra7/88gsffPABPXv2JCUlhQEDBtCv
      Xz+mTZuGl5cXJpOJ5557jnbt2jF//nyMRqO1Wlin02GxWHj88ccZNWoUBQUF6PV6+vbty2OP
      PcawYcM4e/Ysa9euZcCAAQA4OztTXFyM0WjEbDZjMBhQFAW9Xm/tm9LSUj7++GPUarVUHgtx
      C+QK4A6UmZnJxYsXMRqNqFQqa5VtWFgY7du354cffiAyMhKj0UhYWBjOzs68/vrrPPnkk3z/
      /fc0b94cZ2dnfH190Wg0BAQE8Oqrr3L27FnGjRtHQEAAKpWK8ePH8/zzz+Pv78/TTz/NrFmz
      KC0t5eWXX66ymtqN+Pr68u6775KSklLt635+fvz000/cf//9DBo0iJiYGLy9vSksLGTXrl2Y
      zWZ8fX1ZuHAh586dY9q0aVX2Ly0tZc6cOVgsFrp161bzyuNH+4CdhoEK4YikDuAOpdVqbzjD
      aqVrq3LLysrw8PCgoqICJyen62ZFLS0txcPD47r79mazGZPJhIuLC1qtFhcXl5u+z1750NbD
      w+OG2+j1ejQaDdOmTWPw4MH06tXrum1uNF7fYrFgMBhuufJY6gAcM470mf3iSAIQDqGwsNDu
      q6pJAnDMONJn9ovzhwng3Llzf7pRQjgqe/xhyrQGNSd9Zr84cgUg6iy5AnDMONJn9osjo4CE
      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
    </thumbnail>
    <thumbnail height='384' name='Locations' width='384'>
      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
      QmCC
    </thumbnail>
    <thumbnail height='384' name='Misc.' width='384'>
      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
      JZfmwwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Subscriber_Attendance (2)' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3dd3wUdf7H8dfuZtM2FUjovSmdEHpHQBSVogKe4p2nCCKnIiAqiP0EURFP
      pCggICiicChiUJoiNkQOVAglBAiQJQVCerJlfn9w7JFD70fLBpj38/HwITu7O/v5ZmfnPd/v
      d3bWYhiGgYiImI61rAsQEZGyoQAQETEpBYCIiEkF/PcCwzDweDxlUcsFs1gsaCpDROT8/G4A
      pKamlkUtFywsLIyAgLOaIiIi/4PlajgLyO12KwBERM6T5gBERExKASAiYlIKABERk1IAiIiY
      lAJARMSkFAAiIialABARMSkFgIiISSkARERMSgEgImJSCgAREZPy+wV00tLSWLNmDcHBwdxy
      yy3k5+ezatUqqlatSrdu3bBYLHzzzTfs37+fG264gdjYWNLS0vj888+pU6cOnTp1wmKx+Lts
      EZGrjl8vBpefn0/btm2pWbMmAQEBzJw5kz//+c8UFxezf/9+pkyZQnR0NPfccw9NmzYlJyeH
      DRs20K1bNyIiIvj111955513uPHGG0usVxeDExE5f37da27cuJHs7Gz69etH9erVKS4u5vvv
      v+fQoUMsWLCApUuXUq5cOYYPH87o0aNp2LAha9asISkpieTkZF599VWWLVvGjTfeWOL6/16v
      F5fL5c+miIhc8fwaAE6nk8LCQjZv3swnn3zCk08+id1uJzIykooVK5KVlQVA69atCQ8PJzQ0
      lP379xMaGorD4aBixYps27YNOHXUfzoEDMPAatV0hojI+fBrANSqVYuIiAj+8Y9/4HQ6ycnJ
      wePxsHfvXrZv307NmjWJjo5m+/btHDp0iOzsbNq1a0d2djaHDh3yPQbAbrf71qshIBGR8+fX
      vWbnzp1p2LAhDRo0IDg4mH/84x8UFBTQsWNH7HY7K1asIDw8nOuvv54VK1YwcOBAWrduze23
      307r1q0JCgoiISHBnyWLiFy1/P6LYG63myNHjlC+fHkcDofvJyjDw8MJDw8HIC8vj6ysLCpX
      rozNZsPj8ZCamkpUVBQOh+Oss4DUAxAROX/6SUgREZPSzKmIiEkpAERETEoBICJiUgoAERGT
      UgCIiJiUAkBExKQUACIiJqUAEBExKQWAiIhJKQBERExKASAiYlIKABERk1IAiIiYlAJARMSk
      FAAiIialABARMSkFgIiISSkARERMSgEgImJSCgAREZPy+y+p5+bmcvp36B0OB8XFxbhcLgCC
      goIIDAwkPz+f3NxcKlSogNVqxev1kpGRQVhYGKGhof4uWUTkquTXHoDL5SIuLo4mTZrQpEkT
      kpKSGD16NI0aNaJJkya8/fbbJCcn065dO1q1asWECRPweDxMmDCBVq1a0b59e5KSkvxZsojI
      VctinD4c94MDBw7QokULEhMTsdvtREZG0rFjR0aPHk2vXr0IDQ3l6aefxul0Mm7cOLp3784X
      X3zBddddx6ZNm5g6dSqxsbFMnTq1xHrdbjcBAX7vzIiIXNH8utd0Op0YhkHjxo1p06YN7733
      HpmZmYwYMYIqVaowe/Zs9u7dS69evWjcuDERERF8/fXXRERE0LhxY9q1a8eaNWuAU70Jr9cL
      gNfr9Q0jiYjIufFrALRo0YKkpCROnjzJDTfcwNq1a/n+++9xu9089dRTzJw5k4iICI4fP05+
      fj4FBQVUr16dgoICCgoKOH78OBEREQDY7XbfetUDEBE5f37dayYkJDBnzhxiY2PJzMwkNjaW
      fv360bRpU9atW8d9991Hw4YNefTRR9m1axexsbH07t2bSpUqcd999/Htt9/yyiuv+LNkkStS
      cuoJioo9ZV3GBYlwBFGlQnhZl2EKfp0DyM3NZeXKlRw5coTOnTvTpk0bNm7cyNatW6lduza3
      3HILAQEBfPrpp+zZs4dBgwZRs2ZNDh48yIcffkiDBg24+eabsdlsJdarHoBISQ+/kcABZ1ZZ
      l3FBurWoxehB7cq6DFPwawCUFgWASEkKADkX+iKYiIhJKQBERExKASAiYlIKABERk1IAiIiY
      lAJARMSkFAAiIialABARMSkFgIiISSkARERMSgEgImJSCgAREZNSAIiImJQCQETEpBQAIiIm
      pQAQETEpBYCIiEkpAERETEoBICJiUgoAERGTUgCIiJiUXwPAMAweffRRHnjgAR544AGcTic/
      /PADQ4YMYfz48WRnZ1NQUMBTTz3FoEGD2LBhA4ZhsHHjRgYNGsRTTz1Ffn6+P0sWEblq+TUA
      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
      504yMzNp0qQJX3zxBY0aNSIvL4+ePXsyadIkNmzYwBdffEGLFi0AsNlsvvW63W4sFos/myIi
      pcaiz7Of+PUw4fDhw9SrV4/nnnuOoUOH8uOPP/LZZ5/Rr18/UlJSGDNmDCNHjqSwsJARI0Yw
      adIkGjRowHPPPceIESMoKChg5MiR/ixZROSqZTFOj6OUEcMwKCoqIjAwEKv1VB55vV6Ki4sJ
      CgrCYrH87mPO5Ha7NQQkcoaH30jggDOrrMu4IN1a1GL0oHZlXYYplPle02KxEBwcXGKZ1Wot
      sez3HiMiIhfnyp0pEhGRi6IAEBExKQWAiIhJKQBERExKASAiYlIKABERk1IAiIiYlAJARMSk
      FAAiIialABARMSkFgIiISSkARERMSgEgImJSCgAREZNSAIiImJQCQETEpBQAIiImpQAQETEp
      BYCIiEkpAERETMqvAWAYBmlpaXz77bekpqZiGAZFRUVs3ryZvXv3YhgGhmGQnJzMpk2byM/P
      ByA/P59NmzaRnJyMYRj+LFlE5KoV4M8X++233+jTpw/R0dGkp6ezefNmnn76aX766SdOnjzJ
      /PnziYyMpH///sTExFCnTh0++ugjBg8ezP79+8nMzGT58uV06NDBn2WLiFyV/BoA0dHRrF27
      lgoVKhAXF8ePP/7Ip59+yq5du3j33XeZP38+0dHRDB06lMcee4zGjRvz9ddfs3nzZvbs2cPL
      L7/MggULzgoAwzDweDz+bIrIZe7K7SkbhlefZz/xawBUrVqV7du307NnTzp37ky9evUICAig
      SpUq1K1blzVr1lBYWEifPn2IiYkhPDycHTt2EBERQYUKFahTpw6ff/45AC6XC6/X61u3hoZE
      /uNK/jgYBgoAP/FrABw9epTevXszfvx4HnzwQY4fP47L5SI1NZX9+/dTqVIloqOj2b9/P+np
      6eTk5NC8eXOys7PJyMggOTmZSpUqAWC3233rdbvdBAT4tSkilzWLxVLWJVwwq9VKYGBgWZdh
      Cn7da65fv57jx4+zaNEiFi1axJQpU+jXrx89evQ4aw4gISGBDh060KVLFzp37kz37t3JyMhg
      +fLl/ixZROSq5dcAuOGGG9i2bZvvdvXq1enSpQtbtmwhJiaGhg0bArB582aOHDlCq1atsNvt
      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
      vJgaNWoQGxvLv/71rxK9oHfeeYdrr72WrKwsCgsLycvLY8uWLaSkpBAXF8fWrVt58sknKSws
      5I033iA0NJTXXnuNmJgYiouLyc3NZe3atYSEhPDNN9+Qn59Pr169ePHFFxkzZgxPPvkkVquV
      adOm8eabb5Kdnc3+/fuZOHEikydPJiwsjNzcXAYOHHiJtoj/sNlsLFmyhBUrVrB48WJcLhf3
      3HMPVquVyZMn89BDD/Haa69x+PBhpk6dyuuvv84rr7xCamoqkydPZvjw4eTl5TFt2jTef/99
      wsLCcDgcPProozzzzDO89dZbDBw4kMLCQp566insdjtTp05l4cKFrF+/np49ezJq1KhL2iaP
      x8O6det47bXXqFevHm+++WaJ+7/++msCAwNp3Lgx69ato169elSrVo2ffvqJffv2ERISwtGj
      R1m9ejX5+fnk5+dz6NAhTp48icfjYc+ePYSHh7Nnzx7S09PZvHkz6enp1K1b93e3z4KCAh54
      4AFq1KjBddddR6dOnTh27BifffYZXbt2ZejQofTu3ZtXX32V1q1bc+zYMebPn09QUBDt27cn
      OzubcuXKnVPbMzMzmTVrFitWrGD69OlUqlSpxN9lxowZjBw5knnz5hESEkK3bt346KOPaNGi
      hXoA3bt39yXkAw88QHJyMvHx8bRs2ZKMjAzq1atH+fLlefDBB7n33ntp2rQpb7/9NgEB/8lO
      q9XK0KFDefjhh3n00Uex2+188cUXZGZm8v333/uOKrt27UpgYCCzZ89m6tSpNGvWjNatW5fK
      KW3Z2dm0aNGCqlWr8vXXXxMREcHChQvZsmULAAkJCdxyyy2MHj2aevXqMWvWLKpVq+brsvbs
      2ZMNGzawceNGevXq5VvvunXriI+P56OPPgKgdevW/PLLL2zdupU77riDtWvXUlBQ4Dsrq0eP
      HqSkpDBlyhRGjhxJcnIycXFxNG/enOLiYmrUqEFYWBijRo3ikUceoVy5csyePZvu3bszbNiw
      8z7bIyUlhTZt2tC8eXPWr1+Pw+FgyZIlbNq0CYBVq1Zx2223cf/992OxWPj0009p2bIl+/fv
      L7GeH374geTkZHbu3Mn27dvZsmULNpsNh8PBoUOHqFixIp999hnh4eHcfPPN7Ny5k08//dT3
      /LS0NG6//XbuvPNOQkNDmTNnDuvWrSMjI4OpU6dSpUoV7HY7c+fOZc2aNdSsWZPc3Fx++eUX
      4uLi6N69O+3atTvPd/3c9O3bly1btjB//nz++te/cuDAAdq0aUN8fDwHDhygQ4cO5Obm8tRT
      TzFq1Cg6dOhAfn4+EydO9O24Q0NDueOOOxgwYACvvvoqNpuNf/7znxQVFbF27VrS0tIA6Nev
      HwcPHmTRokVMmzaN7t2706hRo0vepgULFjBs2DAmTZrEP/7xD3bs2MHChQvJyMjAMAy++OIL
      WrduzeOPP06DBg1YsWIFLVu25MCBA1itVtq1a8eGDRvIzc2latWqvvWOHTuWNm3akJOTg8Ph
      4JprrmHVqlU0bNiQoqIivv32W9q0aXPWZ7hOnTrUrVuXBx98kPvvv59Dhw7RrFkzGjZsSHh4
      OFlZWfTp04cHH3yQ9u3b06RJE1avXk2nTp246aabiIqKOqd2G4ZBly5dOHDgABs2bKBjx46s
      Xr2aDz/8EIDExETq16/PzJkzycvLY+3atbjdbsLCwgANAbFhwwYeeeQR5s+fz+DBg4mJieHQ
      oUOkpqbicDg4fPgwt956KxMmTOCJJ5743Z21YRj079+f7du3Y7PZWLRoEXCqZ3DmGODpDaCo
      qIjJkyeTlJTEhAkTSmXsPSwsjHfffZf169czbNgw0tLS2Llzp6+LmJGRQcWKFTl8+DBNmzYl
      JCSEsLAw3wRb/fr1SUlJITExkQYNGvjW26FDB/75z3/Sp08fAOrVq0daWhpbt27l9ttvZ+XK
      lVSrVs13VJSQkMDjjz/OkiVL6Nevn+/vm56ejmEYpKSkcOedd/L888/z6KOPkpuby5NPPsn6
      9euZN2+eb0dyripVqsTs2bP5+OOPefDBB8nKymL37t0cOXIEgJycHMLDw8nIyKBChQp06tSJ
      pKQkqlevDpx6z87s2Z05Tt64cWPq1KnDNddcQ4MGDfB6vSxYsIANGzYQHR1d4n2MjY3lww8/
      ZPHixbRr1460tDSWL19O3759ycjI4NtvvyUwMJBq1aoB0LFjR6pVq4bdbqdixYrExsZSpUqV
      82r7uVq8eDHTp09n5cqVdO3alQoVKnDw4EFSUlKoUKEC3377LSNHjmTmzJncfffdfP/994wY
      MYIZM2bw5z//GQC3283f/vY3fvrpJ3bt2sWaNWt+92/WqlUrateujdVq5eWXX+arr77i73//
      +yVv0y233ML999/PY489xowZM8jIyGDnzp0UFhZiGAYhISEcOHCAOnXqcOLECd/7fnpnf911
      1zFr1iwaNmxY4uDuiSeeYMWKFYSGhgLQpk0b5s6dS9u2bYmKiuLzzz8nPj7+rHpSU1MZMGAA
      w4cP5+9//zuxsbGkpKSQlZVFTk4OoaGh9O/fn7i4OJYsWYLL5eK+++5jw4YNbNiwgX379p1T
      uy0WC7NnzyYrK4uhQ4eSmJjIgQMH2Lt3L3Cqx1ujRg22b99Ot27dOHnyJNdee61vjtP0AbBi
      xQrS09P5y1/+woABA7j77ruZMWMGQ4YMYdiwYaxfv55jx47xxBNP0L59e1avXk2HDh04duwY
      1113HWlpaXi9XoYNG0bPnj3517/+Rbdu3ahSpQpDhw7lyy+/BCAoKIixY8cya9Ys+vXrx5tv
      vklaWhqhoaGX7JzeM9lsNgYOHMiqVasYOnQooaGhTJ48mZtvvhk4tYNPTEzkpptu4vXXX6dh
      w4a89tprDBgwAIDAwEAaNGhA+fLlfUcLcOrIr2bNmr7hpHLlyhEbG4vNZqNevXqkpKTQsmVL
      X5uWL1+O0+nkrrvu4vbbb+fWW2/lyy+/pFOnTtx777188803OJ1Oxo0bR5s2bVi+fDndu3fn
      3nvvpU6dOoSHh59XuwMDA7njjjtYvXo1/fv3JygoiGeffZYhQ4YAUL16dVJSUujduzffffcd
      v/32G3v37iUuLg63202vXr244447qFKlChMmTOCdd975w9eyWCzk5uaSmJh41pcnU1NTue66
      6+jVqxfFxcW0aNGCzz77jN69ezN48GDfcNl/z81YLBaaNWvG1KlT/+drXyjDMFi2bBmHDh1i
      wIABjBw5kvvvv5/x48czduxYhg8fzieffMKxY8cYPnw4vXv35pNPPiEtLY0RI0b4eoP5+fkM
      HDiQvn37cvLkSdq0aUOlSpXo2bMnv/zyC3DqIGTw4MGsW7eOdu3aMWvWLLKzs0sMyV0qFSpU
      YMKECXz66adUr16dHj16MHnyZKpVq+Y7aKtVqxYul4vk5GR2797Nzp07adu2LQBxcXEkJibS
      vXt3AN9zYmJiqFGjhm+INj4+np9//pmWLVvSoEEDDh069Ls9mq+++opDhw7x4osvcs0119Cl
      Sxf2799P27ZtueGGG8jMzOTnn39mwYIFvlGFTp068Ze//IWwsDDKlz/3bzJ36tSJpUuXMmnS
      JNxuNyNHjmTChAm+Nu/atYvBgwczY8YMGjRowPTp0+nZs+epdpr9i2D5+fm+NDzdxT9x4gQF
      BQVUrlwZl8vlO3vHYrEQHBxMQUGB7/nh4eFYLBaKiorIzMwkIiKCsLAwCgoKOHHiBJGRkQQG
      BuJ2uykqKsJqtRIREUF+fj7p6enExsb6ji78yeVyMXnyZJo2bUrTpk1JSkoiPj6ecuXKUVhY
      iMVi8U1sWa1WPB4PNpsNt9tNaGgoBQUFWK1WgoKCfBOtoaGh5ObmEhgY6Bu6+e+/b1hYGNnZ
      2WRlZVG1alVcLhdFRUXAqb9vaGgoqampFBUVUb169Uv+hZ+CggJeeukl2rVrR926dTl48CC9
      evXCYrGQk5OD1+vFZrMRGBiI0+mkfPny2Gw2DMPAZrPh9Xp9OwfDMDAMg7S0NCpUqIDdbicw
      8NSlO3JycnxtOt3mnJwcqlevjmEYvrmFChUqUFRUREhICMXFxdhsNgICAnA6nb5t6VIyDIP8
      /HzfJGNAQAChoaG+nlZsbCyFhYW+3ozVaiUgIKDE7fDwcAzDoKCggOPHj1OuXDlCQ0PJzs4m
      Ly+P8PBwgoODKSoqoqCggODgYBwOBzk5ORw/fpzKlSv7/YtcSUlJzJ07l/79+xMVFUVycjK9
      e/f2ve8Oh4O8vDxCQ0MpLCwkKCiIoqIiAgMDCQgIICcnh7CwMLxeL3l5eTgcDjweD0VFRYSH
      hzNnzhzfMCPAww8/XKLnfOZnvmrVqlgslhInKISEhJCZmekbggoJCbkkQ8OGYfD2229jt9t9
      8xCVK1embt26uFwuBYCZeb1edu7cyf79+6lZsybNmjUzxVfsvV4vO3bs4MiRI8THx1OxYsWy
      Lkn8ID8/ny1btpCbm0urVq1KTJZe7ZKTk/ntt98oX7488fHxvqFeBYCIiEmZfg5ARMSsFAAi
      IialABARMSkFgIiISSkARERMSgEgImJSCgAREZNSAIiImJQCQETEpBQAIiIm9X9iCyF5dwOS
      NwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Subscribers' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3daWBU5aHG8f9sGRKysBnZEjbZQ4CwFGOj7ItoESgqiAEsiAJXxd4rFBFj
      Qa3WuqEiGC2gsgW0BVlkTYBIwQXZkxACxCAQEiAJWSaTmbkfkBSKUKgZJuU8v09hMvOe55ww
      55l3zjkzJo/H40FERAzH7OsAIiLiGyoAERGDUgGIiBiUCkBExKCs/3pDSZkLR5nbF1lEROQG
      0gxARMSgVAAiIgalAhARMSgVgIiIQakAREQMSgUgIhWupLiY7JMnKS11+DrKdTl9+jS5OTm+
      juF1LpeL7JMnLz8NVETkApfLxeovVrAteSsF+fnUrVeP3v3uJqpjp6s+7ovlf2PWzLd59Y23
      6NCp81Xvm33yBG++9mcAWrdpw0OxI8t/dzA1lR9+yKTL7dEEVK0KwKnsbPbs3kXzFi2pV7/+
      L1vBf/HEY2OwWq3MXbC4Qse9VuvXrmHb1q0AmEwmAoOCaNO2Hd179MRkrrjX6xmH0nnskZEq
      ABG5snkfxfPpvLkEBQVRxd+f/fv2kpOT828L4HpsS05m+7av8POzk3pgP0OHx2L+aWe37svV
      LFuymLkLFpUXQFpqCi/GTWPi/02q8ALwtfS0NBI3biAoKAiz2Ux+fj4r/vY5Z0+fZvADD1b4
      8lQAInJF679cQ0hICAs/+zt2u52cU6c4sG8vACv+9jknThxnzGPjAJj74QeEVKvGwMFDyh9/
      6OBBNqz9EpfLxW8fHErTZs0vW8b2bV9RpUoVfjNwEEsWLiAtJYUWrVqRvGUzu7//HoBFn35C
      UFAwd3XrzpqVXwCwOXEjWT/8QK++fWlyW1N2fvctnyUsxlHiIPrXMQwYNBiTycTa1avIOHSI
      LtHRfLl6FW6Xi6EPx9KwUWM8Hg/rv1zDN1/voGatWhQVFhEcEgxAQUEBa1au4GBqGkXFhTRv
      0ZIhDwylir//VccE2Lo5iTVfrKDU6ST61zHcN/i3lJSUMP+jD0lNOcAtoaE8PHIU9eqH/ex2
      /9Prb9KiZStSDxxg3JhH2Pndtwx+4MHy5Q4fMZLFCz+ldUQkXaKjr7juu3Z+x+bETWSfPElg
      YCB33/sb2rRtV74cFYCIXFG16jVIPbGfd958nf73DqB5y5bEdO0GQOLGDezbu6e8AD5LWEKD
      ho0uKYA5s94lOCSEvLNn+ebrHSxI+Ax7lSrlv3eUlPD9d9/Stn0Uv7o9miULF7DjH9to0aoV
      +/bu4eiRwwBsSdyExWKlQaNG7PzuWwD27t7DwdQ02rRtS1FREc889QS169SlatWqzHzjL1Sp
      UoW+/e9hc9Imtm3dSsKiBVgsFlwuF7m5ubz21kwSFi1k9rszsdlsBFStSl7e2fICSD2wn9nv
      vkP9sHBKSkrYtvX822DjnnjqqmOuXP53Xn/1T1QNDKR2nTpsWPsl9w3+Lc9Pmcx333xNVMdO
      bE1KZO/uXcxbuASLxXLZdj+dm8vhjEMkbdoAQMvWrQHKl3v8x2Ns3ZzEI4+OpWpg1Suue/zs
      WWQePUqdOnXZvu0rkjZt5OPFS8uXo4PAInJFY8eNJygomFUrljP+0d/x2CMjyUhPv+bHT/vj
      DJatWMXd9/6Gs2fOlO+8L9j53Xc4HA46du5Mq4g22O12tv9jGwCPPj6ee+8bCMC7H3zI56vW
      0K//PfzhuecBGPfEk3y+ag13xNzJ50sTMJvNvDP7A96ZE0/NWrVY9cXyS5b1108WsnL9JoKC
      gzmdmwvAsiXn31qat3AJn32xmtp16pTf/7ZmzViw9HNm/3Ueb896n4CAAPbu3n3VMT1uN3/9
      YA7BISHMW7CYOX+dz8t/eYOjRw7zzY7tDBryAK+8/iZjHh/P8R9/vGx7XPDc5GcYHTucxQs+
      Jeaurjz40MOX/H7HP/7Bw6MeIeaubldd96f+dxLLVqzi1Tff5oFhw3E4HBxMSysfRzMAEbmi
      tu2j+DRhGZs2rGfdl6vZu3s3cVP/wPxFCdf0+KqBgZhMJqI6dmLViuWXnWGzfVsyACn7D5Cb
      +wEBVauSemA/Z8+epVq1atec89gPP+DxeJjyf78HoKiwkOPHfrzkPnXr18dqtRIQEACAw+Eg
      59QpOv2qC7fWrg2cP/B6QX5ePn+a8QJpKSlc+N4sp9N51TELzhVw5sxpYu7qSvUaNQAIDAxk
      187vANiStIm9u3dRWFgIwPFjx+BnDqc8FDuSGjVrsnfPbjatX8ecWe/y+IQnyn8/45VXyw+u
      X23dtyYlMnHCYgrPnSt/rNNZWv6zCkBEruhgWipNmzXnngH30f83A/ifsWM4sH8fxUVF5+9w
      jV8oePLEcQD8/QPKb/N4PGzf9hUAG9evveT+32z/Bz379C3/d1mZ67Ixy8rKyn/28/PD7XbT
      s09frNbzb6lYrbarZrLZbFitVs6dK/jZ3380530OZ2Tw5zffpknTZjz2yIirjgfg7++P1Wrl
      xPHjeDye8kLx8/MDoEGDhkTHxJTfv3VEm58dJzomhhYtW/GbgYPYse0rkjZuuKQA2raP+rfr
      fvjQIeb/9UO69+rNmMfGsX3bV7z52quXLEcFICJX9PSE8TRq0oQ2kW05d66AtNQU6tWvTxV/
      f2w2K06nk5lv/IWC/Px/lsJF1n/5Jfv37iVh0UJsNhtto/654zp6+DAnT5ygZ5++/P6ZyQBk
      ZBxi/JjfseMf2+jZpy81atQEIP7994hoE8ngBx4ov23558twOEroEv1r2nfsyP59e/nm6+10
      7daD06dzOZKRQb977r3iupnNZm5r2owD+/Yxa+bbWK0WcnNyymcDhYWF4PGQm5vLzm8XcDo3
      l6pVA6+6vWw2P7r37MXaNav504w/0rxFC47/eJwRj/zu/FlU+/fRrkNHQkJCOLB/H7fWrkPj
      2267bJyERQupVq0aGYcOUVhYSMvWEVdc5pXWPSw8HIAyp5Pd3+/ky1UrL3usCkBErqhbz55s
      WPsl+/acf+/7tmbNeGbKVEwmEzF3deObHTv427KlRLZth8V66e4kvEEDvt/5HWvXrCIgIID/
      nTyFmjVrlv9+x/bz7/V37Pwr/Ox2AJq3aEm16tX5esd2PB4Pvfr1Y9UXK/jHV8n846tk+g84
      fyA6+tcxfLV1C3Pee5e69eozdHgsRzIy+GrrFv6RnIzFYqF7r97/dv1GPzaO5yY/w9LFC2nQ
      sBF+fvbyV+397/0Nu3Z+x8t/jKNV6wiq+Ptf0zZ7/Iknyc3NZf2Xa1j/5RratmtPYFAQU6bF
      8fqrf2LOe+8AcEtoKL369vvZMRI3rAfAPyCALtF38D8Tf3/F5V1p3Zu3bEWz5i3YnLiJ7du+
      Ki8R00WPNf3rl8Lr+wBE5GJut5vTp3Ox26sQFBR0ye9On87FVebiltDQS26/eLdy9swZAoMC
      sdn8/uPln8rOJqBqAEFBweXjnz1zBrfbTY2aNct32ucKCjhXeI4aNWqWv+3y7xQXFXH6dC51
      6tYrv/7g4uznzp2jXv36lxwfuBZnz57BVeaiRo0a5Rdxud0uTmWfwl6lCiEhIdc95tX83LqX
      lZXx47EsatasRdXAy2cvKgAREYPSaaAiIgalAhARMSgVgIiIQakAREQM6rLTQK1mE1jVCyIi
      N7vLzgISERFjuGwGUFBQQEHBz18a7Qt2u/2az+cVEZFrV+lnAC6X62c/LlVERH4ZvdkvImJQ
      KgAREYNSAYiIGJQKQETEoFQAIiIGpQIQETEoFYCIiEF5tQDmzJlDREQEjz32GCkpKXTo0IE7
      77yTnJwc3nrrLVq0aMHUqVMpLi6mX79+REZGsm3bNm9GEhGRn3jtQjCn00nDhg2ZOXMmbdu2
      5Y033iA6Opq0tDRq1KjBq6++SkpKClFRUTzzzDPs2LGDYcOGMXPmTJYtW1Y+zsVf/CwiIhXH
      azOAM2fO4HA42Lp1Kz179iQnJ4fw8HDCw8M5duwY/v7+BAYGUrt2bQ4ePEh4eDhhYWHk5OQA
      5wvE6XTiduvbyUREvMFrXwpfq1YtatSoQUxMDEuWLKF169YkJCSQmZnJsGHDWL58OQkJCWRl
      ZdGnTx/i4uJwu91ERJz/4mKbzQbooyBERLzFawVgNptZtGgR8+fPZ+7cuURHR/Pqq6/SsGFD
      Bg0axG233Vb+u5iYGDIyMkhPT2f69OneiiQiIhfRh8GJiBiUTgMVETEoFYCIiEGpAEREDEoF
      ICJiUCoAERGDUgGIiBiUCkBExKBUACIiBqUCEBExKBWAiIhBqQBERAxKBSAiYlAqABERg1IB
      iIgYlApARMSgVAAiIgalAhARMSgVgIiIQakAREQMSgUgImJQKgAREYPyagGMGDGCdu3a8fDD
      D7N9+3YiIyNp164dycnJvPXWW7Ro0YKpU6dSXFxMv379iIyMZNu2bd6MJCIiPzF5PB6PtwZv
      0KABCxYsoEOHDnz66ads2bKFuLg4GjRoQFhYGCkpKURFRfHMM8+wY8cOhg0bxsyZM1m2bFn5
      GGVlZd6KJyJiaF6dAQwePJi33nqLHj160KBBAwICAujZsyfLly/H39+fwMBAateuzcGDBwkP
      DycsLIycnBwAnE4nTqcTt9vtzYgiIoZl9dbARUVF1K9fn06dOjFlyhQKCwvp1asXWVlZ5Obm
      YrVaSUhIICsriz59+hAXF4fb7SYiIgIAm80GgMvlwmKxeCumiIhhea0A/Pz8sFqtfPvttyQk
      JGCxWFi4cCFdu3Zl+PDhtG/fnvnz5zN37lxiYmLIyMggPT2d6dOneyuSiFyDPRnZTI3f6OsY
      FSqiUSgvjunu6xiVjlePAVQEzQBEbiwVgHHoNFAREYNSAYiIGJQKQETEoFQAIiIGpQIQETEo
      FYCIiEGpAEREDEoFICJiUCoAERGDUgGIiBiUCkBExKBUACIiBqUCEBExKBWAiIhBqQBERAxK
      BSAiYlAqABERg1IBiIgYlApARMSgVAAiIgbl1QLYsmULS5cuZePGjbjdbhISEli7di0AJ06c
      ID4+nsOHDwOQnJzMxx9/jNPp9GYkERH5idWbg0+YMIGBAwfSoEEDZs2axbp16zh58iQmk4ln
      n32Wu+++m759+7Jo0SLGjh1Lhw4dSE1NZcaMGd6MJSIieLkAjhw5wvbt22nWrBnr169n4sSJ
      pKWlkZiYSG5uLnFxcaxbt46lS5cyZMgQhg0bxqOPPgpQPhNwu92UlZV5M6aIXORmnIW73W4c
      DoevY1Q6XisAt9tNamoqOTk59OjRg9/85jfk5+eTn59PcHAwDocDt9tNfn4+tWrVIisri/z8
      fAICAgCw2WwAuFwuLBaLt2KKyL+48Ny7mZjNZux2u69jVDpeK4CioiK6deuGx+PhnnvuYcSI
      EYwaNQqz2cyaNWs4duwYbdu2pXnz5owYMYKYmBi++OILXnnlFW9FEhGRi3itAAIDA9m3bx+F
      hYUEBQUBsGvXLqxWK35+frz99tvk5eURHByMyWRi165dlJSUEBgY6K1IIiJyEa8eAzCbzeU7
      f6D87Z0LQkJC/hnEatXOX0TkBtJ1ACIiBqUCEBExKBWAiIhBqQBERAxKBSAiYlAqABERg1IB
      iIgYlApARMSgVAAiIgalAhARMSgVgIiIQakAREQMSgUgImJQKgAREYNSAYiIGJQKQETEoFQA
      IiIGpQIQETEoFYCIiEF5vQDOnj1Lfn4+TqeTU6dOcerUKUpLS3G5XKSnp+N0OgHIz88nMzPT
      23FEROQnXi2AnJwcWrZsyf/8z/+wYcMGOnbsyNChQ/n+++8ZOXIkY8aMoV+/fpw4cYKOHTsy
      YMAA5s+f781IIiLyE6s3B3/ppZcYMWIEx48fJz09nSZNmhAbG0vbtm1JTEwkMzOTDh06MHfu
      XAYNGsTQoUOZNGkSsbGxuFwuAFwuF2VlZd6MKSIXuTArv5m43W4cDoevY1Q6XiuArKwsEhIS
      uP/++0lLS+PJJ58kNDSUOXPmUFJSgtVqxWQyYbfbKS4uxm63Y7fbL/vPZzabsVq92lMichGb
      zebrCBXObDZjt9t9HaPS8dqe1c/Pj1deeYWUlBRsNhsrV64kJyeHEydOUL9+fRo1asSECRMo
      Kipi2LBhDBgwgF27dtGrVy8ALBYLQPlMQEREKpbJ4/F4vLmAs2fPcuLECerWrcvWrVupXbs2
      UVFR5OXlkZiYyO23305oaCj79+8nMzOT3r17Yzb/89CEy+UqLwMR8b49GdlMjd/o6xgVKqJR
      KC+O6e7rGJWO1wvgl1IBiNxYKgDj0HUAIiIGpQIQETEoFYCIiEGpAEREDEoFICJiUCoAERGD
      UgGIiBiUCkBExKBUACIiBqUCEBExKBWAiIhBqQBERAxKBSAiYlAqABERg1IBiIgYlApARMSg
      VAAiIgalAhARMSgVgIiIQakAREQMyqsF4PF4mDZtGvPmzePMmTOMHz+eKVOmUFpaSlJSEsOH
      D2f58uW43W5efvllRo8ezbFjx7wZSUREfmL15uCrV69mzZo1tGzZkvT0dGrWrMnhw4dZsmQJ
      cXFxxMfHM2rUKMxmM0lJSfTv35/nn3+e+Ph4b8YSERG8WABut5tXXnmFyZMn8/e//52DBw8y
      YcIE0tLS2L17NyaTia5duxIeHs7mzZuJiYmhf//+JCQkAOB0OsvHKSsr81ZMEfkXF557NxO3
      243D4fB1jErHawWwZ88eTp8+zR//+EeOHz9Or169SE1NJS0tjcaNG+NwOMjOziYrK4tHH32U
      NWvWkJKSQt26dQGw2WwAuFwuLBaLt2KKyL+48Ny7mZjNZux2u69jVDpeK4C2bduyZ88edu3a
      xapVqxg2bBgjR44kJCSEZ599loCAAPr168eECRMYMmQIq1evZsaMGcyePdtbkURE5CImj8fj
      8XWIq9EMQOTG2pORzdT4jb6OUaEiGoXy4pjuvo5R6eg0UBERg1IBiIgYlApARMSgVAAiIgal
      AhARMSgVgIiIQakAREQMSgUgImJQKgAREYNSAYiIGJQKQETEoFQAIiIGpQIQETEoFYCIiEGp
      AEREDEoFICJiUCoAERGDUgGIiBiUCkBExKBUACIiBuXVAsjPz+fw4cO43W6cTienTp3i1KlT
      lJaW4nK5SE9Px+l0lt83MzPTm3FEROQiVm8NXFpaSs+ePQkKCqJWrVqMGjWKsWPH0rRpU156
      6SVmzpxJVlYWFouFTz75hDvvvJOqVasyceJEYmNjvRVLRER+4rUC8PPz44MPPuCzzz7j+PHj
      pKen06RJE2JjY2nbti2JiYlkZmbSoUMH5s6dy6BBgxg6dCiTJk0iNjYWl8sFgMvloqyszFsx
      ReRfXJiV30zcbjcOh8PXMSodrxUAQF5eHqdPn8bhcNC7d29CQ0OZM2cOJSUlWK1WTCYTdrud
      4uJi7HY7drv9sv98ZrMZq9WrMUXkIjabzdcRKpzZbMZut/s6RqXjtT1rWloaS5YsISQkhC1b
      trBixQoyMzM5ceIE9evXp1GjRkyYMIGioiKGDRvGgAED2LVrF7169QLAYrEAlM8ERESkYpk8
      Ho/HGwOXlpaSlJREQUEBd911Fzabja1bt1K7dm2ioqLIy8sjMTGR22+/ndDQUPbv309mZia9
      e/fGbP7nsWmXy1VeBiLifXsyspkav9HXMSpURKNQXhzT3dcxKh2vFUBFUQGI3FgqAOPQdQAi
      IgalAhARMSgVgIiIQakAREQMSgUgImJQKgAREYNSAYiIGJQKQETEoK6rAMaNGwdAeno606dP
      90ogERG5Ma75s4BeeeUVFi9ezLfffovL5eL555/3Zi4REfGyay6ASZMm0b59eyIjIwGoWrWq
      10KJiIj3Xdengc6aNYvS0lKsVitDhgxh+PDh3solIiJedl0FEBoaSmxsLIGBgYSGhnork4iI
      3ADXVQBt27Zl3rx5ANx9993cd999XgklIiLed10FEBwcTK1atQAdAxAR+W93XaeBRkZG0qNH
      D+rUqcOBAwe8lUlERG6A65oBJCYmsnPnTnJzc2nRooW3MomIyA1wXQUwcOBAGjdujL+/P7/+
      9a+9lUlERG6A6yqAuXPn8u2335Kfn8/jjz/OkCFDvJVLRES87LqOASQnJ/PRRx/x5z//mU2b
      Nnkrk4iI3ADXVQDTpk1j0KBBTJs2jf/93/+96n1dLheTJk1ixIgRrFu3jjNnzjB+/HimTJlC
      aWkpSUlJDB8+nOXLl+N2u3n55ZcZPXo0x44d+0UrJCIi1+aa3wJ65513GDFiBImJiXz33Xek
      pqbSuHHjqz4mOjoas9nM1KlT6d27NzVr1uTw4cMsWbKEuLg44uPjGTVqFGazmaSkJPr378/z
      zz9PfHz8L14xERG5umsugIULFzJmzBgACgsLWbt2Lf369bvi/S0WC5mZmTz//PO88MILJCcn
      M2HCBNLS0ti9ezcmk4muXbsSHh7O5s2biYmJoX///iQkJADgdDoBcLvdlJWV/ZJ1FJHrcOG5
      dzNxu904HA5fx6h0rrkAHn74Ybp27UqnTp3YsGFD+RXBV5Kfn8+DDz7IvffeS7du3Rg4cCCp
      qamkpaXRuHFjHA4H2dnZZGVl8eijj7JmzRpSUlKoW7cuADabDTj/VpLFYvkFqygi1+PCc+9m
      Yjabsdvtvo5R6VxzATz22GN0796dQ4cOMXXq1H/7WUBnz57loYceoqioiKeeeor77ruPkSNH
      EhISwrPPPktAQAD9+vVjwoQJDBkyhNWrVzNjxgxmz579i1dKRET+PZPH4/H4OsTVaAYgcmPt
      ychmavxGX8eoUBGNQnlxTHdfx6h09JWQIiIGpQIQETEoFYCIiEGpAEREDEoFICJiUCoAERGD
      UgGIiBiUCkBExKBUACIiBqUCEBExKBWAiIhBqQBERAxKBSAiYlAqABERg1IBiIgYlApARMSg
      VAAiIgalAhARMSgVgIiIQakAREQMyqsF4HQ6OXLkCGVlZTidTk6dOsWpU6coLS3F5XKRnp6O
      0+kEID8/n8zMTG/GERGRi1i9OfivfvUrgoODCQgI4IknnmDs2LE0bdqUl156iZkzZ5KVlYXF
      YuGTTz7hzjvvpGrVqkycOJHY2FhvxhIREbxcAOvWrWP79u3ExcWRnp5OkyZNiI2NpW3btiQm
      JpKZmUmHDh2YO3cugwYNYujQoUyaNInY2FhcLhcALpeLsrIyb8YUkYtcmJXfTNxuNw6Hw9cx
      Kh2vFsCcOXNYuXIln332GUVFRYSGhjJnzhxKSkqwWq2YTCbsdjvFxcXY7Xbsdvtl//nMZjNW
      q1djishFbDabryNUOLPZjN1u93WMSsdre9aCggLi4uIYPXo077//PtWrVyczM5MTJ05Qv359
      GjVqxIQJEygqKmLYsGEMGDCAXbt20atXLwAsFgtA+UxAREQqltcKwGaz8eWXX5b/3KZNG7Zu
      3cqIESOIiorijjvuIDExkWnTphEaGspnn31GZmYmvXv39lYkERG5iMnj8Xh8HeJqXC5X+WxA
      RLxvT0Y2U+M3+jpGhYpoFMqLY7r7Okalo+sAREQMSgUgImJQKgAREYNSAYiIGJQKQETEoFQA
      IiIGpQIQETEoFYCIiEGpAEREDEoFICJiUCoAERGDUgGIiBiUCkBExKBUACIiBqUCEBExKBWA
      iIhBqQBERAxKBSAiYlAqABERg1IBiIgYlFcL4P3332fkyJGsWLGCM2fOMH78eKZMmUJpaSlJ
      SUkMHz6c5cuX43a7efnllxk9ejTHjh3zZiQREfmJVwsgOzuboUOH8tRTT/H6669Ts2ZNfvjh
      B5YsWcLvfvc7Ro8ezZNPPsmqVatISkqibdu2PP/8896MJCIiP7F6c/BRo0bx8MMPM3bsWL77
      7jsmTJhAWloau3fvxmQy0bVrV8LDw9m8eTMxMTH079+fhIQEAJxOJwBut5uysjJvxhSRi1x4
      7t1M3G43DofD1zEqHa8VgNvtpm/fvkyZMoV7772XuLg4UlNTSUtLo3HjxjgcDrKzs8nKyuLR
      Rx9lzZo1pKSkULduXQBsNhsALpcLi8XirZgi8i8uPPduJmazGbvd7usYlY7XCuDMmTPccsst
      fPDBByxZsoS3336bkSNHEhISwrPPPktAQAD9+vVjwoQJDBkyhNWrVzNjxgxmz57trUgiInIR
      k8fj8fg6xNVoBiByY+3JyGZq/EZfx6hQEY1CeXFMd1/HqHR0GqiIiEGpAEREDEoFICJiUCoA
      ERGDUgGIiBiUCkBExKBUACIiBqUCEBExKBWAiIhBqQBERAxKBSAiYlAqABERg1IBiIgYlApA
      RMSgVAAiIgalAhARMSgVgIiIQakAREQMSgUgImJQKgAREYNSAYiIGJRXC2D58uX07duXkpIS
      vv32W7p3707Pnj3ZsWMH77zzDvfccw9xcXEUFxdz//33079/f7Zt2+bNSCIi8hOrNwdPSUlh
      //79uFwuvv/+e8LDw4mLi6NBgwYMGjSIlJQUoqKiqF+/PtWqVWPcuHG89tprLFu2rHwMj8dD
      WVmZN2OKyEXcbpevI1Q47Ud+nldnAM888wyBgYEANGjQgICAAHr27Mny5cvx9/cnMDCQ2rVr
      c/DgQcLDwwkLCyMnJwcAp9OJ0+nE7XZ7M6KIiGF5dQawceNGCgsL2bRpE2VlZfTq1YusrCxy
      c3OxWq0kJCSQlZVFnz59iIuLw+12ExERAYDNZgPA5XJhsVi8GVNELmI233zPN5PJhNXq1d3d
      fyWvzgCSk5MZNWoU33zzDfXr12fbtm107dqV4cOHs2DBAr766ivmzp1Lt27diI2NpaioiOnT
      p3szkoiI/MTk8Xg8vg5xNZoBiNxYezKymRq/0dcxKlREo1BeHNPd1zEqHZ0GKiJiUCoAERGD
      UgGIiBiUCkBExKBUACIiBqUCEBExKBWAiIhBqQBERAxK10aLiPiQKz+f/OUrqBLZBnvTZuS+
      +27576oNfZD8L1ZiruJP9djh5K9eQ9Xo27FUq1Yhy9YMQETEh/KWfUbJ97twn5VPr64AABTX
      SURBVD2Lyc9G8IDfUDUmBkdKKq68PExWK2WnsnGkpeE6c6bCdv6gAhAR8akao0Zib9kSAJPF
      gr1pUxypqQT26Y0tLIzSjAxcefkU7fgad14ep157HbfDUSHLVgGIiFQiroICCpO/IqhvHyxB
      QYT+YTJB/fpirV0bV14e1jq1KT2UUSHL0jEAEREfOvX6Gzj27af4m2/AbKHsxAmq3hGNJSjo
      /B1MJoq2b6fWk09QlJyMY98+gu/pXyHLVgGIiPjQLU9PvOrvTQEB1HryCUxmM6HPTQW3G9NP
      35fyS6kAREQqMZPJBCbT+Z8tFqjAj8fXMQAREYNSAYiIGJQKQETEoFQAIiKVjNvtpri42OvL
      UQGIiFQybrebM2fOeH05Xi0At9vNqlWrKCsrw+12k5CQwNq1awE4ceIE8fHxHD58GIDk5GQ+
      /vhjnE6nNyOJiMhPvHoa6MCBA1m7di05OTnMnTuXdevWcfLkSUwmE88++yx33303ffv2ZdGi
      RYwdO5YOHTqQmprKjBkzvBlLRETwcgHMmzeP6OhoAL766ismTpxIWloaiYmJ5ObmEhcXx7p1
      61i6dClDhgxh2LBhPProowDlMwG3201ZWZk3Y4rIRW7GWbjb7cZRQZ+fcyO4XK4bktmrBVDt
      ok+tCwgIID8/n/z8fIKDg3E4HLjdbvLz86lVqxZZWVnk5+cTEBAAgO2nK91cLheWCrzwQUSu
      zlZBV5lWJmazGbvd7usY16ysrOyGZPZqAXTr1o0jR47Qq1cvXn75ZUaPHo3ZbGbNmjUcO3aM
      tm3b0rx5c0aMGEFMTAxffPEFr7zyijcjiYjIT0wej8dzoxZWVFSE1WrFz88PgLy8PIKDgzGZ
      TJSVlVFSUkJgYOAlj9EMQOTG2pORzdT4jb6OUaEiGoXy4pjuv3gcZ/5uClImVUCiq/Ngocxc
      G5v7mFeXc0M/C+jC2zsXhISE/DOI1XrZzl9ExIhMuLy+8wddByAiYlgqABERg1IBiIgYlApA
      RMSgVAAiIgalAhARMSgVgIiIQakAREQMSgUgImJQKgAREYNSAYiIGJQKQETEoG7oh8F5y8IN
      e1m0Ya+vY1SoB3tEMLRHhK9jiMhNTDMAERGDUgGIiBiUCkBExKBUACIiBqUCEBExKBWAiIhB
      qQBERAzqhhXA9u3biYyMpF27diQnJ/PWW2/RokULpk6dSnFxMf369SMyMpJt27bdqEgiIoZ2
      wy4E27t3L1FRUcTFxdGgQQMeeOABUlJSiIqKomHDhoSFhTFp0iRee+01li1bVv44j8dDWVnZ
      Vcd2u93ejn/Dud3uf7veIt7gdrt8HaHCXct+5FrcbNvmhs0AGjRoQEBAAD179mT58uX4+/sT
      GBhI7dq1OXjwIOHh4YSFhZGTkwOA0+nE6XTelDt3EZHK4IbNAAoLC+nVqxdZWVnk5uZitVpJ
      SEggKyuLPn36EBcXh9vtJiLi/Mcf2Gw2AFwuFxaL5apjm80336EMs9mM1XpTfFKH/Jcxm6/+
      fPtvZDKZKuT55LnJts0N28OEh4ezcOFCunbtyvDhw2nfvj3z589n7ty5xMTEkJGRQXp6OtOn
      T79RkUREDO2GFUD79u1p3779Ff89evToGxVFRETQaaBynUp/+IGcd97FlZcHQM7bMzn12l84
      8/EnlOXmcurPr3EuMQmPx8PZRYvxeDw+TiwiV6I3meW6nJ33MaVHj+B58AHchYWU7D9A6ORn
      MPn5UbTtHwTcEU3BytWY/Pzwa9wYk8nk68gicgWaAch1CZ06BUtwCMD5WYDbTfbLr1C4eQu2
      8HDOrduApUYNHPv2cS4xkTOffOrjxCJyJZoByH/MUq0a9d6diauggOMTf0+1Bx/AL6w+BWu+
      xBwSjCU0lOJvvsXjdmO6Cc/UEvlvpwKQa+YuKuLktDicJ0+SPeMlQgYP5OyCRXhcLqreGQNA
      WU4OmM34d+hA7ltvYw4K0s5fpJJSAcg1MwcEUOe1Vy+5LSA6Gk9pKWZ/fwD8mjTB77bbMJlM
      3Br3PBjoWgaP00np4SOYrFZsjRpiMplwHDqEyWLFr2EDynJz8ZSUYKtXD1dBAXg8WIKDfR1b
      DMw4z07xCpPFgumnnT9wyat9k5+fLyL5zLn1G3CkpuL88Ueq3nEHpipVKNyyFXdxESEDBlCw
      5kuwWqk1YTx5y5ZRbeiDvo4sBqcCEKkgQf36YqlVi8KkJMwhITj27SOwV0/MgVUpWLUak78/
      1ltDKdq+Heutt+L84QcsISGgM6XER1QAIhXIkZqK68xZTH5+VO3WldxZs8Hlwq9RI6q0icB1
      +jSu06dxHDpE6dGjeNwe/NtG+jq2GJSOzolUkMItW6nSsiX25s0o/vZbTDYb1WOH49ewIfZW
      LQnq2weT3U7VO+/E4yzDVrs27qJCX8cWA1MBSIUoKirydQSfMwcFUrxrFyabH9UeGobJZqNk
      z16qRLYhqG8fPGVlWGrVwq9RQ6o9MASTzUZAx46+ji0GpreApELk5uYSEBDg6xg+5d+uHf7t
      2v3zhho1qPHIqEvuE3jXnT9/XxEf0AxARMSgVAAiIgalAhARMSgVgIiIQVWKAiguLqZfv35E
      Rkaybds2X8eR/4C+vvLnlZWVkZ2d7esYIj+rUjxrV65cSVhYGJMmTeK1115j2bJlvo500yg+
      9gnFx7z/kcx24PQPXl8MAP71HsK/3vAbs7AKUFZW5usIIj+rUswAcnJyCA8PJywsjJycHF/H
      ERExhEoxA2jTpg1/+MMfcLvdRERE+DqOiIghVIoCiI6OJjY2lvT0dKZPn+7rOGIQeUu9/1aj
      2+3G7HCQd9EnpnqL5ZZaBN51l9eXIzePSlEAJpOJ0aNH+zqGGMyNKIALSm/AMuytWqoA5LqY
      PB6P5+IbCgoKKCgo8FWey/j7+xMYGHjV+5w8U0j2mZvrQ7VCq1fl1upVf/E4LsdJ3I6TFZCo
      8jDbb8Viv/UXj1Oyf38FpKk8zAEB+DVs+IvHOVdcyuHjZ395oEqkahUbjetW/8XjuMvO4SrK
      qIBElcNlBVDZ/Pjjj9StW9fXMSolp9OJzWbzdYxKSdvm57lcLgAsFouPk1Q+Rtw2leIsIBER
      ufEqxTEA+c/oFe6Vadv8PCO9ur1eRtw2lri4uDhfh7iagoICgoKCKnzcnJwc3n33XXbu3EnH
      jh1ZtGgRK1asoEOHDnz99dfEx8djs9kICwtj1apVOBwObr31/PvOK1eu5NNPP+WWW24hNDS0
      fMzFixfjdDqpU6dOhef1FrfbjelfvpIwNTWVv//97+zfv5/09HRatmzJm2++id1ux9/fnzff
      fJMmTZqwZMkSoqKiWLp0KUFBQaxatYr69eszb9482rZty8KFC4mMjOTo0aO8++67HD16tPz2
      C9t6w4YNzJ8/n1q1anH06FHef/99cnNzad26tY+2yHkejwePx3PJtvm57fLhhx8SFRX1Hy1j
      2bJlLF++nH379tHxGr4XwOFwsGPHDsLCwv6j5XmT0+lk7ty5rFy5koiICHbv3s2sWbNo0qQJ
      eXl55X//Jk2aMHv2bJKSkoiKisJms7Fnzx7ee+89ioqKaNasWfmYe/fuZe3atURG/vd8Y9rP
      PZ82btzI1q1b+f777ykpKcFms/HOO+/QsmVL0tPT+eSTT2jSpAmbNm2iefPmfPjhhxQXF5Of
      n09KSgpZWVnk5ORw8uRJateuXT7u3r17mTVrFufOnaNBgwa8/vrrHDx4kHbt2rFo0SISEhJo
      3Lgx69atY+HChQQFBVGvXr1Lshm2ALZv347FYuHTT89fJfvRRx9Rr149du3aRU5ODq1bt+ap
      p56ibt26PPfcc7Ro0YKIiAjy8vIYNGgQjz32GG63m3Xr1hEREcHHH3/MwYMH2bhxI1lZWTRp
      0oSXXnqJ9PR0OnToUOH5f6nCwkLee+89Zs+ezX333Vd++7Fjx1i3bh3169entLSUqlWrcvz4
      cZ577jnOnDmD2Wxm6tSp3HPPPUyePJlx48YxadIkevbsyfjx42nVqhVPPvkkPXr0ICEhgQED
      BrBp0yZuvfVWXnjhBVq3bs3rr79evq1PnDhBeHg4b7zxBjExMTRs2JDx48fz+OOP++TjJdxu
      N59//jl/+MMf6NGjR/kJCFfbLuPGjSM9PZ1du3Zx6NAhzGYzs2fPZuXKlWRkZLB8+XK6dOnC
      yy+/zMaNG7n99tuxWq1MmTKFLl260Lx5czZs2FD+5K9duzZ//OMfsVgsHD16lL/97W8kJSVx
      9uxZxo8fT6NGjS7ZUVYGOTk57Nixg5ycHFJSUpgxYwYPPPAAL7/8MnXq1Cn/+7dp04Zz586x
      Y8cOACIiIrj33nu5//77cbvdZGVlYTKZWLZsGXa7nVmzZpGWlkanTp147733WLVqVfn2q0yy
      srJ44YUX2LdvH9HR0eW3r127FrvdTk5ODgEBARw7dgyXy8XTTz9N8+bNWbFiBfPnz6d///7E
      x8czaNAgYmNjad++PZs3byYxMZHdu3eTmppKo0aNaNCgQfnYq1atolmzZjz++OMEBQXxww8/
      kJSURLNmzdi2bRuBgYGsWLGCVq1aUadOHaZNm8YjjzxySW7DHgPo2rUrR48exWq1UrVqVe64
      4w769+9Peno6Q4YM4Z133mHcuHEMHDiQYcOGlT8uKCiIrl27MnHiREpLS4mPjy9/9QMQGRnJ
      okWLmDdvHsnJyYSEhPhoDa/u/vvvJysri7/+9a9s3LiRjz76CIDPP/+cLl26sHjxYhYsWMCv
      fvUrjhw5Qu3atTl58iSbN2+ma9euAGRnZxMTE0NycjIWi4VatWqxfv16Bg4cyCeffELnzp0B
      uOeee0hMTKRdu3bk5+dfsq0HDRrEnDlzGDt2LLfddhv/93//R/PmzfHz8/PJdvnLX/7CzJkz
      +fjjjzGZTPzpT3/i5MmTV9wuFxw6dIhNmzaxfv16Dh8+zNy5cwkICGDXrl1s3ryZH3/8EZvN
      xhdffMHWrVvLH/fhhx+yePFiDhw4wJo1a0hISGD69OlUr16dp59+msTERFwuFwsWLKBhw4bU
      qVPnP55xeNOtt95Kq1atSEpKonfv3lSrVq38/9jFf//u3bvj5+fH4cOH6datGwCjRo3imWee
      4ejRo2zYsIHDhw8THx8PQGhoKIWFhcyePZuZM2dyyy23+HI1f5bH4yEyMpLbb7+d3//+98yd
      O5f169cDkJKSwu7duyksLGTOnDl07NiRjIwMunfvTmJiInl5edSoUQOAL7/8kpiYGIqKiujc
      uTM7d+6krKyMkpIS9uzZc9nfffDgwXzyySc89NBDpKen07dvX+68807S09O5++67WbJkCbGx
      sfj7+/P000/Tv3//y7IbtgCWLl3K3/72NyZPnkzdunXZvn07a9eupUmTJjzyyCN07tyZqKgo
      jh07RlZWFhkZGZw7d46zZ8/So0cPfve737F06VJMJhPJycnl41qtVsrKyujQoQODBw9m6tSp
      PlzLK1u4cCG33noro0aNIiwsrPwtF7vdzsmTJ/F4PGRnZ7N79+7yV5vh4eFkZmaWl1poaChb
      tmzhjjvuAKBTp0589tlnDB48mE8//ZROnToB8Oabb3Lo0CHGjh1LvXr1LtnWgwYNYtiwYTRs
      2JADBw7w4Ycfkp2dzbFjx3ywVeDpp5/mscceY/jw4Zw7d45OnToREBBwxe3icDjYsGEDBQUF
      ZGVllZdCtWrVaNGiBY0bNyY0NJSvv/6azZs306BBg0s+G+jxxx/n4Ycfpn///rzwwgv07dsX
      j8fDkSNHGDhwIHD+Svnq1atTp04dCgoKqIwn7mVlZfHoo48ydepUqlevztmzZ1m+fDl169a9
      5O+/ZcsWXnzxRaZNm1Z+1k1QUBDvvfceH330ESaTiX379nHmzBng/LEch8NBcHAwU6ZMYe7c
      uaSlpflyVS9jMpnYuXMnW7Zs4fXXX6dVq1aEh4cD509j//HHH/nxxx+pUaMGycnJNG3alNDQ
      UI4cOXLJGY59+vRhy5YtBAQE0LBhQ9LS0ggODsZqtVJcXHzZ6fCTJ08mMDCQfv360ahRIzZs
      2MBXX31FvXr1GDx4ME899RTVq1enpKSERYsWlb/bcTHDvgV06tQprFYrR48e5Y477iAkJITc
      3FwmTpzI2bNncTgcnDx5EpvNxqlTp3C5XDRv3pxq1aqxfv168vPzefrpp6lXrx4HDhzg17/+
      NVFRURw6dIi+ffvStGlTNm3axNChQ2nTpk2F5/+l7HY7d9xxB/feey+1atWifv36wPkPLsvN
      zSU6Oprf/va3mM1munTpgslk4u6776Zp06Y0bdqU5s2bExQUVL6Tb9OmDfXr16dhw4b06dMH
      j8fDb3/7WywWC6dOncJkMnH48GH69OmD3W4nNzeXp556iry8PAoLCyksLMTj8bBs2TIGDBjA
      XT66oMlsNhMREcGDDz5ISEgITZo0wW63X3G7FBUVkZGRUf7Kq0WLFnTp0oVq1aoRFRXFLbfc
      QlhYGLfffjtHjx4lIiKCLl26lL/qO3DgAKdPn2bQoEEcPnyYUaNG0aNHDw4cOEBoaCidO3em
      YcOG1KhRgy5duuB0OiksLKRFixY+2T5Xkpubi9ls5sSJEwQHBzNgwADWrl3Lc889h8vlKv/7
      h4WFERISQlZWFnXr1qVu3brs2bOHbdu2MXnyZNq0acOOHTuIjo4mOjqa3NxcgoODeeihh1i/
      fj2tW7dm0KBBmM2V67VrtWrV6NevH507dyYsLIyaNWsCsGfPHu666y6aNWtGZGQknTt3JjQ0
      lKCgIKKioujatSu33HILHTp0IDAwkJYtWwLQuXNnAgIC6NGjB61bt6ZNmzaEhoYyf/58vvnm
      G3bu3El4eDgul4vDhw8zfvx4vv76a9q3b0/37t0pLS3l9OnTmEwmUlNTSU5O5ve//z0N/+U6
      EV0HIJfZuXMn+3+6SGrAgAH/9kI8o9B2kevl8XhYu3Zt+TGAC7O6/0RpaSknT56/qNNkMpW/
      aPslVAAiIgZVueZRIiJyw6gAREQMSgUgImJQKgAREYNSAYiIGJQKQETEoFQAIiIGpQIQETEo
      FYCIiEGpAEREDKrSfxSEiIh4h2YAIiIGpQIQETEoFYCIiEGpAEREDOr/ATV6w28LQo0IAAAA
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='384' name='newsletter_data' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3dd2BV9eH//+dd2QkBAmGEERkCYcseQtgB2SiKaOvWitUPftTWtupP27pq
      K5XWT9UWoQVlg+y9whIQWVWmARJWAoEkN+vee87vDzTfolYZyT335r4e/2DiHa8D557XPev9
      tpmmaSIiIiHHbnUAERGxhgpARCREqQBEREKU89u/ME0Tn89nRRYREfGj7xSAYRicPn3aiizX
      xOPxULVqVZzO7yyCiIhcBVuwXgXkdrtxuVyEhYVZHUVEJCjpHICISIjySwFkZmYyfPhwmjRp
      whtvvEFubi533HEHzZs3Z/LkyZimyT//+U9SUlIYMmQIZ86c4ezZswwdOpSUlBSmTp1KkO6o
      iIgErAo/BGSaJg8++CCGYfDkk08CsHbtWhYtWsSvf/1rxowZw/r160lLS+Mvf/kL//znP2na
      tCkOh4P9+/fz4IMP8tBDD7Fv3z5q1KhR9ro6BCQicmMq/Ayq1+tlx44dlJSUkJ6ezs9//nP2
      7t3LwIED6du3L4mJiaSnp+NwOOjfvz+5ubnMmTMHh8PB0KFD6d+/P2FhYZw6deqKAhARkRvj
      l0tobDYbzz77LJGRkfzP//wPQ4YMoaSkBIDS0lIiIyPx+XwYhkFpaSkulwun00lpaSmmaeL1
      enW1j4hIOavwrarT6SQ1NZVZs2bRpk0bqlevTmpqKq+++ioREREUFhYyYMAAXn/9df7whz+w
      bNky7rrrLpxOJ1OmTCEnJ4eoqCgaNGhQ0VFFREJKhReAzWbjpZde4s033+TkyZNMnz6dlJQU
      zp07x549e5g5cyZJSUlMnz6dyZMnM3ToUB577DEA8vLyOHLkCDNmzCAmJqaio4qIhBTdByAi
      EqJ0H4CISIhSAYiIhCgVgIhIiFIBiIiEKBWAiEiIUgGIiIQoFYCISIhSAYiIhCgVgIhIiFIB
      iIiEKBWAiEiIUgGIiIQoFYCISIhSAYiIhCgVgIhIiFIBiIiEKBWAiEgI8nq9/pkUPj8/n/Pn
      zwMQHR1N1apVycrKwjRN7HY79erVw+v1sn//fhITE6lduzYAZ86c4fTp07Rq1QqXy+WPqCIi
      lVqpx8O2bTtYtmKNfwpg8uTJvPbaa8THx5OWlsYTTzxB+/btSUxMJCYmhp07d/Loo4+Snp5O
      QUEB8+bNw263M3LkSGJiYujcuTP/+te/sNu1wyIicq1M0yQ/v4D0LdtYsWodBQVuOnVs7585
      gR944AGio6N5+umnqV+/PosWLeJXv/oVc+bMoWHDhmRnZ9OuXTs+++wz/va3v5GZmYnT6SQh
      IYGnnnqKli1bsmPHDpKTk8te0+1243A4tGcgIvIDLlzIZe36TWzYtAXTMOnWrRN9e/ckMbGm
      f/YAIiIiWLNmDR9//DGPPvoorVu3xjRN+vXrx0033cTrr79OdHQ01apVo2nTpmzfvh2n00m3
      bt2oWrUqMTEx5Obm0qBBAzweD0DZn9orEBH5rpOZp1i5ai2ffb6XiIgI0gb2o2vnDsTFxQLg
      8/kqvgBM0+Tll18mJiaGefPm8cILLzBx4kRuu+02CgoKyvYA3G43BQUFnDx5kpo1a+J0Ojl5
      8iSFhYUUFBQQFxeH3W4nPDwcuHwCw+VyERYWVtGLICISFEzT5NDhoyxdtoq9+w9Qs2YN7ho7
      mm5dOhEREf6dx1f4ISCv10v//v0pLi7m+PHjjBkzhsTERD7++GMMw8DhcLBp0ybuu+8+MjIy
      OHXqFNOmTcNutzN+/Hjq1q1L3bp1mT9/Pg6Ho+x13W63CkBC3sETOWScuWh1jB/VtnEtEqvF
      WB2j0jIMg8ysU3z08Vy+OHiIhg0acNvgAbRr2+qK7ea3+eUcwLlz59izZw/R0dF06tQJj8fD
      7t27KSgooGPHjlStWpWCggLS09OpU6cOrVu3BmDfvn1kZmbSs2dPYmKuXHlUACIwZeluFqQf
      tDrGj3puXHe6taxndYxKx2cYHDx4mJWr17H78320TGnO4EH9aN6s6VUdHvdLAVQEFYCICiBU
      eb0+dn++l2Ur1nDsqwwaN0pm8KD+tG7VAqfz6o/s++UksIiI3BjTNPF6vaRv2c7K1es4deoM
      bVqn8ItnnqRJ40Y4HNd+QYwKQEQkwOXnF7B+42ZWrFpLcXExnTrewoTHHqRundo39LoqABGR
      AGSaJmfPZbNu/SY2bd6GzWajZ/eu9Ondg5o1a5TLe6gAREQCzIkTmSxbsZoduz4nNiaaIWn9
      6dm9a9k1/OVFBSAiEgBM0+TLg4dZtmI1+/b/m8SaNbln3O107nQLERERFfKeKgAREQt5PB72
      7jvA4qUrOfbVcRo3SmbCzx6iXZtWFT7SgQpARMQChUVFbNu+k9Vr1nP6zLmyK3pubtrYb0Pc
      qABERPwoLy+fjelbWb12AwUFbjp3bM+jD91HvXp1sdlsfs2iAhAR8YMLF3JZvnIN6Vu24/V6
      6dO7J31TbyUhobrfN/zfUAGIiFSQb8boWbFqHZu3bCc+vgppA/vRN7UnkZGRlm34v6ECEBEp
      Zz6fwZcHD7Fi5Vr2Hfg3devU5qf33kWXzh2ICP/uqJxWUQGIiJQTj8fDnr0HWLZiNUePZdCk
      8U1MeOwhWrdqEZCTV6kARERukMfjYdPmbaxcvY7Tp8/Srk2rr8fouekHh2O2mgpAROQ6mKZJ
      Xl4+mzZvY/nKNRQXl9C5Y3ue+NlD1Kldy/Lj+1dDBSAico3OZeewas160r8eo+fWHt3om9qT
      GjUSrI52TVQAIiJXwTRNjp/IZPWa9Wz7dBexsTEMGdSfnj27UiUuzup410UFICLyI748eJgl
      y1ay/8CX1KyZwD1330GnDu2IjIy0OtoNUQGIiHyPK6/o+YpGNyXz+GMP0K7ND8+zG0xUACIi
      /6GoqJht23ewfOVazmXnfD1Gz1M0u7mJ1dHKnQpARAS4eOkSm9K3sXbdRgrcbjp1vIXHH3uA
      ekn+H6PHX1QAIhLSvhmjZ1P6NgzDILV3z6C8oud6qABEJOSYpsmJk5msWLWOrdt2UCUuliGD
      B9Cnd4+AGKPHX/xSAB6Ph9LS0stv6HQSHh5OcXExbrebqlWrYrfbMQyDixcvEhkZWXZmvaio
      iMLCwrLHiIjcCK/Px5Ejx1i6fBV79/2b2rUT+ek9d9I5wMbo8Re/bFWnTJlCy5Ytad26NRMn
      TiQrK4vU1FTat2/Ps88+i2mavP7667Rv356uXbty6NAhjhw5Qvfu3Wnfvj2///3vMU3TH1FF
      pBLyer18uuMzXn9zEq++8TaFhUVMeOxBXn7hl/S6tXtIbvzBT3sAe/bsYcyYMUycOJGIiAgm
      T55M7dq1mTp1Kp07d2bkyJG8/fbbLFq0iPfff5933nkHp9NJ27ZtmTBhAgMHDuT++++nTp06
      /ogrIpVESUkJ27bvZNmKNZw5e3nWreefe4rGjQJ7jB5/8UsBnD59mtWrVzNv3jxeeeUVDh06
      RNeuXWnatCl16tRh586dREREkJKSQo8ePZgxYwZOp5NRo0bRokULoqOjOXv2LLVq1cLj8QCX
      DysZhoHP5/PHIogEJK83ONZ/j8dDUVGR396voMDN+o2b2Zi+laKiYjp1aMcjD/6EWrVqApQd
      kg51FV4ApmnywQcf4PF4mD59Oi+//DJ9+vQhNzcXwzDIz8+nRo0alJSUUFpaSm5uLrGxsTid
      TnJzc/F6vRQXFxMZGYndbif86101r9eLy+UiLCysohdBJGA5ncHxLdblclX4XbOmaZKdncOa
      dRtZv3EzDoeDXj270bdPLxKqV6vQ9w5WFV4APp+PRx99lBo1arB7926aN29OWloaEyZMICcn
      h7CwMAYOHEj9+vV58skn2bZtG7/85S9xOp28/PLL7N+/nzp16tCwYcOKjioiQSoj4wQrVq9j
      567dxMbGMnTwQG7t2Y24uFirowW0Ci8Ah8PBM888w5o1a2jevDnjxo2jSpUqvP322+zbt4/F
      ixdTvXp1Zs2axfTp0xk4cCBjx469HM7p5OjRo7z44otERERUdFQRCSKGYXDo8FGWLl/Fvv1f
      kJhYg/HjKscYPf5iM4P08hq3261DQBLypizdzYL0g1bH+FHPjetOt5b1yuW1fD4fn+3ey9Ll
      q/gq4wSNGyUzaEBf2rWtPGP0+ItuBBORoFBYWMiOnbtZtmIN57KzaZXSgl888yRNmzTGbg+N
      G7fKmwpARAJaXn4+6zdsZt36TRQUuOnc6RYeffinNGxQ3+poQU8FICIBKTs7h1VrNpC+eRuG
      aZDaqwd9evckIaF6yAzVUNFUACISMEzTJDPrFEuWrmTHrs+JjY1hcFp/evfqTkx0tNXxKh0V
      gIhYzuv1cvjIMZatWMPevfupU6cW944fS5fOHQjXhR4VRgUgIpbxeDx8vmc/y1as5thXx2na
      pBETfvYgbdu0wunU5qmi6W9YRPyuuLiYrdt3snL1Ok6fPkub1in88tmnaNwoWZdy+pEKQET8
      wjRN3O5C1m1IZ9Wa9bjdbrp27sjPHrmfpLp1dGLXAioAEalwOTk5fDxrB+s3puOwO+jZoysD
      +qdSvVpVq6OFNBWAiFQM08TudRPmzmL2P9NJqBbPsCGD6NG9C1WqxFmdTlABiEgFcJTkEubO
      wllyAcMZSdqQ2xiZ1pvISI3pFUhUACJSPkwDZ/EFwtwncHgK8LniKKyagi+8Kg2bpmjjH4BU
      ACJyYwwvrqJzhLmzsPuK8YZXpbBaG3zhVaxOJj9CBSAi18XmK8VVdIYw9ylsphdPRA2Koptj
      OKNBV/QEBRWAiFwTm7eYMHcWrqKzYANPZCKlUXUxnTrEE2xUACLy40wTu7eQMPdJXMXZmDYn
      pTH1KI2qBTanvvEHKRWAiPx3pomj9BJh7pNfX9ETTXFsIzxRtcBmtzqd3CAVgIh8l+n7+oqe
      LByePHxhcRRVTcEbXk0b/kpEBSAiV3AW5xCen4HdW4g3vBqF1VrjC6uiwzyVkApARMo4Si4S
      mfsFnsgaFMU3x3BGacNfiakAROQy0yA8/xi+sDiKq9ysDX8I0ME8EQHAVXQWh8dNcVwjbfxD
      hApARMDwEJ5/nNKoWpdv5JKQ4LcCWLNmDQMHDmTGjBmcPn2awYMHk5aWxqhRoygtLWXBggV0
      6dKFcePGcf78eS5cuMD48ePp3Lkz8+bNwzRNf0UVCTnhBScBg9KY+vr2H0L8cg6guLiY3/zm
      NxQWFnLs2DHq1q3LoUOHmDRpEi6Xi/z8fCZMmMCrr77KRx99xJ/+9CecTifZ2dk89dRTPP74
      4/Tu3Ztq1ar5I65ISLF5CwlzZ1Ic1wjTEW51HPGjCi8A0zT56KOPSE5OJjr68q5ldnY2YWFh
      TJ06lT59+lC7dm0ARowYQUlJCQsWLMDpdDJy5EhGjhzJs88+S1ZWFlWrVsXn8wFgGAYlJSVl
      P4uEIq/3Btd/0yAi7xg+VwyeqNrlE+p7eDweioqKKuz15fpUeAG43W6efvppmjRpwqlTp4iN
      jWXx4sVs376dnJwcWrVqxYwZMygtLaW0tJTc3Fyio6NxOp3k5uZSWlpKSUkJ4eHh2Gy2somi
      7XY7LpeLsLCwil4EkYDldN7Y/LmXx+zPpaBGxwq9wcvlchEZGVlhry/Xp8ILIDIyklWrVmGa
      Jq+99hqJiYl8+OGHpKenA1CtWjW6du1KixYtuOuuuzhw4ACTJk3C4XAwYcIENmzYQNOmTUlO
      Tq7oqCIhxeYrIazgBKXRSTr0E6IqvAAcDge33HILAL/+9a+JjIykbt26tGvXjry8PAYOHEiN
      GjWYP38+CxcupGHDhvTq1Qu4XA7Hjh1j+PDhuFyuio4qEjpMk/D8DEy7k5KYejrxG6JsZpBe
      XuN2u3UISELelKW7WZB+8Jqf5yi9RNT5PRTFN8MbWbMCkl3puXHd6dayXoW/j1wb3QcgEmpM
      k/C8r/CFxeGNSLA6jVhIBSASYpzF2Tg8eRTH3qSRPUOc/vVFQonhISLvGJ7IWhiuWKvTiMVU
      ACIhJNydic30UhLbUCd+RQUgEiou3/GbRUlMA0yHLp4QFYBIaDBNIvIzMBzhlEbVsTqNBAgV
      gEgIcJRexFmcQ0nsTWC/sbuHpfJQAYhUdqZBRN5RvOHVLs/pK/I1FYBIJecqPIPdW0RJbLJO
      /MoVVAAilZjNV0p4QQal0XUwXJroRa6kAhCprEyTsILjgI2SmAZWp5EApAIQqaTs3gLCCs9c
      vubf7pe5nyTIqABEKqOvR/v0uaLxRCZanUYClApApBJylpzHWZL79Ylffczl+2nNEKlsTB/h
      eUfxRNTAFxZvdRoJYCoAkUomzJ2F3fBovB/5USoAkUrE5ismvOAkJdH1MJ2ag1d+mApApLIw
      TcLzj2PanZRGJ1mdRoKACkCkknB48nAVnaU4Nlnj/chVUQGIVAamQXjeMXxhVfBG1LA6jQQJ
      FYBIJeAsysbhKbj87V8nfuUqqQBEgp3hJSL/GJ6oRE3zKNfEbwVgmiY+nw/DMAAwDAOPx4Np
      mmX/3+Px4PP5yp7j8/mueIyIfFd4wUkwzcvj/ejbv1wDvxXA3Llzad++PR988AE5OTkMGzaM
      5s2b88Ybb2CaJu+//z4pKSn079+fkydPkpmZycCBA0lJSeH//u//VAIi38PuLSLMnUlJbANM
      R7jVcSTI+GWEqIKCAl577TWioqI4d+4c//jHP/B4PEybNo0hQ4bQr18/XnzxRf7xj38wdepU
      Jk2ahNPppGrVqvziF7/g7rvvZvTo0dSsWdMfcUWCgmEYZB/9HMMZiSeqttVxJAj5pQCmT59O
      y5YtCQ+//A3lwIED9OnTh27dulGrVi22bt2Ky+WiZ8+enDlzhlmzZuFwOBg+fDg9evQgIiKC
      U6dOkZCQgNfrBcDj8WAYxhWHjERCyYF/H2Tf/gMUV2kR8OP9eDweioqKrI4h31LhBVBUVMTv
      f/97evTowd69ezly5AgJCQkUFhZimibFxcXExsaWHf8vLCwkIiICh8NBUVERhmFQWlpKWFgY
      NpsNl8sFgMvlwuVyERYWVtGLIBJwSks9LPhkCaVhVfEFwTSPLpeLyEjdmRxoKrwA7HY7zz//
      PKZpcvLkSapUqcLAgQN57bXXyk4EDxgwgDfffJNXXnmF1atX8+CDD+JwOHj33XfJzMykSpUq
      NGjQAJtOcIlgmiZr12/izNlsUjoMZMexS1ZHkiBV4QUQHh7OI488AkCdOnWIi4uje/fulJaW
      smfPHubMmUPt2rWZMWMG7733Hvfccw8PPfQQACUlJRw+fJiZM2cSHa3p7EQACgrcLPxkKf36
      3EpRTC0VgFw3mxmkl9e43W4dApKQ9OE/P2L35/v43f/3K2ZvPMSC9INWR/pRz43rTreW9ayO
      Id8S2GeOROQKGcdPsHHTFkaNuI2YGO0Vy41RAYgECZ/Px8ez5lO/XhI9u3exOo5UAioAkSCx
      c9fnHDx0hHF3jsZu10dXbpzWIpEgUFRczJz5i+jcsT2NG91kdRypJFQAIgHONE1WrlpHXl4+
      o0cN07d/KTdak0QC3PkLuSxesoLBg/pRI6G61XGkElEBiAS42XMWULVqPAP6pVodRSoZFYBI
      APvy4GE+3fkZt48eTmRkhNVxpJJRAYgEKI/Xy6w5C2japDEdbmlrdRyphFQAIgFq85btHD9+
      krvGjtY4WFIhVAAiASg/v4D5C5dw663daFA/yeo4UkmpAEQCjGmaLF66Ep/Px/Chafr2LxVG
      BSASYM6cOcvqtesZOmQQ8VWqWB1HKjEVgEgAMU2Tj2bOo3atRPr07mF1HKnkVAAiAWTPvgPs
      3f9vxt4+smz2O5GKogIQCRAlJSXMnrOQtq1b0qplC6vjSAhQAYgEiHXr0zl79hx33jHK6igS
      IlQAIgEg9+IlPlmynAH9U0lMrGF1HAkRKgARi5mmyfwFi4kID2fwoP667FP8RgUgYrGvMk6w
      afM2TfMofqcCELGQYRjMnD2P5Ib16dK5o9VxJMSoAEQstH3HLg4eOsq4O8fgdDqsjiMhRgUg
      YpHCwiLmzltE1y4dadwo2eo4EoIqvABM0+S9995jzJgx/OQnP2Hfvn2cO3eOBx54gPvuu4/H
      HnuM0tJS1q9fz4gRI5g4cSL5+fnk5+fzv//7vwwfPpy1a9dWdEwRv1uxai35BQWMGTXM6igS
      ovyyB1BaWsodd9wBwIsvvsjhw4dZtWoV3bt3p1u3brjdbu6//3569OjBjh07mDx5Mu+++y5b
      tmwhNTWV++67j0uXLvkjqohfnMvOYdmK1dw2eCDVqsZbHUdClLOi38Bms3H77bfz17/+lT17
      9jBx4kSOHDlCUVER6enpjBw5krNnz1JSUsIjjzxCXFwcixYtwul0Mn78eO677z7+8Ic/cOLE
      CVJSUjAMAwCfz4dhGPh8vopeBJFyN3PWPOKrVKFn9y4UFxdf9+t4vcGx/ns8HoqKiqyOId9S
      4QUAlG2oIyIiOHHiBOPGjWPSpEkcP36c8ePHM3PmTOz2yzsjdrsdwzAwDAO73Y7NZsNms2Ga
      Ztl/w+ViCQ8PJywszB+LIFJuvvjyELt272HCzx4iPv7GRvsMlhPHLpeLyMhIq2PIt1R4AZSU
      lLB8+XJGjx5NWFgY8+fPp2XLljgcDpKTL5/4SkxMxGazMX/+fObOnUvHjh1xOp3Mnz+fuLg4
      DMMgKSkJm82Gw3F5hf+mMESCidfr5aOZ82jR/GbatW1tdRwJcX7ZA9iwYQOTJ08mPj6eN998
      E4A333yTvLw83njjDdq3b8+f//xn3nzzTRo2bMiTTz6JzWbj8OHDTJ48mXfeeYdq1ar5I6pI
      hUrfvJ2TJzN5+aVf4tCXGLGYzTRNs6LfxDTNKw7pfPO7bx/WMQzjip+/ecz3fdt3u924XC4d
      ApKgkZeXz69e/B2dO97C+HG3l8trTlm6mwXpB8vltSrSc+O6061lPatjyLf4ZQ/gPw/d/Ofv
      vj3mybc39N/3GJFg9M00j4ZhMOy2QVbHEQF0I5iIX2RmnmLtuo2MGnEbcXGxVscRAVQAIhXO
      NE1mzllA3bq16dm9i9VxRMpcVwGY5uWVWkR+3J69+9l/4AtuHz1c56wkoFxXARQWFbF15x4M
      QyUg8kNKSkr4eNZ8OrRvS4sWzayOI3KF6yqAoqJiZi1cwZqN27QnIPID1qzdSHbOeW4fMxy7
      LmiQAHPNBeDzGazZtB2v18uCZWtZvWGrSkDke1y4kMuipStIG9iXxJqa5lECz1VfBnrmXA5r
      0z8l9+Il/n3wGKZpYBgm85asBqBfr666ZFPka6ZpMn/hEiIjIhg8qJ/VcUS+11UXQJW4WC7k
      XuKLQ/9v459UJ5ExQwdQJS5GG3+R/3D0WAbpW7bz0P33EBUVZXUcke911YeAIiPCGX1bP2w2
      G4ZhUr1aFSY8MI5mTZKpnajdW5Fv+Hw+Zs6eT+NGyXTq2N7qOCL/1VUXQHFxCQuXrePhe8dw
      c+OGVK0SR3wV3dAi8m2f7tzNkaNfcceY4TidfrnZXuS6XPXaue+Lw4wY3IfEGtVpnFyfjBNZ
      FZlLJCgVFRUxc/Z8enTrTONGN1kdR+QHXXUBdGzXsuy/oyIjaHFzowoJJBLMli5fTVFRMaNG
      DtV5MQl4GgpCpJycPnOWFavWMnzoIKre4EQvIv6gAhApB4ZhMG/BYqrGx9M39Var44hclesq
      gGeeeYbjx48D8Pbbb7Nhw4ZyDSUSbL748hA7du5m7O0jCA8PtzqOyFW55ksUXnnlFebMmUNG
      RgZxcXGsW7eODz/8sAKiiQQHz9fTPLZu1YK2bVpZHUfkql1zAXTo0IGNGzfSrVs3atSowU9+
      8hN69OhREdlEgsKmTVs5feYsDz94r+aqlqByzQWQlpZG7dq1+fzzzzEMg4yMDJo0aULt2rUr
      Ip9IQMvPL2DugkX06d2D+vWSrI4jck2uuQBM0+SZZ54hOjqamjVrAtCxY0cVgIQc0zRZsGgp
      ACOGDbE4jci1u+YCsNlsNG/enCFDhtCxY0cAYmN1R7CEnhMnM1m3Pp177x5LdLTG+5Hgc133
      qZeWlvKzn/0Ml8sFwJQpU+jatWu5BhMJZD6fj1lzFlIvqS7du3e2Oo7IdbmuAnjjjTcoKSkp
      +7lKFd30IqFlz979/PuLgzz9P4/j0ng/EqSua819/PHHWbJkCXD5BphPPvmEW2/9/ptfTNMk
      PT2d9PR0YmJiuPvuu4mPj2fhwoXs3buXu+66i6ZNm3LixAmmTZtGcnIyd911FwAzZ87kyJEj
      3HvvvTRo0OA6F1GkfHk8Hj6aNY8O7dvQollTq+OIXLfrKoAPP/ywbBawhx9+mGrVqv3Xx5qm
      ycyZM4mKimLZsmVs27aNO+64g5///OekpaUxYMAAdu3axYgRI2jZsiVTp06lqKgIp9PJb3/7
      W3r06MHQoUP59NNPiYiIuL6lFClHy1as4dKlfG4fM0KXfUpQu64C+Otf/8pnn30GQHp6OsOG
      DaNly5bf+1i73c6rr77K+vXrOXjwIDfffDPLly/n3nvv5ZVXXqFhw4YsW7aMrKws1q5dy9Sp
      U1m2bBlOp5PHHnuMRx99lEaNGvHVV1/RrFmzsuIxTROPx6PpKMWvLl68xJJlq+jX51aqxMVe
      cSjUCj6fYen7Xy2v12v535V813UVQNu2bUlISABg5MiRDBw48Acff+7cOf7617+yf/9+7rzz
      Tg4fPkxycjJ2u52YmBguXLhAREQELpeL+Ph4CgoKcDqdxMfH43A4iIiIoLi4GNM08fl8wOWT
      cOHh4WUnokX8YcEnS4mOiuS2wQMCYt2z24NjxFGHwxEQf19ypesqgBo1avDaa69x/PhxRo8e
      zZAh//0aaI/HQ15eHosXL2batGm88cYbjBo1im3btnHixAlOnTpFhw4dKCoq4siRI2zevJmm
      TZvicDjYsmULXbt2paCggMTEROx2e9kut9PpvOJnkYp28NARtn26i4cfvDdgpgEcKSwAAB3W
      SURBVHkMliGnbTabPqsB6JoLwDAMnn76acaMGUO3bt14+umnWbJkCcOGDfvex3u9Xh544AEy
      MzOx2Wy8/PLLDBs2jGHDhtG2bVsefvjhstfp27cviYmJLFy4ELvdzvDhw+nZsycTJ06kTp06
      N7ywItfL4/Eye+5CmjS+iU4db7E6jki5uK49gG+a3DAuH3/8oW8hkZGR7Nixg9zcXKKjo4mM
      jARg27ZtFBQUEBcXB8Bzzz3HY489RlRUVNk0ert376awsLDsMSJW2fbpTr7KOM7zz/0PDn2T
      lUrimtdku93OG2+8wbx587j77ru55ZZbGDRo0A8+x+FwkJCQULbx/+Z3VapUuaI84uLirphD
      1el0auMvlisqKmbuvE/o1rUzNyU3tDqOSLm55gKYNm0adevWZeHChXz66ac0bdqUvLy8isgm
      EhAWL11BaamHUcOHBM0xd5GrcU0FkJeXx/PPP09MTAx2ux2n08ny5cvZuHFjReUTsdTp02e+
      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
    </thumbnail>
  </thumbnails>
</workbook>
